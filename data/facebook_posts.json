[
    {
        "project_id": 505401707,
        "content": "𝗙𝗢𝗢𝗬𝗜𝗡 | Playing and managing a local music collection with extensive customization options.  🔥 Super Hot!\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🔨 C++ \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Playing and managing a local music collection with extensive customization options.\n📅 Created: Jun 2022 • Updated: Oct 2025\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Playback of major audio formats (FLAC, MP3, MP4, Vorbis, Opus, WavPack, WAV, AIFF, MKA, Musepack, Monkey’s Audio)\n✅ Native support for VGM and tracker module formats\n✅ Gapless playback\n✅ Play files directly from archives\n✅ Full CUE sheet support\n✅ ReplayGain support\n✅ Waveform seekbar\n✅ Powerful filtering on any field\n✅ Playlist creation and management\n✅ Dynamic autoplaylists based on scripts\n✅ Import/export playlists (M3U/M3U8)\n✅ Library tree with directory structure view\n✅ Integrated directory browser\n✅ Built-in tag editor\n✅ Automatic artwork finder\n\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 1.3K 𝘀𝘁𝗮𝗿𝘀\n🍴 48 𝗳𝗼𝗿𝗸𝘀\n🔍 209 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nfooyin is a customizable music player that supports a wide range of audio formats and provides extensive customization options. It features a plugin system, a scripting language for advanced configuration, and a layout editing mode for complete UI customization. Currently, only Linux is supported, with plans for future platform support.\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/fooyin/fooyin\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫▫\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#alsa #audio #audio_player #chiptune #cpp20\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/9ecfabc3106be5770b925a3cbb0a537f3ac1e4bb19c63a9125ec0b7832c64936/fooyin/fooyin"
        ],
        "processed_at": "2025-10-24T10:14:49.348038"
    },
    {
        "project_id": 486721097,
        "content": "𝗬𝗢𝗨𝗧𝗨𝗕𝗘-𝗧𝗨𝗜 | Browsing YouTube content and playing videos/audio from the terminal without a graphical user interface.  🔥 Super Hot!\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Browsing YouTube content and playing videos/audio from the terminal without a graphical user interface.\n📅 Created: Apr 2022 • Updated: Oct 2025\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Browse YouTube content from the terminal\n✅ Customizable through config files (YAML format)\n✅ Dependency-free (relies on external programs like mpv and yt-dlp)\n✅ View channel, playlist, and video information\n✅ Use search filters\n✅ Save browsing history\n✅ Embedded audio/music player\n✅ Vim-like commands\n✅ Mouse support\n✅ Extensible keybindings system\n✅ Offline library\n✅ Subscriptions\n\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 665 𝘀𝘁𝗮𝗿𝘀\n🍴 21 𝗳𝗼𝗿𝗸𝘀\n🔍 10 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nYouTube TUI is a terminal-based user interface for browsing YouTube. It's written in Rust and allows users to browse YouTube content, view information about channels, playlists, and videos, use search filters, and save browsing history, all from the command line.\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Siriusmart/youtube-tui\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#cli #rust #rust_lang #terminal #terminal_based\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/d2d75c359c5089762fe822c31a942b5b68e1b0fafffb35746d0eeb12c87cfdcf/Siriusmart/youtube-tui"
        ],
        "processed_at": "2025-10-24T10:14:49.348382"
    },
    {
        "project_id": 77419377,
        "content": "𝗖𝗧𝗢𝗣 | Monitoring container resource usage and performance in real-time.  🔥 Super Hot!\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐹 Go \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Monitoring container resource usage and performance in real-time.\n📅 Created: Dec 2016 • Updated: Oct 2025\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Real-time container metrics\n✅ Top-like interface\n✅ Multiple container overview\n✅ Single container view\n✅ Docker support\n✅ runC support\n✅ Config file for saving/loading options\n✅ Filtering and sorting options\n✅ Container log viewing\n✅ Shell execution within containers\n\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 17K 𝘀𝘁𝗮𝗿𝘀\n🍴 572 𝗳𝗼𝗿𝗸𝘀\n🔍 93 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nctop is a command-line tool that provides a real-time, top-like interface for monitoring container metrics. It offers a concise overview of multiple containers and a single container view for detailed inspection, supporting Docker and runC.\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/bcicen/ctop\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#command_line #commandline #containers #docker #monitoring\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/3c33e00037f106b78d8d27fc188540e6d226fa1493487ec433010676bfdec4aa/bcicen/ctop"
        ],
        "processed_at": "2025-10-24T10:14:49.348728"
    },
    {
        "project_id": 441062625,
        "content": "𝗡𝗘𝗧𝗔𝗟𝗘𝗥𝗧𝗫 | Network intrusion detection and presence detection on a local network.  🔥 Super Hot!\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📜 JavaScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Network intrusion detection and presence detection on a local network.\n📅 Created: Dec 2021 • Updated: Oct 2025\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Network scanning for new devices\n✅ Detection of new connections and disconnections\n✅ IP change detection\n✅ Internet IP address change detection\n✅ Plugin system for custom functionality\n✅ Alerting system for unknown devices and changes\n✅ Integration with Pi-hole and UNIFI\n\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 4.9K 𝘀𝘁𝗮𝗿𝘀\n🍴 285 𝗳𝗼𝗿𝗸𝘀\n🔍 27 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nNetAlertX is a network monitoring and security tool that scans your network for connected devices and alerts you to new or unknown devices. It helps with presence detection, network analysis, and building a network source of truth (NSoT) through scheduled scans and customizable plugins.\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/jokob-sk/NetAlertX\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#arp_scan #docker #intrusion_detection #ipam #network_analysis\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://repository-images.githubusercontent.com/441062625/3d4957be-0bb2-4617-bb58-7bb0cf0cbc08"
        ],
        "processed_at": "2025-10-24T10:14:49.349067"
    },
    {
        "project_id": 719438276,
        "content": "𝗚𝗥𝗔𝗠𝗔𝗫 | Creating and publishing documentation, knowledge bases, and notes using Markdown with Git integration.  🔥 Super Hot!\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Creating and publishing documentation, knowledge bases, and notes using Markdown with Git integration.\n📅 Created: Nov 2023 • Updated: Oct 2025\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Visual Editor\n✅ Cross-Platform availability\n✅ Local Storage in Markdown\n✅ Customizable Styles\n✅ Multilingual Support\n✅ Advanced Editing (tabs, tables, video, code blocks, diagrams, Swagger)\n✅ Git Integration\n✅ Documentation Portal\n✅ Migration Support (Confluence, Notion)\n\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 340 𝘀𝘁𝗮𝗿𝘀\n🍴 10 𝗳𝗼𝗿𝗸𝘀\n🔍 112 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nGramax is an open-source, local-first documentation tool that uses a docs-as-code approach. It allows users to create, edit, and publish documentation using Markdown, with a visual editor and Git integration. It supports various features like multilingual support, advanced editing capabilities, and documentation portal generation.\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Gram-ax/gramax\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿✿\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#docs_as_code #documentation_tool #editor #git #knowledge_base\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/ca6d7074909c5edf433fc6933e7b966d2ee27e7ea4341e31765fdbfdb1964921/Gram-ax/gramax"
        ],
        "processed_at": "2025-10-24T10:14:49.349386"
    },
    {
        "project_id": 996250059,
        "content": "𝗗𝗘𝗣𝗬𝗟𝗘𝗥 | Converting Python code to Rust for improved performance, memory safety, and energy efficiency.  🔥 Super Hot!\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Converting Python code to Rust for improved performance, memory safety, and energy efficiency.\n📅 Created: Jun 2025 • Updated: Oct 2025\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Type-directed transpilation\n✅ Memory safety analysis\n✅ Semantic verification\n✅ Support for basic Python types and collections\n✅ Support for control flow, comprehensions, and exception handling\n✅ Generator expressions and functions\n✅ Assert statements\n✅ Async/await support\n\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 225 𝘀𝘁𝗮𝗿𝘀\n🍴 8 𝗳𝗼𝗿𝗸𝘀\n🔍 12 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nDepyler is a Python-to-Rust transpiler that aims to facilitate the transition from Python to Rust by converting annotated Python code into idiomatic Rust. It focuses on semantic verification and memory safety analysis to ensure the generated Rust code preserves the original program's behavior while providing compile-time safety guarantees.\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/paiml/depyler\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#conversion #mcp #port #python #pythontorust\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/5512dda57385e4b08d98a6d5bf712d956c78bdfd556f4404211c0925c208a087/paiml/depyler"
        ],
        "processed_at": "2025-10-24T10:14:49.349711"
    }
]