[
    {
        "project_id": 952822080,
        "content": "𝗩𝗜𝗕𝗘-𝗗𝗥𝗔𝗪 | Creating 3D models and worlds from 2D sketches.  📈 Growing!\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Creating 3D models and worlds from 2D sketches.\n📅 Created: Mar 2025 • Updated: Mar 2025\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ 2D sketching to 3D model conversion\n✅ AI-powered drawing enhancement\n✅ 3D world building\n✅ Real-time updates\n✅ glTF export\n\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 1K 𝘀𝘁𝗮𝗿𝘀\n🍴 169 𝗳𝗼𝗿𝗸𝘀\n🔍 3 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nVibe Draw allows users to create 3D models and worlds by sketching on a 2D canvas. It uses AI to enhance drawings and convert them into 3D models, which can then be added to a 3D world. The tool supports real-time updates and glTF export for integration with existing 3D workflows.\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/martin226/vibe-draw\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/3667d4f127302f776289b861602de188eca364793ce29192c1b1ae649925d43e/martin226/vibe-draw",
            "https://i.ibb.co/mCMttWnB/952822080.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.474187"
    },
    {
        "project_id": 79317191,
        "content": "𝗧𝗬𝗣𝗘𝗦𝗘𝗡𝗦𝗘 | Building delightful search experiences with typo-tolerance and speed.  🔥 Super Hot!\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🔨 C++ \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Building delightful search experiences with typo-tolerance and speed.\n📅 Created: Jan 2017 • Updated: Mar 2025\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Typo Tolerance\n✅ Simple and Delightful\n✅ Blazing Fast\n✅ Tunable Ranking\n✅ Sorting\n\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 22.5K 𝘀𝘁𝗮𝗿𝘀\n🍴 704 𝗳𝗼𝗿𝗸𝘀\n🔍 638 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nTypesense is a fast, typo-tolerant search engine designed as an open-source alternative to Algolia and a more user-friendly alternative to Elasticsearch. It's built in C++ and architected for low-latency instant searches. Key features include typo tolerance, simple setup and operation, blazing fast speed, tunable ranking, and sorting capabilities.\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/typesense/typesense\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#algolia #datastore #elasticsearch #enterprise_search #faceting\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/d200bf2c55784bc96e5c22e9cf009c377ab31fe05bad91b869f6a27beaf6f2e1/typesense/typesense",
            "https://i.ibb.co/d08G8m9T/79317191.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.474492"
    },
    {
        "project_id": 339533345,
        "content": "𝗔𝗦𝗦𝗘𝗠𝗕𝗟𝗬-𝗧𝗨𝗧𝗢𝗥𝗜𝗔𝗟 | Learning assembly language programming, specifically for AMD64/Intel 64-bit architectures.  🔥 Super Hot!\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 💻 Assembly \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Learning assembly language programming, specifically for AMD64/Intel 64-bit architectures.\n📅 Created: Feb 2021 • Updated: Mar 2025\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ AMD64/Intel 64 bit programming tutorial\n✅ Covers instruction sets, registers, stacks\n✅ Explains bits, bytes, words, number bases, math, boolean algebra, bit shifting\n✅ Details memory management, ELF files, MMU, exceptions\n✅ Explores x64/AMD64 registers (general purpose, special purpose, CPU control)\n✅ Describes AMD64 instruction set and addressing modes\n✅ Covers commonly used instructions (arithmetic, boolean, branching, bit manipulation, register manipulation, flags manipulation, stack manipulation)\n✅ Explains assembler source, directives, and macros\n✅ Provides Hello, World examples for MacOS and Linux\n\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 1K 𝘀𝘁𝗮𝗿𝘀\n🍴 73 𝗳𝗼𝗿𝗸𝘀\n🔍 3 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThis repository provides a comprehensive tutorial for learning assembly language programming on AMD64/Intel 64-bit architectures. It covers fundamental concepts like registers, instruction sets, memory management, and assembler directives. The tutorial is aimed at novices and beginners, providing practical examples and explanations to help them understand low-level programming.\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/mschwartz/assembly-tutorial\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/9f8f51c8fe3e29da3bfb6bd72e73bdb8766bda828848eb6fd51e5685f70e5c1f/mschwartz/assembly-tutorial",
            "https://i.ibb.co/JW97MjqD/339533345.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.474750"
    },
    {
        "project_id": 60436054,
        "content": "𝗖𝗨𝗧𝗘_𝗛𝗘𝗔𝗗𝗘𝗥𝗦 | Providing self-contained, easy-to-integrate libraries for game development and other applications.  🔥 Super Hot!\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 💻 C \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Providing self-contained, easy-to-integrate libraries for game development and other applications.\n📅 Created: Jun 2016 • Updated: Mar 2025\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Single-file header libraries\n✅ Cross-platform compatibility\n✅ No dependencies\n✅ 2D collision detection\n✅ Networking library with security\n✅ Tiled map loader\n✅ Aseprite file parser\n✅ Audio loading and playback\n✅ 3D vector math\n✅ PNG loading and saving\n✅ Sprite batching\n✅ Synchronization primitives\n✅ TLS connection creation\n\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 4.6K 𝘀𝘁𝗮𝗿𝘀\n🍴 276 𝗳𝗼𝗿𝗸𝘀\n🔍 15 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe cute_headers repository offers a collection of single-file, cross-platform C/C++ header libraries designed for easy integration into projects without external dependencies. These libraries cover a range of functionalities, including collision detection, networking, audio processing, image handling, and more, making them particularly useful for game development.\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/RandyGaul/cute_headers\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#audio #c #collision #collision_detection #compression\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/6068f7f92a45ddb2b9abc37b09e85bc1c3309bd9f6108f2610f6d94a078797fc/RandyGaul/cute_headers",
            "https://i.ibb.co/8LqRpyN8/60436054.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.475034"
    },
    {
        "project_id": 264764016,
        "content": "𝗔𝗫𝗜𝗢𝗠 | Distributing and managing offensive and defensive security scans across multiple cloud instances.  📈 Growing!\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 💻 Shell \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Distributing and managing offensive and defensive security scans across multiple cloud instances.\n📅 Created: May 2020 • Updated: Mar 2025\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Dynamic infrastructure framework\n✅ Multi-cloud environment support (DigitalOcean, IBM Cloud, Linode, Azure, AWS)\n✅ Distributed scanning with tools like nmap, ffuf, masscan, nuclei, meg\n✅ Immutable infrastructure for repeatable deployments\n✅ Easy instance creation and management\n\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 4.2K 𝘀𝘁𝗮𝗿𝘀\n🍴 672 𝗳𝗼𝗿𝗸𝘀\n🔍 70 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nAxiom is a dynamic infrastructure framework designed to simplify the deployment and management of security scanning tools across multiple cloud environments. It enables users to easily distribute scans using tools like Nmap, ffuf, and Nuclei across numerous instances, accelerating vulnerability assessments and penetration testing. Axiom supports various cloud providers, including DigitalOcean, IBM Cloud, Linode, Azure, and AWS.\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/pry0cc/axiom\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈◈\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#axiom #bug_bounty #dnsgen #dnsx #ffuf\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/9222283b214007c2d6ae81d0fd4fda349bc0df85a28f3466001da67d1948c33a/pry0cc/axiom",
            "https://i.ibb.co/5gkFjRYF/264764016.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.475280"
    },
    {
        "project_id": 920866025,
        "content": "𝗪𝗜𝗡𝗩𝗜𝗦𝗢𝗥 | Emulating and virtualizing Windows x64 user-mode executables within a controlled environment.  🔥 Super Hot!\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🔨 C++ \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Emulating and virtualizing Windows x64 user-mode executables within a controlled environment.\n📅 Created: Jan 2025 • Updated: Mar 2025\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Hypervisor-based emulation of Windows x64 user-mode executables\n✅ Uses Windows Hypervisor Platform (WHP) API\n✅ Clones address space of a suspended process into the virtual environment\n✅ Forwards syscalls to the host OS\n✅ Provides a framework for syscall hooks\n\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 550 𝘀𝘁𝗮𝗿𝘀\n🍴 37 𝗳𝗼𝗿𝗸𝘀\n🔍 0 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nWinVisor is a hypervisor-based emulator for Windows x64 user-mode executables, leveraging the Windows Hypervisor Platform API. It creates a virtual environment by cloning the address space of a suspended process, allowing for the execution and monitoring of applications in a virtualized setting. The emulator forwards syscalls to the host OS and provides a framework for implementing custom syscall hooks.\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/x86matthew/WinVisor\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱✱\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/bfc0ed8ff1af236aaea4b2e1acdcabec53ce6700be193d60ceb5a77fe64363e2/x86matthew/WinVisor",
            "https://i.ibb.co/fGnXBnHb/920866025.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.475504"
    },
    {
        "project_id": 95876775,
        "content": "𝗣𝗥𝗢𝗝𝗘𝗖𝗧-𝗚𝗨𝗜𝗗𝗘𝗟𝗜𝗡𝗘𝗦 | Providing a set of best practices and guidelines for JavaScript project development and maintenance.  🌟 Rising Fast!\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📜 JavaScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Providing a set of best practices and guidelines for JavaScript project development and maintenance.\n📅 Created: Jun 2017 • Updated: Mar 2025\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Git workflow guidelines\n✅ Documentation standards\n✅ Environment consistency\n✅ Dependency management\n✅ Testing practices\n✅ Code style enforcement\n✅ API design and security\n✅ Accessibility considerations\n✅ Licensing information\n\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 29.6K 𝘀𝘁𝗮𝗿𝘀\n🍴 3.2K 𝗳𝗼𝗿𝗸𝘀\n🔍 9 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe project-guidelines repository offers a comprehensive collection of best practices for JavaScript projects, covering various aspects from Git workflow to API security. It aims to improve project maintainability, code quality, and overall development efficiency by providing actionable guidelines and recommendations.\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/elsewhencode/project-guidelines\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n━━━━━━━━━━━━━━━━━━━━━━━━\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#best_practices #guidelines #how_to #javascript #javascript_best_practices\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/2feb420d48c397dd654a396765734edd715fb863a05201a8dee4b27fe77c9e87/elsewhencode/project-guidelines",
            "https://i.ibb.co/RTcv7BM7/95876775.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.475747"
    },
    {
        "project_id": 906422044,
        "content": "𝗖𝗨𝗗𝗔𝗖𝗢𝗗𝗘𝗦 | Learning and experimenting with CUDA programming.  🔥 Super Hot!\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 💻 Cuda \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Learning and experimenting with CUDA programming.\n📅 Created: Dec 2024 • Updated: Mar 2025\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Practical CUDA code examples\n✅ CUDA optimization techniques\n✅ Well-commented code for learning\n✅ Specific implementations like softmax, matrix multiplication, and matrix-vector multiplication\n\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 369 𝘀𝘁𝗮𝗿𝘀\n🍴 14 𝗳𝗼𝗿𝗸𝘀\n🔍 0 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThis repository provides a collection of CUDA code examples and optimizations, primarily focusing on C/C++. It serves as a learning resource for individuals looking to understand and improve their CUDA skills through practical implementations and extensively commented code. The repository covers various topics, including softmax, matrix multiplication, and device information retrieval.\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Maharshi-Pandya/cudacodes\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/bfd641646cbbf7dd03e22c27b3b666f63ceea30cc5e1499c1f74d8aba7fdfc5f/Maharshi-Pandya/cudacodes",
            "https://i.ibb.co/NGp30Yv/906422044.jpg"
        ],
        "processed_at": "2025-03-28T10:12:16.475985"
    }
]