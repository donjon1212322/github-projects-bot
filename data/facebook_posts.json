[
    {
        "project_id": 825062215,
        "content": "𝗦𝗖𝗥𝗔𝗣𝗘𝗥𝗥 | Web scraping and data extraction from websites.  🔥 Super Hot!\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Web scraping and data extraction from websites.\n📅 Created: Jul 2024 • Updated: Oct 2025\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ XPath-Based Extraction\n✅ Queue Management\n✅ Domain Spidering\n✅ Custom Headers\n✅ Media Downloads\n✅ Results Visualization\n✅ Data Export\n✅ Notifcation Channels\n\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 4.5K 𝘀𝘁𝗮𝗿𝘀\n🍴 219 𝗳𝗼𝗿𝗸𝘀\n🔍 2 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nScraperr is a self-hosted web scraping solution that allows users to scrape websites without writing code. It offers features like XPath-based extraction, queue management, domain spidering, and data export in various formats, making it a versatile tool for web data extraction.\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/jaypyles/Scraperr\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#docker #helm #kubernetes #opensource #playwright\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/0bf551e4683c4a3ebfcb9ba1a4eeb7f7a14fe32d080783e213fc8eca08ac5c21/jaypyles/Scraperr"
        ],
        "processed_at": "2025-10-19T10:11:14.806793"
    },
    {
        "project_id": 1013031861,
        "content": "𝗦𝗦𝗛-𝗕𝗢𝗧 | Remotely executing commands on servers or devices within a home network via a Telegram bot interface.  🌟 Rising Fast!\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐹 Go \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Remotely executing commands on servers or devices within a home network via a Telegram bot interface.\n📅 Created: Jul 2025 • Updated: Oct 2025\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Executing commands on local or remote hosts via SSH\n✅ Support for parallel command execution\n✅ SSH connection manager with host availability check\n✅ Support for directory navigation\n✅ Combined access to remote hosts by key and/or password\n✅ Error handling for commands requiring user input\n✅ Support for storing and reusing passed variables and functions\n\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐ 91 𝘀𝘁𝗮𝗿𝘀\n🍴 10 𝗳𝗼𝗿𝗸𝘀\n🔍 0 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe ssh-bot is a Telegram bot written in Go that allows users to execute commands on remote hosts via SSH. It eliminates the need for VPNs or external IP addresses by providing asynchronous command execution and supports various authentication methods and configuration options.\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Lifailon/ssh-bot\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#bot #chat_bot #go #ssh_client #telegrambot\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/447341154863da1541cd1076c88845889c8a4db6c65ead223574005dfec5fef2/Lifailon/ssh-bot"
        ],
        "processed_at": "2025-10-19T10:11:14.807131"
    },
    {
        "project_id": 720466801,
        "content": "𝗜𝗡𝗣𝗔𝗜𝗡𝗧-𝗪𝗘𝗕 | In-browser image inpainting and upscaling  🌟 Rising Fast!\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: In-browser image inpainting and upscaling\n📅 Created: Nov 2023 • Updated: Oct 2025\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Image Inpainting (修复)\n✅ Super-Resolution (图片高清化)\n✅ Image Modification History\n✅ Model Optimization\n✅ Post-Processing Integrated into the Model\n\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 5.5K 𝘀𝘁𝗮𝗿𝘀\n🍴 636 𝗳𝗼𝗿𝗸𝘀\n🔍 19 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nInpaint-web is a free and open-source inpainting and image-upscaling tool that operates entirely within the browser using WebGPU and WASM technologies. It allows users to repair and enhance images directly in their browser without relying on server-side processing.\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/lxfater/inpaint-web\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#image_upscaling #inpainting #super_resolution #webgpu\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/6a8bf193ddc8c2cb9bae73150b49a9b99fe9ed853f4376c070106c799e92a2d4/lxfater/inpaint-web"
        ],
        "processed_at": "2025-10-19T10:11:14.807467"
    },
    {
        "project_id": 1051869896,
        "content": "𝗙𝗟𝗜𝗡𝗧 | Managing KVM virtual machines with a focus on ease of use and minimal overhead.  🔥 Super Hot!\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Managing KVM virtual machines with a focus on ease of use and minimal overhead.\n📅 Created: Sep 2025 • Updated: Oct 2025\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Modern Web UI (Next.js + Tailwind)\n✅ Single Binary (<11MB)\n✅ CLI and API for automation\n✅ Cloud-Init support\n✅ Snapshot-based template system\n✅ Multi-layered authentication\n✅ Non-intrusive design\n\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 1.2K 𝘀𝘁𝗮𝗿𝘀\n🍴 59 𝗳𝗼𝗿𝗸𝘀\n🔍 8 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nFlint is a lightweight KVM management tool designed for developers, sysadmins, and home labs. It provides a modern web UI, CLI, and API for managing virtual machines, emphasizing simplicity and efficiency by avoiding XML and unnecessary bloat.\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/volantvm/flint\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#cloud #cloud_init #devops #hypervisor #infra\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1051869896/ad0c965b-19f2-4f39-b123-047325db7b69"
        ],
        "processed_at": "2025-10-19T10:11:14.807796"
    },
    {
        "project_id": 1050485604,
        "content": "𝗗𝗜𝗦𝗖𝗜𝗣𝗟𝗜𝗡𝗘𝗗-𝗔𝗜-𝗦𝗢𝗙𝗧𝗪𝗔𝗥𝗘-𝗗𝗘𝗩𝗘𝗟𝗢𝗣𝗠𝗘𝗡𝗧 | Collaborating with AI systems on software development projects to mitigate common issues like code bloat and architectural drift.  🔥 Super Hot!\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Collaborating with AI systems on software development projects to mitigate common issues like code bloat and architectural drift.\n📅 Created: Sep 2025 • Updated: Oct 2025\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ AI Behavioral Configuration using custom instructions and persona frameworks\n✅ Collaborative Planning with AI to define project scope and dependencies\n✅ Systematic Implementation with file size constraints for focused development\n✅ Data-Driven Iteration for benchmarking and improvement\n\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 359 𝘀𝘁𝗮𝗿𝘀\n🍴 27 𝗳𝗼𝗿𝗸𝘀\n🔍 0 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe Disciplined AI Software Development methodology provides a structured approach for collaborating with AI systems on software development projects. It addresses common issues like code bloat, architectural drift, and context dilution through systematic constraints and validation checkpoints. The methodology uses four stages with systematic constraints, behavioral consistency enforcement, and validation checkpoints.\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Varietyz/Disciplined-AI-Software-Development\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#ai #ai_agents #ai_collaboration #best_practices #collaborate\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/de8b67a81ec5be6582945ff9de255723403f3f4cdbda9f54da91a34d7eab83aa/Varietyz/Disciplined-AI-Software-Development"
        ],
        "processed_at": "2025-10-19T10:11:14.808140"
    },
    {
        "project_id": 485548415,
        "content": "𝗗𝗔𝗙𝗧 | Large-scale data processing and analysis, including multimodal data, in distributed computing environments.  🔥 Super Hot!\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Large-scale data processing and analysis, including multimodal data, in distributed computing environments.\n📅 Created: Apr 2022 • Updated: Oct 2025\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Familiar interactive API (Lazy Python Dataframe, SQL)\n✅ Powerful Query Optimizer\n✅ Data Catalog integrations (AWS Glue, Unity Catalog, Apache Iceberg)\n✅ Rich multimodal type-system (Images, URLs, Tensors)\n✅ Seamless Interchange (Apache Arrow)\n✅ Built for the cloud (S3 cloud storage)\n\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 4.6K 𝘀𝘁𝗮𝗿𝘀\n🍴 315 𝗳𝗼𝗿𝗸𝘀\n🔍 315 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nDaft is a distributed query engine, written in Rust, designed for large-scale data processing using Python or SQL. It focuses on providing a familiar interactive API, powerful query optimization, data catalog integrations, rich multimodal type-system, seamless interchange with Apache Arrow, and is built for cloud environments.\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Eventual-Inc/Daft\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#artificial_intelligence #big_data #data_engineering #distributed_computing #machine_learning\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://repository-images.githubusercontent.com/485548415/d4d6d5b1-23b4-43db-986b-ed6fd21e09f7"
        ],
        "processed_at": "2025-10-19T10:11:14.808488"
    },
    {
        "project_id": 1045266535,
        "content": "𝗣𝗢𝗖𝗞𝗘𝗧-𝗦𝗘𝗥𝗩𝗘𝗥 | Running and managing AI agents locally and interacting with them remotely via a mobile application.  🔥 Super Hot!\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Running and managing AI agents locally and interacting with them remotely via a mobile application.\n📅 Created: Aug 2025 • Updated: Oct 2025\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Agent runtime and tools\n✅ Native mobile terminal\n✅ File system + editor\n✅ Repo search\n✅ Background/cloud agents\n✅ Notifications\n✅ Security model\n✅ Remote access\n✅ Versioned releases (macOS, Linux)\n\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 744 𝘀𝘁𝗮𝗿𝘀\n🍴 64 𝗳𝗼𝗿𝗸𝘀\n🔍 2 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nPocket Server is a local runtime environment for AI agents, designed to run on a user's machine and be controlled via a mobile app. It provides core OS capabilities like agent runtime, a mobile terminal, file system access, and remote access, enabling users to interact with their codebase and agents from their phone.\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/yayasoumah/pocket-server\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/5031116ab454973e0b9a29c9559c2874ea474d552b7825a5a610a65eed75eafa/yayasoumah/pocket-server"
        ],
        "processed_at": "2025-10-19T10:11:14.808799"
    },
    {
        "project_id": 1051368307,
        "content": "𝗭𝗔𝗜-𝗣𝗬𝗧𝗛𝗢𝗡-𝗦𝗗𝗞 | Interacting with Z.AI's language models for chat completions and other language-based tasks.  🔥 Super Hot!\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Interacting with Z.AI's language models for chat completions and other language-based tasks.\n📅 Created: Sep 2025 • Updated: Oct 2025\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Automatic guest token authentication\n✅ Support for multiple AI models\n✅ Streaming and non-streaming responses\n✅ Customizable model parameters\n✅ Modular architecture\n✅ Comprehensive error handling\n✅ Verbose mode for debugging\n✅ Model Presets\n\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐ 36 𝘀𝘁𝗮𝗿𝘀\n🍴 2 𝗳𝗼𝗿𝗸𝘀\n🔍 1 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe zai-python-sdk is an unofficial Python SDK for the Z.AI API, offering access to advanced language models like GLM-4.5V and 360B. It simplifies interaction with the API through features like automatic authentication, streaming responses, customizable parameters, and a modular architecture, without requiring an API key.\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/iotbackdoor/zai-python-sdk\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/0621e8bf05e09c9627f13251570b2805d1df607cfc967bdc14c1f0e3922ecbda/iotbackdoor/zai-python-sdk"
        ],
        "processed_at": "2025-10-19T10:11:14.809109"
    }
]