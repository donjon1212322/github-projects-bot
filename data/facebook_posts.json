[
    {
        "project_id": 1024955521,
        "content": "𝗡𝗘𝗨𝗥𝗔𝗟𝗔𝗚𝗘𝗡𝗧 | Automating desktop tasks such as typing, clicking, browser navigation, form filling, and email sending.  🌟 Rising Fast!\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Automating desktop tasks such as typing, clicking, browser navigation, form filling, and email sending.\n📅 Created: Jul 2025 • Updated: Jul 2025\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Desktop automation with `pyautogui`\n✅ Background automation (Windows Only) via WSL (browser-only)\n✅ Supports Claude, GPT-4, Azure OpenAI, and Bedrock\n✅ Modular agents (Planner, Classifier, Suggestor, Title)\n✅ Multimodal (text + vision)\n✅ FastAPI backend + Electron + React frontend\n\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐ 85 𝘀𝘁𝗮𝗿𝘀\n🍴 11 𝗳𝗼𝗿𝗸𝘀\n🔍 1 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nNeuralAgent is an AI personal assistant that automates desktop tasks. It uses large language models to perform actions like typing, clicking, navigating browsers, and filling out forms. The architecture consists of a FastAPI backend, an Electron-based desktop application with a React frontend, and supports multiple LLMs.\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/withneural/neuralagent\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅┅\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/e4aa4fbb07ea22370e6152710aec89c55fc61a49e8d5c9dcc3e757477b2b757a/withneural/neuralagent"
        ],
        "processed_at": "2025-07-25T10:13:56.721444"
    },
    {
        "project_id": 835975784,
        "content": "𝗦𝗨𝗥𝗙𝗦𝗘𝗡𝗦𝗘 | Creating a highly customizable AI research agent connected to personal knowledge bases and external sources for enhanced research and information synthesis.  🔥 Super Hot!\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📘 TypeScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Creating a highly customizable AI research agent connected to personal knowledge bases and external sources for enhanced research and information synthesis.\n📅 Created: Jul 2024 • Updated: Jul 2025\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Customizable private NotebookLM and Perplexity integrated with external sources\n✅ Multiple file format uploading support (50+ file extensions)\n✅ Powerful search within saved content\n✅ Chat with saved content using natural language\n✅ Cited answers\n✅ Privacy & Local LLM Support (Ollama)\n✅ Self Hostable\n✅ Blazingly fast podcast generation agent\n✅ Advanced RAG Techniques (100+ LLMs, 6000+ Embedding Models, Major Rerankers, Hierarchical Indices, Hybrid Search, RAG as a Service API Backend)\n\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 6.1K 𝘀𝘁𝗮𝗿𝘀\n🍴 459 𝗳𝗼𝗿𝗸𝘀\n🔍 33 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nSurfSense is an open-source alternative to NotebookLM and Perplexity, designed to integrate with personal knowledge bases and external sources. It offers features like multiple file format support, powerful search, natural language interaction, cited answers, local LLM support, and advanced RAG techniques. The primary use case is to create a customizable AI research agent that can synthesize information from various sources, including search engines, Slack, Notion, and GitHub.\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/MODSetter/SurfSense\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#aceternity_ui #agent #agents #ai #chrome_extension\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/ef41d48b6e0f31a22e5eca6376366cc7e4b1b26c2e8153359ef0576e4451bfd8/MODSetter/SurfSense"
        ],
        "processed_at": "2025-07-25T10:13:56.721937"
    },
    {
        "project_id": 979115477,
        "content": "𝗗𝗘𝗘𝗥-𝗙𝗟𝗢𝗪 | Deep Research using language models and specialized tools.  🌟 Rising Fast!\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Deep Research using language models and specialized tools.\n📅 Created: May 2025 • Updated: Jul 2025\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Combines language models with web search\n✅ Combines language models with web crawling\n✅ Combines language models with Python code execution\n✅ Community-driven Deep Research framework\n✅ One-click deployment on Volcengine\n\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 15.6K 𝘀𝘁𝗮𝗿𝘀\n🍴 2K 𝗳𝗼𝗿𝗸𝘀\n🔍 170 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nDeerFlow is a community-driven Deep Research framework that combines language models with tools like web search, crawling, and Python execution. It aims to facilitate efficient research workflows by leveraging the power of language models and specialized tools. The framework supports one-click deployment on Volcengine for easy accessibility.\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/bytedance/deer-flow\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#agent #agentic #agentic_framework #agentic_workflow #ai\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/1b4353f8f4c7c997a163c0bfc236d391289d6208ecf12389e0ff025cc252c931/bytedance/deer-flow"
        ],
        "processed_at": "2025-07-25T10:13:56.722229"
    },
    {
        "project_id": 979060063,
        "content": "𝗣𝗬𝗥𝗢𝗞𝗜 | Robot kinematic optimization  🔥 Super Hot!\n\n•••••••••••••••••••••••\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Robot kinematic optimization\n📅 Created: May 2025 • Updated: Jul 2025\n\n•••••••••••••••••••••••\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Differentiable robot forward kinematics from URDF\n✅ Automatic collision primitive generation\n✅ Differentiable collision bodies with numpy broadcasting\n✅ Common cost implementations (pose, collision, manipulability)\n✅ Arbitrary costs with autodiff or analytical Jacobians\n✅ Integration with Levenberg-Marquardt solver for manifold optimization\n✅ Cross-platform support (CPU, GPU, TPU) via JAX\n\n\n•••••••••••••••••••••••\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 891 𝘀𝘁𝗮𝗿𝘀\n🍴 74 𝗳𝗼𝗿𝗸𝘀\n🔍 13 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n•••••••••••••••••••••••\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nPyRoki is a Python toolkit for robot kinematic optimization. It provides differentiable forward kinematics, automatic collision primitive generation, and various cost implementations. It supports cross-platform execution via JAX and integrates with a Levenberg-Marquardt solver for optimization on manifolds.\n\n•••••••••••••••••••••••\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/chungmin99/pyroki\n\n•••••••••••••••••••••••\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n•••••••••••••••••••••••\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/5429f685220dfeb2edc4903711bdf7dd9fd3426000f5ad39aee7a9a3f84e5799/chungmin99/pyroki"
        ],
        "processed_at": "2025-07-25T10:13:56.722514"
    },
    {
        "project_id": 24774658,
        "content": "𝗕𝗢𝗧𝗢𝟯 | Enabling Python developers to build applications that interact with Amazon Web Services (AWS).  ✨ Notable!\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Enabling Python developers to build applications that interact with Amazon Web Services (AWS).\n📅 Created: Oct 2014 • Updated: Jul 2025\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Provides an SDK for interacting with AWS services using Python\n✅ Supports a wide range of AWS services including S3 and EC2\n✅ Offers documentation and resources for developers\n✅ Provides tools for setting up credentials and configuring regions\n\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 9.5K 𝘀𝘁𝗮𝗿𝘀\n🍴 1.9K 𝗳𝗼𝗿𝗸𝘀\n🔍 166 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nBoto3 is the Amazon Web Services (AWS) SDK for Python, allowing developers to easily integrate their Python applications with AWS services like S3 and EC2. It provides a comprehensive set of tools and resources for managing AWS infrastructure and building scalable, cloud-based applications. The SDK simplifies the process of interacting with AWS, enabling developers to focus on building their applications rather than managing low-level API interactions.\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/boto/boto3\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#aws #aws_sdk #cloud #cloud_management #python\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/82e66df1c58ee896fec98cd7160c11047e9ee229a9ba157a295ca270faf78d7f/boto/boto3"
        ],
        "processed_at": "2025-07-25T10:13:56.722794"
    },
    {
        "project_id": 1079822,
        "content": "𝗣𝗬𝗞𝗞𝗔 | Building concurrent Python applications using the actor model.  🔥 Super Hot!\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Building concurrent Python applications using the actor model.\n📅 Created: Nov 2010 • Updated: Jul 2025\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Concurrency\n✅ Actor Model implementation\n✅ Simplified concurrent application development\n\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 1.3K 𝘀𝘁𝗮𝗿𝘀\n🍴 105 𝗳𝗼𝗿𝗸𝘀\n🔍 18 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nPykka is a Python library that simplifies the development of concurrent applications by providing an implementation of the actor model. It enables developers to build robust and scalable systems by managing state sharing and cooperation between execution units. Pykka requires Python 3.9 or newer and is available on PyPI.\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/jodal/pykka\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#actor_model #concurrency #python\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/5e613d35a7ccd7f56db8c83def22b5d179e2aab13319370a031c02e682cc049e/jodal/pykka"
        ],
        "processed_at": "2025-07-25T10:13:56.723051"
    }
]