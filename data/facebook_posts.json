[
    {
        "project_id": 60787328,
        "content": "𝗠𝗢𝗥𝗧 | Real-time translation of game dialogs using OCR and machine translation.  🔥 Super Hot!\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🔷 C# \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Real-time translation of game dialogs using OCR and machine translation.\n📅 Created: Jun 2016 • Updated: Apr 2025\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Realtime translate\n✅ OCR (TesseractOCR, Windows OCR, NHOcr, Easy OCR)\n✅ Machine translation (Naver Papago, Google Web, Google Sheet, ezTrans, DeepL)\n✅ Language Patch with using DB\n✅ Multiple OCR areas\n✅ Image adjust\n\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 811 𝘀𝘁𝗮𝗿𝘀\n🍴 54 𝗳𝗼𝗿𝗸𝘀\n🔍 25 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nMORT is a real-time game translator that extracts dialog from the screen using OCR and translates it using machine translation services or a database. It supports multiple OCR engines and translation services, allowing users to play games in foreign languages with real-time translated subtitles. The program is designed for Windows and requires .NET 7.\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/killkimno/MORT\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#auto_translation #game #game_translation #image_to_text #ocr\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://repository-images.githubusercontent.com/60787328/d1117064-81ca-4945-83fc-0114466a5f15"
        ],
        "processed_at": "2025-04-17T10:12:46.924410"
    },
    {
        "project_id": 895165567,
        "content": "𝗧𝗜𝗠𝗥-𝗧𝗨𝗜 | Organizing and managing time using Pomodoro, Countdown, and Timer functionalities within a terminal user interface.  🔥 Super Hot!\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Organizing and managing time using Pomodoro, Countdown, and Timer functionalities within a terminal user interface.\n📅 Created: Nov 2024 • Updated: Apr 2025\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Pomodoro timer\n✅ Countdown timer\n✅ Standard timer\n✅ Customizable styles\n✅ Decisecond display\n✅ CLI interface\n\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 116 𝘀𝘁𝗮𝗿𝘀\n🍴 6 𝗳𝗼𝗿𝗸𝘀\n🔍 0 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\ntimr-tui is a terminal-based application written in Rust that helps users organize their time. It provides Pomodoro, Countdown, and Timer functionalities, along with customizable styles and a CLI interface for easy integration and usage.\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/sectore/timr-tui\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂❂\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#ratatui #rust #tui\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/6a8d02f1e264b32ad1feb7f988cd48ed88fdf1605de6c5b83b4133a350c03383/sectore/timr-tui"
        ],
        "processed_at": "2025-04-17T10:12:46.924743"
    },
    {
        "project_id": 301244405,
        "content": "𝗔𝗧𝗨𝗜𝗡 | Replacing existing shell history with a synchronized, searchable SQLite database.  🔥 Super Hot!\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Replacing existing shell history with a synchronized, searchable SQLite database.\n📅 Created: Oct 2020 • Updated: Apr 2025\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Rebindable full-screen history search UI\n✅ SQLite database storage for shell history\n✅ Encrypted backup and sync of shell history\n✅ Cross-terminal, cross-session, and cross-machine history\n✅ Logging of exit code, cwd, hostname, session, command duration\n✅ Statistics calculation (e.g., most used command)\n✅ Quick-jump to previous items\n✅ Switchable filter modes (session, directory, global)\n✅ Tab to edit functionality\n\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 23.3K 𝘀𝘁𝗮𝗿𝘀\n🍴 629 𝗳𝗼𝗿𝗸𝘀\n🔍 299 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nAtuin replaces your existing shell history with a SQLite database, recording additional context for commands. It offers optional, fully encrypted synchronization of history between machines via an Atuin server. Key features include a full-screen search UI, cross-device synchronization, and detailed command logging.\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/atuinsh/atuin\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃⁃\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#bash #fish #history #rust #shell\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/abc8d2b52ae2165ab1a1da9703fe5f69df6faecfb6d98ec0256cf4a0509d7290/atuinsh/atuin"
        ],
        "processed_at": "2025-04-17T10:12:46.925093"
    },
    {
        "project_id": 22072746,
        "content": "𝗣𝗘𝗫 | Packaging and deploying Python applications as self-contained, executable files.  🔥 Super Hot!\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🐍 Python \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Packaging and deploying Python applications as self-contained, executable files.\n📅 Created: Jul 2014 • Updated: Apr 2025\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ .pex file generation\n✅ Lock file creation\n✅ Virtual environment creation\n✅ Executable Python environments\n✅ Support for multiple platform-specific Python distributions\n✅ Integration with build systems like Pants, Buck, and pygradle\n✅ Entry point support for standalone executables\n\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐ 3.9K 𝘀𝘁𝗮𝗿𝘀\n🍴 295 𝗳𝗼𝗿𝗸𝘀\n🔍 75 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nPex is a tool for generating .pex files, which are self-contained executable Python environments similar to virtualenvs. It simplifies Python application deployment by packaging all dependencies into a single file that can be easily distributed and executed across different platforms. Pex also supports lock file and venv creation, and integrates with popular build systems.\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/pex-tool/pex\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦\n\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/8e6a1f8793f492e7b88b5e6a54e8cc985733ce6f84bb4f6a833671a179325d5a/pex-tool/pex"
        ],
        "processed_at": "2025-04-17T10:12:46.925396"
    },
    {
        "project_id": 35133520,
        "content": "𝗠𝗢𝗦𝗧𝗟𝗬-𝗔𝗗𝗘𝗤𝗨𝗔𝗧𝗘-𝗚𝗨𝗜𝗗𝗘 | Learning and applying functional programming principles in JavaScript development.  🔥 Super Hot!\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 📜 JavaScript \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Learning and applying functional programming principles in JavaScript development.\n📅 Created: May 2015 • Updated: Apr 2025\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Teaches functional programming concepts using JavaScript.\n✅ Provides practical examples applicable to real-world JavaScript projects.\n✅ Offers exercises and an npm module for hands-on learning.\n✅ Provides downloadable PDF and EPUB versions.\n\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐⭐⭐ 23.6K 𝘀𝘁𝗮𝗿𝘀\n🍴 1.9K 𝗳𝗼𝗿𝗸𝘀\n🔍 72 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe 'mostly-adequate-guide' repository is a resource for learning functional programming (FP) concepts using JavaScript. It provides practical examples, exercises, and downloadable resources to help developers apply FP principles in their daily work. The guide aims to make FP accessible by leveraging the familiarity of JavaScript.\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/MostlyAdequate/mostly-adequate-guide\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀❀\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#functional_programming #javascript #reactive_programming #tutorial\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/5aefff8289487adb454af5bfb7afa28bba06d466802e7cba430cc795871044df/MostlyAdequate/mostly-adequate-guide"
        ],
        "processed_at": "2025-04-17T10:12:46.925708"
    },
    {
        "project_id": 956297926,
        "content": "𝗨𝗥𝗫 | Collecting URLs from OSINT archives for security testing and analysis.  🔥 Super Hot!\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🦀 Rust \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Collecting URLs from OSINT archives for security testing and analysis.\n📅 Created: Mar 2025 • Updated: Apr 2025\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ Fetch URLs from multiple sources in parallel (Wayback Machine, Common Crawl, OTX)\n✅ Filter results by file extensions, patterns, or predefined presets\n✅ Support for multiple output formats: plain text, JSON, CSV\n✅ Output results to the console or a file, or stream via stdin for pipeline integration\n✅ Filter and validate URLs based on HTTP status codes and patterns\n✅ Extract additional links from collected URLs\n\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐ 71 𝘀𝘁𝗮𝗿𝘀\n🍴 7 𝗳𝗼𝗿𝗸𝘀\n🔍 3 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nUrx is a command-line tool built with Rust that extracts URLs from OSINT archives like the Wayback Machine and Common Crawl. It allows users to fetch URLs from multiple sources in parallel, filter results based on various criteria, and output the data in different formats. The primary use case is gathering comprehensive URL datasets for security testing and analysis.\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/hahwul/urx\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#osint #osint_tool #security #url #urx\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://repository-images.githubusercontent.com/956297926/d28b4111-45c9-4d0b-bda9-8c763d7cdfe2"
        ],
        "processed_at": "2025-04-17T10:12:46.926037"
    },
    {
        "project_id": 758783944,
        "content": "𝗙𝗨𝗟𝗟𝗕𝗬𝗣𝗔𝗦𝗦 | Bypassing AMSI and PowerShell CLM to obtain a FullLanguage PowerShell reverse shell.  📈 Growing!\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n𝗧𝗘𝗖𝗛 𝗦𝗧𝗔𝗖𝗞: 🔷 C# \n🎯 𝗨𝗦𝗘 𝗖𝗔𝗦𝗘: Bypassing AMSI and PowerShell CLM to obtain a FullLanguage PowerShell reverse shell.\n📅 Created: Feb 2024 • Updated: Apr 2025\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n✨ 𝗞𝗘𝗬 𝗙𝗘𝗔𝗧𝗨𝗥𝗘𝗦 ✨\n\n✅ AMSI bypass\n✅ PowerShell CLM bypass\n✅ FullLanguage PowerShell reverse shell\n\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n📊 𝗣𝗥𝗢𝗝𝗘𝗖𝗧 𝗦𝗧𝗔𝗧𝗦\n\n⭐⭐⭐ 703 𝘀𝘁𝗮𝗿𝘀\n🍴 132 𝗳𝗼𝗿𝗸𝘀\n🔍 2 𝗼𝗽𝗲𝗻 𝗶𝘀𝘀𝘂𝗲𝘀\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n📝 𝗔𝗕𝗢𝗨𝗧 𝗧𝗛𝗜𝗦 𝗣𝗥𝗢𝗝𝗘𝗖𝗧\n\nThe FullBypass tool is designed to circumvent AMSI and PowerShell Constrained Language Mode (CLM). It achieves this by employing memory hijacking techniques to modify the AmsiScanBuffer function. The tool ultimately provides a FullLanguage PowerShell reverse shell, enabling unrestricted PowerShell execution on the target system.\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n🔗 𝗟𝗜𝗡𝗞𝗦\n• 𝗚𝗶𝘁𝗛𝘂𝗯: https://github.com/Sh3lldon/FullBypass\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n🔥 𝗙𝗼𝗹𝗹𝗼𝘄 𝘂𝘀 for daily GitHub projects!\n👉 GitHub Open Source: https://t.me/GitHub_Open_Source\n\n╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n\n\n🏷️ 𝗧𝗔𝗚𝗦\n#amsi_bypass #powershellclm\n\n\n© 2025 - Curated with ❤️ for developers",
        "platform": "facebook",
        "media_urls": [
            "https://opengraph.githubassets.com/3cf82b426bc694ebbb9aab0a9a879d395c0b7edc1e3dd35727449d962c6dbaff/Sh3lldon/FullBypass"
        ],
        "processed_at": "2025-04-17T10:12:46.926333"
    }
]