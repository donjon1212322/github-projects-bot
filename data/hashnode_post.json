{
    "title": "Supercharge Your Go Logging with slog-context: Contextual Logging Made Easy",
    "contentMarkdown": "\n## üìù Quick Summary: \nThe `slog-context` Go library provides utilities for integrating structured logging (slog) with Go's context package. It allows adding and retrieving loggers from contexts, adding attributes to contexts for automatic inclusion in log lines, and extracting custom context values like OpenTelemetry TraceIDs for logging.\n\n## üîë Key Takeaways\n\n- ‚úÖ Effortlessly integrate structured logging with context.\n\n- ‚úÖ Store loggers directly in the context for easy access.\n\n- ‚úÖ Automatically add contextual attributes to log lines without modifying every logging call.\n\n- ‚úÖ Seamless integration with OpenTelemetry for improved observability.\n\n- ‚úÖ Supports both `slog` and `logr` logging interfaces for maximum flexibility.\n\n\n## üìä Project Statistics\n- ‚≠ê Stars: 138\n- üç¥ Forks: 6\n- ‚ùó Open Issues: 1\n\n\n## üõ† Tech Stack\n- ‚úÖ Go\n\n\nTired of wrestling with inconsistent logging in your Go applications?  Wish you could effortlessly add contextual information to your logs, regardless of where they're generated? Then you absolutely need to check out `slog-context`! This fantastic Go library solves a common pain point for developers: seamlessly integrating structured logging with the power of context.  Imagine a world where tracing requests across multiple services is as simple as adding a few lines of code.  That's the promise of `slog-context`.  \n\nAt its core, `slog-context` provides two main workflows to enhance your logging experience. First, it allows you to store your logger directly within the context.  This means you can easily access and use the logger throughout your application, without passing it explicitly between functions.  No more tedious parameter passing or global logger variables!  The library provides helpful wrapper functions like `With`, `Info`, `Error`, and more, simplifying the logging process.\n\nThe second, equally powerful workflow involves adding attributes to your context. These attributes are then automatically picked up by `slog-context`'s handler and added to your log lines. This is incredibly useful for adding contextual data like request IDs, user IDs, or even OpenTelemetry tracing information.  Best of all, you don't even need to modify every logging call in your code ‚Äì the attributes are automatically appended or prepended to your log entries.\n\nBut the magic doesn't stop there. `slog-context` offers seamless integration with OpenTelemetry (OTEL).  Through the `slogotel` package, you can automatically extract trace and span IDs from your context and add them to your logs.  This immediately improves your observability and makes debugging distributed systems a breeze.  Moreover, it integrates with `sloghttp` to automatically add attributes from HTTP middleware, giving you a complete picture of your requests.\n\n`slog-context` supports both the standard library's `slog` and the popular `logr` logging interfaces. This means you can easily integrate it into existing projects without major refactoring.  Whether you're a die-hard `slog` fan or a `logr` enthusiast, this library has you covered.  The automatic conversion between `slog.Logger` and `logr.Logger` ensures smooth interoperability across your entire stack.\n\nThe benefits are clear: improved code readability, simplified logging, enhanced debugging, and seamless integration with popular observability tools.  `slog-context` streamlines your workflow, saving you time and effort. It makes your logging more consistent, accurate, and informative.  Say goodbye to messy, hard-to-debug logs and hello to clean, contextualized logging that makes sense!\n\n## üìö Learn More\n[View the Project on GitHub](https://github.com/veqryn/slog-context)\n\n---\n\nEnjoyed this project? Get a daily dose of awesome open-source discoveries by following [GitHub Open Source](https://t.me/GitHub_Open_Source) on Telegram! üéâ\n",
    "tags": [
        {
            "name": "go",
            "slug": "go"
        },
        {
            "name": "logging",
            "slug": "logging"
        },
        {
            "name": "slog",
            "slug": "slog"
        },
        {
            "name": "context",
            "slug": "context"
        },
        {
            "name": "opentelemetry",
            "slug": "opentelemetry"
        }
    ],
    "slug": "supercharge-your-go-logging-with-slog-context-contextual-logging-made-easy",
    "project_id": 716785366,
    "coverImage": "",
    "isNewsletterActivated": false,
    "isRepublished": false
}