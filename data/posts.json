[
    {
        "project_id": 906632895,
        "content": "ðŸ”¥ <b>mopad</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAdding gamepad support to Marimo notebooks for interactive data exploration, games, or any application needing real-time gamepad input.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatic gamepad detection\nâ€¢ Real-time visual feedback\nâ€¢ Precise timestamp tracking\nâ€¢ Any button support\n<br>\nðŸ“– <b>Summary:</b>\nMopad is an anywidget that enables gamepad input within Marimo notebooks. It features automatic gamepad detection, real-time visual feedback, precise timestamp tracking, and support for any button on a Bluetooth gamepad. This allows users to create interactive data explorations, games, and other applications that benefit from real-time gamepad control.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/koaning/mopad?embed=0\">View Project</a>\nâ€¢ <a href=\"https://koaning.github.io/mopad/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2abb5eae1882fa147479f7f89112bc5f839e0a65ed6939156c6fdf1966edf2f4/koaning/mopad",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 996114793,
        "content": "ðŸš€ <b>two_claps_open</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOpening applications or activating functions with a double clap gesture.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Opens applications with two claps\nâ€¢ Clap detection using frequency analysis and peak detection\nâ€¢ Bandpass filter to isolate clap sounds\nâ€¢ Voice assistant activation via claps\n<br>\nðŸ“– <b>Summary:</b>\nThe `two_claps_open` repository provides a way to open applications or trigger actions by detecting two consecutive claps. It uses frequency analysis and peak detection on audio input to identify claps, filtering out irrelevant noise. The repository includes example scripts for opening Chrome and activating a voice assistant.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Yutarop/two_claps_open?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d6f0ba3f958cc3277097a345ec8704e2f069256e0a60bf9804c7bee733dce8d9/Yutarop/two_claps_open",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 992393505,
        "content": "âœ¨ <b>LLMFeeder</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConverting web pages to clean Markdown for use as context in Large Language Models (LLMs).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smart Content Extraction using Readability\nâ€¢ One-Click Markdown Conversion and Copy to Clipboard\nâ€¢ LLM-Optimized Output\nâ€¢ Customizable Content Scope and Formatting\nâ€¢ Keyboard Shortcuts\n<br>\nðŸ“– <b>Summary:</b>\nLLMFeeder is a browser extension designed to simplify the process of feeding web page content to LLMs. It extracts the main content of a webpage, converts it to clean Markdown, and copies it to the clipboard with a single click, making it easy to provide context to your favorite AI models. It is available for both Chrome and Firefox.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jatinkrmalik/LLMFeeder?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/01a3a41edd68680ee77b2965f28c0952918931b97eaaf7638881793d239e11eb/jatinkrmalik/LLMFeeder",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    },
    {
        "project_id": 912509222,
        "content": "ðŸŒŸ <b>reddit-tui</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBrowsing Reddit from the command line.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Subreddit Browsing\nâ€¢ Post Viewing\nâ€¢ Keyboard Navigation\nâ€¢ Configurable\n<br>\nðŸ“– <b>Summary:</b>\nReddittui is a terminal-based UI for browsing Reddit. It allows users to navigate subreddits, view posts and comments, and customize the application's behavior through a configuration file. The application is designed for users who prefer a command-line interface for accessing Reddit.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tonymajestro/reddit-tui?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cecb9566b5b752a0854d290e6b9cb3356af5268126e92f06d4aa34de4cd1a9c2/tonymajestro/reddit-tui",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 796129070,
        "content": "ðŸ”¥ <b>athena-crisis</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDeveloping, modifying, and extending a turn-based tactical strategy game using an open core architecture.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Turn-based tactical strategy game development\nâ€¢ Open core technology for game modification and tool creation\nâ€¢ Modular codebase with separated concerns (data, game state, rendering, UI)\n<br>\nðŸ“– <b>Summary:</b>\nAthena Crisis is an open-core turn-based tactical strategy game. The repository provides the source code, licensed under MIT, to improve the existing game, build additional tools, study game development, or create entirely new turn-based strategy games. The codebase is modular, with packages focusing on data structures, game state, rendering, and UI.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nkzw-tech/athena-crisis?embed=0\">View Project</a>\nâ€¢ <a href=\"https://athenacrisis.com/open-source?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/253473529114cf2dd6f4d00a55f251b8187da2bfd1f601f88122a84d9aa31a92/nkzw-tech/athena-crisis",
        "platform": "telegram",
        "quality_score": 1.0
    },
    {
        "project_id": 915591610,
        "content": "ðŸŒŸ <b>ItsCaptchaBot</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPreventing bots and unwanted users from joining Telegram chats.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Captcha verification for new Telegram chat participants\nâ€¢ Automatic kicking of users who fail captcha\nâ€¢ Multilingual support\n<br>\nðŸ“– <b>Summary:</b>\nItsCaptchaBot is a Telegram bot that adds a captcha verification step for new chat participants. It helps to prevent spam and bots from entering the chat by requiring users to solve a captcha within 10 minutes. The bot supports multiple languages and can be easily installed and configured.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/RimMirK/ItsCaptchaBot?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d80b705c35c2c2fce4a2e3047cac20a0cbaa6622ec85b3da4ef1b9355aa3125c/RimMirK/ItsCaptchaBot",
        "platform": "telegram",
        "quality_score": 0.6
    }
]