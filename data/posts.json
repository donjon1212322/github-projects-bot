[
    {
        "project_id": 1049730948,
        "content": "ðŸŒŸ <b>richpixelvid</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPlaying videos in the terminal with a retro, pixelated aesthetic.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatic terminal size detection and video scaling\nâ€¢ Configurable frame rate\nâ€¢ Memory-efficient streaming\nâ€¢ Support for various video formats (mp4, avi, mov, mkv, etc.)\nâ€¢ Loop playback option\n<br>\nðŸ“– <b>Summary:</b>\nThe Rich-Pixel Video Player is a Python-based tool that allows users to play videos in their terminal using Unicode half-block characters, creating a retro-style visual experience. It supports various video formats and offers options for controlling frame rate, looping, and video dimensions within the terminal.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/pj4533/richpixelvid?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e3204131aecc3c0f920b6a68d932ae57238bae19b8465abfd2b4de94f005a6a4/pj4533/richpixelvid",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1047498571,
        "content": "âœ¨ <b>localports</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuickly identify which processes are listening on specific network ports.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Lists all listening network ports\nâ€¢ Shows the binary path for each port\nâ€¢ Filters out system processes\nâ€¢ Clean table output with port, PID, and binary information\n<br>\nðŸ“– <b>Summary:</b>\nThe `localports` repository provides a command-line tool written in Rust that lists network ports and their associated binaries. It helps developers quickly identify which processes are using specific ports, filtering out system processes to focus on developer-relevant applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/diegoholiveira/localports?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0abce8ed6c19b3eff52592193df31abdbe9fa6fa710fe7b79428b4ed9b1b5a82/diegoholiveira/localports",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 1033896376,
        "content": "ðŸŒŸ <b>dinov3</b> | Jupyter Notebook\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating high-quality dense image features for various vision tasks using self-supervised learning.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ PyTorch implementation of DINOv3\nâ€¢ Pretrained ViT models (ViT-S, ViT-S+, ViT-B, ViT-L, ViT-H+)\nâ€¢ High-resolution dense features\nâ€¢ Self-supervised learning\nâ€¢ Availability on Hugging Face Hub\n<br>\nðŸ“– <b>Summary:</b>\nThe DINOv3 repository provides a PyTorch implementation of the DINOv3 self-supervised vision model. It offers pretrained models and code for generating high-quality dense image features, enabling strong performance on various vision tasks without fine-tuning. The models are available on Hugging Face Hub and supported by the Transformers library.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/facebookresearch/dinov3?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ecdc604b47309e116baac9965b2ea6cf5ca101139751d765e28f1a14266e5ed7/facebookresearch/dinov3",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1032808806,
        "content": "ðŸš€ <b>strix</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated security testing and vulnerability detection in applications, including web applications, codebases, and repositories.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Agentic Security Tools (HTTP Proxy, Browser Automation, Terminal Environments, Python Runtime, Reconnaissance, Code Analysis, Knowledge Management)\n<br>\nðŸ“– <b>Summary:</b>\nStrix is an open-source AI-powered security tool that acts as an autonomous hacker to find vulnerabilities in applications. It uses dynamic testing and exploitation to validate vulnerabilities, aiming to provide accurate security testing with fewer false positives than static analysis tools.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/usestrix/strix?embed=0\">View Project</a>\nâ€¢ <a href=\"https://usestrix.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/136038945d4c11e911cf3ab2d7b5dd32c4f9408180d21729bcc732c09724403d/usestrix/strix",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 29600789,
        "content": "âœ¨ <b>emoji-translate</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTranslating text into emoji for communication and display purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Translation of text to emoji\nâ€¢ Standalone library usage via npm\nâ€¢ Chrome extension for translating web pages\nâ€¢ API with methods for emoji translation and display\n<br>\nðŸ“– <b>Summary:</b>\nThe `emoji-translate` repository provides a JavaScript library and a Chrome extension that translates text into emoji. It allows users to convert English text into strings of emoji, either for standalone use or within a browser environment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/notwaldorf/emoji-translate?embed=0\">View Project</a>\nâ€¢ <a href=\"http://meowni.ca/emoji-translate/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6c95950b75cbadbabb42f703e61b5a934a1bf19899d0071dcbe4fc9688827110/notwaldorf/emoji-translate",
        "platform": "telegram",
        "quality_score": 0.45
    }
]