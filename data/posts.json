[
    {
        "project_id": 958603506,
        "content": "ðŸ’¡ <b>mcp-telegram</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling Large Language Models (LLMs) to control and interact with Telegram accounts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Connects LLMs to Telegram\nâ€¢ Enables AI agents to interact with Telegram\nâ€¢ Supports sending, editing, and deleting messages\nâ€¢ Allows searching chats and managing drafts\nâ€¢ Facilitates downloading media\n<br>\nðŸ“– <b>Summary:</b>\nThe mcp-telegram repository provides a server that connects Large Language Models to Telegram, allowing AI agents to interact with the platform. It leverages the Model Context Protocol (MCP) and Telethon library to enable features like sending messages, managing chats, and handling media, effectively giving LLMs control over Telegram accounts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dryeab/mcp-telegram?embed=0\">View Project</a>\nâ€¢ <a href=\"https://x.com/dryeab/status/1912187620131487999?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7fcb083d7f9badd53b5d07cc6344d424536e488fc830afa58f9cba51434f1bb7/dryeab/mcp-telegram",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 1022762966,
        "content": "ðŸŒŸ <b>YouTubeTLDR</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted YouTube video summarization using Gemini AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Customizable Prompts\nâ€¢ Model Selection (Gemini)\nâ€¢ View Transcript\nâ€¢ History (local browser storage)\nâ€¢ Privacy-Focused (self-hosted)\n<br>\nðŸ“– <b>Summary:</b>\nYouTubeTLDR is a lightweight, self-hosted tool for summarizing YouTube videos using the Gemini AI model. It offers customizable prompts, model selection, transcript viewing, and local storage of summaries. The application is designed for personal use, emphasizing privacy and minimal overhead, and is distributed as a single, small binary.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Milkshiift/YouTubeTLDR?embed=0\">View Project</a>\nâ€¢ <a href=\"https://youtubetldr.onrender.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/07aa0972f0ab0b44aeabb3f364a5c8cd08c441932c1907eea37145424a209cfb/Milkshiift/YouTubeTLDR",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 1024582976,
        "content": "ðŸš€ <b>ramparts</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecurity scanning of Model Context Protocol (MCP) servers for vulnerabilities.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ MCP endpoint discovery\nâ€¢ Static vulnerability analysis\nâ€¢ LLM-powered security analysis\nâ€¢ Risk assessment and reporting\n<br>\nðŸ“– <b>Summary:</b>\nRamparts is a security scanner designed for Model Context Protocol (MCP) servers. It discovers capabilities, performs static and LLM-powered analysis, and provides risk assessments to identify vulnerabilities in MCP server implementations, helping developers secure AI agent interactions with external resources.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/getjavelin/ramparts?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.getjavelin.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7c0777521a2ecf7f14a5a8ebb0df467c8e67794b67300b372b7ce8635a911542/getjavelin/ramparts",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 966235850,
        "content": "ðŸŒŸ <b>sokuji</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLive speech translation in meetings and conversations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Live speech translation using OpenAI, Google Gemini, and Palabra.ai APIs\nâ€¢ Desktop application built with Electron and React\nâ€¢ Browser extension for Chrome, Edge, and other Chromium-based browsers with special integration for Google Meet and Microsoft Teams\n<br>\nðŸ“– <b>Summary:</b>\nSokuji is a live speech translation application that uses AI to bridge language barriers in real-time. It is available as a desktop application built with Electron and React, and as a browser extension for Chrome and Edge. Sokuji offers audio routing and virtual device management for seamless integration with other applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kizuna-ai-lab/sokuji?embed=0\">View Project</a>\nâ€¢ <a href=\"https://kizuna-ai-lab.github.io/sokuji/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ba338f748c2d1137d3e4c52d168a19e10906cd4d9009a69ab2ab3322594fab5e/kizuna-ai-lab/sokuji",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 994292224,
        "content": "ðŸŒŸ <b>ExeRay</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetecting malicious Windows executables for incident response.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Hybrid detection (Random Forest/XGBoost + rule-based checks)\nâ€¢ Real-time predictions with confidence scores\nâ€¢ Handles obfuscated/novel malware better than signature-based tools\nâ€¢ Static feature extraction (entropy, imports, metadata)\n<br>\nðŸ“– <b>Summary:</b>\nExeRay is a tool for detecting malicious Windows executables using machine learning. It employs a hybrid detection approach combining Random Forest and XGBoost algorithms with rule-based checks. The tool extracts static features like entropy, imports, and metadata for real-time classification, offering an advantage over signature-based methods in handling obfuscated or novel malware.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/MohamedMostafa010/ExeRay?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9612525dc00a0e97a607ae2a7302d4fb48d8b72e8b2ba479e9f0fe76ff6fa163/MohamedMostafa010/ExeRay",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    }
]