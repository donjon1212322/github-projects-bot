[
    {
        "project_id": 980772545,
        "content": "ðŸ”¥ <b>terminal-rain-lightning</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating a terminal-based ASCII rain and lightning animation for entertainment and visual appeal.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smooth ASCII rain effect with varying drop characters\nâ€¢ Toggleable \"Thunderstorm\" mode for more intense rain and lightning\nâ€¢ Customizable rain and lightning colors via command-line arguments\nâ€¢ Responsive to terminal resizing\nâ€¢ Lightweight and runs in most modern terminals\n<br>\nðŸ“– <b>Summary:</b>\nThe terminal-rain-lightning repository provides a Python script that generates a visually engaging rain and lightning animation directly within a terminal. It features customizable colors, a thunderstorm mode, and adapts to terminal resizing, offering a lightweight and entertaining experience for users.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/rmaake1/terminal-rain-lightning?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b497f3c66643b6ec18b61af204049159404c81d07b6616aa43e5455c48a17334/rmaake1/terminal-rain-lightning",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 975711238,
        "content": "ðŸŒŸ <b>sshsync</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRunning shell commands and transferring files across multiple remote servers via SSH.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Run shell commands on all hosts or specific groups\nâ€¢ Executes commands concurrently across servers\nâ€¢ Group-based configuration\nâ€¢ Adjustable SSH timeout settings\nâ€¢ Push/pull files between local and remote hosts\n<br>\nðŸ“– <b>Summary:</b>\nsshsync is a CLI tool designed for sysadmins, developers, and automation workflows to execute shell commands and transfer files across multiple remote servers. It allows users to target all servers or specific groups, execute commands concurrently, and offers features like adjustable SSH timeouts, operation history, and dry-run mode for previewing actions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Blackmamoth/sshsync?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/049b8bdc3e936de039255331cff6fe516e8feba877514ce76805685b1f46217f/Blackmamoth/sshsync",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 749126547,
        "content": "ðŸ”¥ <b>Scrapegraph-ai</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated web scraping and data extraction using AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Web scraping using LLM and graph logic\nâ€¢ Support for websites and local documents (XML, HTML, JSON, Markdown)\nâ€¢ Integration with Langchain, Llama Index, Crew.ai, CamelAI\nâ€¢ SDKs for Python and Node.js\n<br>\nðŸ“– <b>Summary:</b>\nScrapeGraphAI is a Python library that leverages LLMs and graph logic to automate web scraping. It supports various data formats and integrates with popular frameworks like Langchain and Llama Index. The library provides SDKs for Python and Node.js, as well as integrations with low-code platforms, making it versatile for different development environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ScrapeGraphAI/Scrapegraph-ai?embed=0\">View Project</a>\nâ€¢ <a href=\"https://scrapegraphai.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a83d75d5580708c5a26160218893993c79c23644d3b65401f1ad96f77d2f1d37/ScrapeGraphAI/Scrapegraph-ai",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 148061471,
        "content": "ðŸ’¡ <b>TLG_JoinCaptchaBot</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVerifying new Telegram group members are human and preventing spam.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatic CAPTCHA for new users\nâ€¢ Removes users failing CAPTCHA\nâ€¢ Deletes URL messages from unverified users (anti-spam)\n<br>\nðŸ“– <b>Summary:</b>\nTLG_JoinCaptchaBot is a Telegram bot that uses image-based CAPTCHAs to verify new users joining a group. It automatically sends a CAPTCHA to each new member and removes those who fail to solve it within a specified time. Additionally, it prevents spam by deleting messages containing URLs sent by unverified users.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/J-Rios/TLG_JoinCaptchaBot?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6e03fc4648ac736c6af90b538c341bd313a1d4332797f426e8a73afb5e4581ac/J-Rios/TLG_JoinCaptchaBot",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 967152344,
        "content": "ðŸ’¡ <b>FaceEnhance</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nImproving facial consistency and quality in AI-generated images.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Face enhancement in AI-generated images\nâ€¢ Preservation of original image background, lighting, and composition\nâ€¢ ComfyUI workflows for face enhancement and embedding distance calculation\n<br>\nðŸ“– <b>Summary:</b>\nThe FaceEnhance repository provides tools for enhancing faces in AI-generated images while preserving the original image's context. It offers ComfyUI workflows and a Gradio demo for interactive use, focusing on improving facial fidelity and consistency. The tool aims to produce high-quality results without altering the background or overall composition of the original image.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/RishiDesai/FaceEnhance?embed=0\">View Project</a>\nâ€¢ <a href=\"https://huggingface.co/spaces/rdesai2/FaceEnhance?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3d8330dfd505321e6516e025a0e17191f3287ed6c97a3957c3b61ae0188e2eb5/RishiDesai/FaceEnhance",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 111583593,
        "content": "âœ¨ <b>scrcpy</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDisplaying and controlling Android devices from a computer.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Android device mirroring and control via USB or TCP/IP\nâ€¢ Audio forwarding (Android 11+)\nâ€¢ Screen recording\nâ€¢ Virtual display support\nâ€¢ Copy-paste in both directions\n<br>\nðŸ“– <b>Summary:</b>\nScrcpy mirrors and controls Android devices on a computer via USB or TCP/IP, enabling users to interact with their device using the computer's keyboard and mouse. It supports features like audio forwarding, screen recording, and virtual displays, offering a seamless control experience without requiring root access or an app installation on the device.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Genymobile/scrcpy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/bb87b2ce6c77f458c32f65eebe6aee0f2f7ba056f94e464f445b7f39f703ecec/Genymobile/scrcpy",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 78527274,
        "content": "ðŸ”¥ <b>WiFi-autopwner</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating the process of identifying and auditing Wi-Fi networks with weak security to assess their vulnerability.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automates searching and auditing Wi-Fi networks\nâ€¢ Identifies Wi-Fi networks with weak security\nâ€¢ Includes a built-in fix for Reaver 'Failed to associate with' errors\n<br>\nðŸ“– <b>Summary:</b>\nThe WiFi-autopwner repository provides a shell script designed to automate the searching and auditing of Wi-Fi networks, specifically targeting those with weak security configurations. It also incorporates a fix for a common Reaver error, enhancing its utility for penetration testing and security assessments of wireless networks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Mi-Al/WiFi-autopwner?embed=0\">View Project</a>\nâ€¢ <a href=\"https://miloserdov.org/?p=35?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7ff521fa6eff95fc18de2f0a2e8b9db4b4896c4b4eb61d4d88de4a491ddea422/Mi-Al/WiFi-autopwner",
        "platform": "telegram",
        "quality_score": 0.35
    },
    {
        "project_id": 38626980,
        "content": "ðŸ”¥ <b>machinae</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCollecting and aggregating security intelligence data from various online sources to identify potential threats.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Collects security intelligence from public sources.\nâ€¢ Supports YAML configuration.\nâ€¢ Parses JSON input.\nâ€¢ Supports multiple output types, including JSON.\nâ€¢ Configuration merging system for easy customization.\n<br>\nðŸ“– <b>Summary:</b>\nMachinae is a security intelligence collector that gathers data from public sources about IPs, domains, URLs, emails, file hashes, and SSL fingerprints. It offers improvements over Automater, including a Python 3 compatible codebase, YAML configuration, JSON parsing support, and multiple output formats. It also features a configuration merging system for easy customization.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/HurricaneLabs/machinae?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b4f367fb73d5b8d672579d215f54dc92a1d5ef237d23dc04869b448d7141f3b2/HurricaneLabs/machinae",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 30870954,
        "content": "ðŸŒŸ <b>LaZagne</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCredentials recovery from local computers\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Password recovery from various software\nâ€¢ Support for multiple operating systems (Windows, Linux, Mac OS)\nâ€¢ Modular design allowing for specific module execution\nâ€¢ Output formatting options (Normal txt, Json, All)\nâ€¢ Option to specify user password for decryption\n<br>\nðŸ“– <b>Summary:</b>\nLaZagne is a password recovery tool designed to retrieve stored credentials from a local computer. It supports various software and operating systems, employing different techniques to extract passwords. The tool offers modular execution, output formatting options, and the ability to specify a user password for decryption.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/AlessandroZ/LaZagne?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f945aa761d0fcc11bb2a8db292586a1460126c0b9e98b49925b57bd28611fbaa/AlessandroZ/LaZagne",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 14343142,
        "content": "ðŸŒŸ <b>webshells</b> | PHP\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a collection of webshells for penetration testing and security analysis.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Collection of various webshells\nâ€¢ Accepts pull requests for additions\nâ€¢ Package available for BlackArch Linux\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a collection of various webshells, intended for use in penetration testing and security analysis. It encourages community contributions through pull requests. A package is available for easy installation on BlackArch Linux, but users are strongly advised to review the source code of each webshell before use due to potential security risks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/BlackArch/webshells?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2ef2bf26c3ff3a89a0f143f2323966894b4be4ac5dae5b8ef0ac0d2ea0f11285/BlackArch/webshells",
        "platform": "telegram",
        "quality_score": 0.45
    }
]