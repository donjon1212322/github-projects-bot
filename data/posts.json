[
    {
        "project_id": 982697710,
        "content": "ðŸ”¥ <b>Dolphin</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nParsing document images to extract structured information.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Document image parsing\nâ€¢ Heterogeneous Anchor Prompting\nâ€¢ Two-stage approach (layout analysis and parallel parsing)\nâ€¢ Pre-trained models\nâ€¢ Multi-page PDF document parsing\n<br>\nðŸ“– <b>Summary:</b>\nThe Dolphin repository provides code and pre-trained models for document image parsing. It uses a novel multimodal approach called Heterogeneous Anchor Prompting to analyze and parse document images, extracting elements like text, figures, and tables in a structured manner. The model operates in two stages: layout analysis and parallel element parsing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bytedance/Dolphin?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a0f33dbccf2478fd80bbdd0fbcb870708b3160f5883655cd25ab07753803362f/bytedance/Dolphin",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    },
    {
        "project_id": 914927532,
        "content": "ðŸ’¡ <b>pxl-srt</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVisually re-organizing images by sorting their pixels based on color, creating a gradient effect.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Drag and drop image upload\nâ€¢ Supports JPG and PNG formats\nâ€¢ Shows original and sorted images side by side\nâ€¢ Multiple image processing in one session\nâ€¢ Color sorting with luminosity grouping\n<br>\nðŸ“– <b>Summary:</b>\nPXL-SRT is a web application that sorts the pixels of an image by color. Users can upload an image, and the application will reorganize the pixels into a smooth color gradient, displaying the original and sorted images side by side.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/solst-ice/pxl-srt?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7e2b9a2c2ed9e666553b701b72ace39e376666135d740df83cdfc7438888373a/solst-ice/pxl-srt",
        "platform": "telegram",
        "quality_score": 0.25
    },
    {
        "project_id": 1062568676,
        "content": "ðŸŒŸ <b>pingerr</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFinding the optimal DNS server for a network by benchmarking multiple public DNS servers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Tests 60+ DNS Servers\nâ€¢ Multiple Test Iterations\nâ€¢ DNS-Ping Correlation Analysis\nâ€¢ Smart Scoring System\nâ€¢ Color-Coded Results\n<br>\nðŸ“– <b>Summary:</b>\nThe pingerr repository provides a DNS benchmarking tool that tests over 60 public DNS servers to identify the fastest and most reliable DNS resolver for a given network. It performs multiple test iterations, analyzes DNS-ping correlation, and uses a smart scoring system to provide configuration recommendations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Panchajanya1999/pingerr?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/58ce0cbda2b5659fa3f30b71beb7e96a516ce9f9af4f7e57726094c68ad61d30/Panchajanya1999/pingerr",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 818001992,
        "content": "ðŸš€ <b>serpl</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSearching and replacing keywords in codebases from the terminal.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Search for keywords across an entire project folder with options for case sensitivity and AST Grep.\nâ€¢ Replace keywords with options for preserving case and AST Grep.\nâ€¢ Interactive preview of search results.\nâ€¢ Keyboard navigation for efficient workflow.\nâ€¢ Configurable key bindings and search modes.\n<br>\nðŸ“– <b>Summary:</b>\nSerpl is a terminal user interface (TUI) application written in Rust that enables users to search and replace keywords within an entire project folder, offering similar functionality to VS Code. It supports features like case sensitivity, AST Grep, interactive preview of search results, and customizable key bindings.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yassinebridi/serpl?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/34e88800ee212c7d0c0e0ad088452d3bb7658e5d5612d7a88cb19d953aa75361/yassinebridi/serpl",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 1051417673,
        "content": "âœ¨ <b>desktop-tui</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a text-based desktop environment for running and managing applications in a terminal.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Parse shortcut files containing apps\nâ€¢ Display any application or command that uses stdout\nâ€¢ Change tilling options\nâ€¢ Can let the user select a file or a folder to use its path as a command argument\nâ€¢ Clock\n<br>\nðŸ“– <b>Summary:</b>\nThe desktop-tui repository provides a text-based desktop environment, similar to tmux, allowing users to run and manage applications without a graphical interface. It supports features like shortcut files, custom commands, window management, and terminal customization, all accessible through a terminal interface.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Julien-cpsn/desktop-tui?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ce48457a0bc3490c78375be6ab9b210a24ad453788bf4492a729e7879fa37fea/Julien-cpsn/desktop-tui",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 637533152,
        "content": "ðŸ”¥ <b>pyapp</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating runtime installers for Python applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Easily build standalone binaries for every platform\nâ€¢ Optional management commands providing functionality such as self updates\nâ€¢ Extremely configurable runtime behavior allowing for targeting of different end users\n<br>\nðŸ“– <b>Summary:</b>\nPyApp is a Rust-based tool for creating standalone, self-bootstrapping binaries for Python applications. It simplifies the packaging and distribution process, allowing developers to easily build and deploy their Python applications across various platforms with optional management commands and configurable runtime behavior.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ofek/pyapp?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ofek.dev/pyapp/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0b509f1f2900cbb77709e4b5a5599cac887a53a21bbc69bbc965b12139a3a60f/ofek/pyapp",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 1041472829,
        "content": "ðŸ’¡ <b>DiffMem</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a version-controlled and efficient memory system for AI agents, particularly for long-term, evolving knowledge.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Git-based versioning for memory\nâ€¢ Markdown storage for human-readability\nâ€¢ BM25 index for fast retrieval\nâ€¢ Differential intelligence via Git diffs\nâ€¢ Current-state focus for efficient queries\n<br>\nðŸ“– <b>Summary:</b>\nDiffMem is a Git-based memory backend designed for AI agents and conversational systems. It leverages Git for tracking the evolution of knowledge and uses Markdown files for human-readable storage. It also uses an in-memory BM25 index for fast, explainable retrieval, enabling efficient and scalable memory management for AI applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Growth-Kinetics/DiffMem?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/eb2317bcda4d945154f4661306b787a6f602a5a0b04439698b2acbeea13a35cc/Growth-Kinetics/DiffMem",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1016047023,
        "content": "ðŸ’¡ <b>PulseTimer</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nImproving focus and productivity through customizable and AI-assisted timer settings for various work and study activities.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI Assistant for smart timer recommendations\nâ€¢ 8 Presets for various activities (Study, Deep Work, etc.)\nâ€¢ Flexible Timer with custom intervals and session names\nâ€¢ Smart Notifications with desktop alerts and audio feedback\n<br>\nðŸ“– <b>Summary:</b>\nPulseTimer is a modern work timer application with AI-powered recommendations. It offers smart timer settings based on user goals, a clean design, and focus features. The application supports both online usage and local installation, providing flexible timer configurations and productivity tracking.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Efeckc17/PulseTimer?embed=0\">View Project</a>\nâ€¢ <a href=\"https://timer.toxi360.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ede951e956aa596c57bff97ca37c9cbb1ed063c90acbbf8fab607b8e5c032dbf/Efeckc17/PulseTimer",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    }
]