[
    {
        "project_id": 1054352512,
        "content": "ðŸ”¥ <b>Blitzkrieg-2</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nNon-commercial research, education, and community modification of the Blitzkrieg 2 game.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Complete game data and resources\nâ€¢ Design documents and art resources\nâ€¢ Game engine source code (C++)\nâ€¢ Development and build tools\nâ€¢ Map editor with documentation\n<br>\nðŸ“– <b>Summary:</b>\nThe Blitzkrieg 2 repository contains the source code and assets for the 2005 real-time tactics game, Blitzkrieg 2. Released under a non-commercial license, it allows the community to explore, learn from, and modify the game's engine and content. The repository includes the complete game data, design documents, source code, and development tools.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nival/Blitzkrieg-2?embed=0\">View Project</a>\nâ€¢ <a href=\"https://en.wikipedia.org/wiki/Blitzkrieg_2?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/616db54abf37c85cc0feea696b90f07a3e25aab3054f5fd10ffd17aebeb3b751/nival/Blitzkrieg-2",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 925270205,
        "content": "ðŸ’¡ <b>cua</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTraining and evaluating AI agents that can control full desktops for automating tasks across different operating systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automate Windows, Linux, and macOS VMs with a consistent API.\nâ€¢ Create & manage VMs locally or using cua cloud.\nâ€¢ Run computer-use models with a consistent schema.\n<br>\nðŸ“– <b>Summary:</b>\nThe `cua` repository provides open-source infrastructure for Computer-Use Agents, enabling AI agents to control full operating systems (macOS, Linux, Windows) within virtual containers. It includes SDKs for interacting with these virtual environments and benchmarks for evaluating agent performance, facilitating the development and deployment of AI agents capable of automating desktop tasks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/trycua/cua?embed=0\">View Project</a>\nâ€¢ <a href=\"https://trycua.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cf753a95e6eb9c8892a65e33e2104a585a3680179204a3e38e70bb33b06e571e/trycua/cua",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 1062117186,
        "content": "ðŸ”¥ <b>zerodistraction</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBlocking distracting websites to improve focus and productivity.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Blocks distracting websites\nâ€¢ Configurable timer duration\nâ€¢ Categorized presets (social media, news, entertainment)\nâ€¢ URL pattern matching for flexible blocking\nâ€¢ Exception list for allowing specific URLs\n<br>\nðŸ“– <b>Summary:</b>\nZeroDistraction is a Firefox extension designed to help users stay focused by blocking distracting websites. It allows users to set a timer and block access to specified sites, offering presets for common distractions like social media and news, while also allowing custom exceptions and additional blocked URLs.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jsattler/zerodistraction?embed=0\">View Project</a>\nâ€¢ <a href=\"https://addons.mozilla.org/en-US/firefox/addon/zerodistraction/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/35adc4a997d65472d5c1d084849957903c302c6f9ea7020733c9a3d1a0cc64c8/jsattler/zerodistraction",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 1053508243,
        "content": "ðŸ”¥ <b>lyra</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating virtual 3D environments for applications like gaming, robotics, autonomous driving, and industrial AI from single images or videos.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generative 3D scene reconstruction\nâ€¢ Video diffusion model self-distillation\nâ€¢ Single image/video input\n<br>\nðŸ“– <b>Summary:</b>\nThe Lyra repository introduces a novel framework for generating 3D scenes from single images or videos using a self-distillation approach. It leverages video diffusion models to create synthetic training data, which is then used to train a 3D Gaussian Splatting (3DGS) decoder, enabling the generation of both static and dynamic 3D scenes without requiring multi-view training data.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nv-tlabs/lyra?embed=0\">View Project</a>\nâ€¢ <a href=\"https://research.nvidia.com/labs/toronto-ai/lyra/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4bc0bd769f69e29046261f72777c26a1fe42891ed7540a257cb1585ea4808c13/nv-tlabs/lyra",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1030580830,
        "content": "âœ¨ <b>VisualPassword</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating and recovering strong passwords without relying on password managers or written notes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Password generation using emojis and keywords\nâ€¢ Local password generation (no internet or database)\nâ€¢ Cross-platform availability (Web, Android, Chrome, Firefox, Telegram)\nâ€¢ Customizable character set and password length\n<br>\nðŸ“– <b>Summary:</b>\nVisual Password is a tool that generates strong, recoverable passwords without needing to write them down or store them in password managers. It uses a combination of memorized emojis and a keyword to create complex passwords locally on the user's device, ensuring no data is sent or saved externally.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/viruseg/VisualPassword?embed=0\">View Project</a>\nâ€¢ <a href=\"https://visualpassword.pages.dev/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3ffb552ffb9c6766c63596ce687efc414fe883824146f957572a128d3ed80e07/viruseg/VisualPassword",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 1056612448,
        "content": "ðŸš€ <b>MIN-Safe-MAX</b> | Smali\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPrivacy-focused messaging with reduced permissions and analytics.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Removal of over 20 permissions (camera, microphone, location, etc.)\nâ€¢ Redirection of analytics servers to 127.0.0.1\n<br>\nðŸ“– <b>Summary:</b>\nThe MIN repository is a modified version of the MAX messenger app for Android. It focuses on privacy by removing unnecessary permissions and redirecting analytics servers to a local address, aiming to reduce tracking and enhance user control over data.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Rise0x00/MIN-Safe-MAX?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/32b36004c89bbf5e1eb682def7463b802528d9454a06a2558feeddfbc34eefec/Rise0x00/MIN-Safe-MAX",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1031256025,
        "content": "ðŸš€ <b>Qwen-Image</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nImage generation and editing, particularly with a focus on text rendering and manipulation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Complex text rendering\nâ€¢ Precise image editing\nâ€¢ Multi-image editing support\nâ€¢ Enhanced single-image consistency (person, product, text)\nâ€¢ Native Support for ControlNet\n<br>\nðŸ“– <b>Summary:</b>\nQwen-Image is a 20B image foundation model excelling in complex text rendering and precise image editing. The model demonstrates strong general capabilities in both image generation and editing, with a particular focus on Chinese text rendering.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/QwenLM/Qwen-Image?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a28404e76d7e0a439a58804828f4955962a630950b5fcb156642d63ecc9f91e9/QwenLM/Qwen-Image",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 673277958,
        "content": "ðŸ’¡ <b>data-juicer</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProcessing and refining data to improve the performance and efficiency of foundation models and LLMs.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Data processing for foundation models\nâ€¢ Support for text and multimodal data (image, audio, video)\nâ€¢ Data cleaning\nâ€¢ Data synthesis\nâ€¢ Data analysis\n<br>\nðŸ“– <b>Summary:</b>\nData-Juicer is a comprehensive system designed for processing text and multimodal data, specifically tailored for use with foundation models and large language models (LLMs). It offers functionalities for data cleaning, synthesis, and analysis, aiming to optimize data quality for pre-training, instruction tuning, and other LLM-related tasks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/modelscope/data-juicer?embed=0\">View Project</a>\nâ€¢ <a href=\"https://modelscope.github.io/data-juicer/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b6618e1fcc97814bfa80cad98bb1f8722baad9786e1cca1ac9c2908b83adff72/modelscope/data-juicer",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 958603506,
        "content": "ðŸ’¡ <b>mcp-telegram</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAllowing AI agents to control and interact with Telegram accounts for various automated tasks and integrations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Connects LLMs to Telegram\nâ€¢ Enables sending, editing, and deleting messages\nâ€¢ Allows searching chats and managing drafts\nâ€¢ Supports media downloading\nâ€¢ Uses Telethon and MTProto for Telegram interaction\n<br>\nðŸ“– <b>Summary:</b>\nThe mcp-telegram repository enables Large Language Models (LLMs) to interact with Telegram through the Model Context Protocol (MCP). It allows AI agents to perform actions such as sending messages, searching chats, managing drafts, and handling media using the Telethon library and MTProto.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dryeab/mcp-telegram?embed=0\">View Project</a>\nâ€¢ <a href=\"https://x.com/dryeab/status/1912187620131487999?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cb9a48cb63d687da78b3a206a2d1114736e7496be9288d16423b8ac6381f6f4d/dryeab/mcp-telegram",
        "platform": "telegram",
        "quality_score": 0.35
    }
]