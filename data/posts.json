[
    {
        "project_id": 825345980,
        "content": "âœ¨ <b>waypoint</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and managing custom URL shorteners for internal tools, documentation, or any web resources.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Human-readable Shortcuts\nâ€¢ Hierarchical Organization\nâ€¢ Real-time Updates\nâ€¢ Flexible Deployment\nâ€¢ Multiple Access Methods\n<br>\nðŸ“– <b>Summary:</b>\nWayPoint is a fast, lightweight URL mapping and redirection system that dynamically manages URL shortcuts through YAML configuration files. It offers features like human-readable shortcuts, hierarchical organization, real-time updates, and flexible deployment options. It can be used as a server for web access or integrated with your shell for command-line usage.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/NishantJoshi00/waypoint?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7694e5272d94f9e00e6238b0a33bc4379d13f5b7f8e52a69be69cce57cf0d8c5/NishantJoshi00/waypoint",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 378998405,
        "content": "ðŸ’¡ <b>minecraft-building-assistance-game</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTraining and evaluating AI assistants for complex assistance games within the Minecraft environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Minecraft Building Assistance Game (MBAG) environment\nâ€¢ AssistanceZero algorithm implementation for training AI assistants\nâ€¢ Multiagent environment runnable within Python\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides the Minecraft Building Assistance Game (MBAG), a multiagent environment for studying assistance games. It includes the implementation of the AssistanceZero algorithm for training AI assistants and allows integration with Minecraft via Project Malmo for visualization and interaction with human players. The repository also provides a house dataset for training and evaluation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/cassidylaidlaw/minecraft-building-assistance-game?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/eb3fbbeb38e1fc2b0f0f2e8af7edc964713aea14e11501def48eab0194c787f8/cassidylaidlaw/minecraft-building-assistance-game",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 771435022,
        "content": "ðŸ’¡ <b>BlueSpy</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProof-of-concept for demonstrating Bluetooth security vulnerabilities and raising awareness about insecure Bluetooth device configurations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Records audio from Bluetooth devices without user awareness\nâ€¢ Exploits insecure Bluetooth pairing procedures\n<br>\nðŸ“– <b>Summary:</b>\nBlueSpy is a proof-of-concept Python script designed to record audio from Bluetooth devices without the user's knowledge. It exploits vulnerabilities related to insecure pairing procedures, specifically the failure to comply with the BSAM-PA-05 control. The repository provides individual scripts for pairing, connecting, recording, and playback, utilizing common Linux tools for Bluetooth management and audio processing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/TarlogicSecurity/BlueSpy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9a71a592e99fb403e7e41977d92bdc666e9e86d7866c2471f900229554bb2962/TarlogicSecurity/BlueSpy",
        "platform": "telegram",
        "quality_score": 0.35
    },
    {
        "project_id": 609875415,
        "content": "âœ¨ <b>GPT_Vuln-analyzer</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated vulnerability analysis and report generation using AI models and network scanning tools.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Network vulnerability analysis using Nmap\nâ€¢ DNS enumeration and subdomain enumeration\nâ€¢ JWT analysis\nâ€¢ AI-powered vulnerability report generation using ChatGPT, Bard, and Llama2\nâ€¢ PCAP analysis\n<br>\nðŸ“– <b>Summary:</b>\nThe GPT_Vuln-analyzer is a proof-of-concept application that leverages AI models (ChatGPT, Bard, Llama2) to automate vulnerability analysis. It integrates network scanning (Nmap), DNS enumeration, JWT analysis, and PCAP analysis to identify potential security weaknesses and generate comprehensive reports. The tool offers both a command-line interface (CLI) and a graphical user interface (GUI) for ease of use.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/morpheuslord/GPT_Vuln-analyzer?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0a8669ea0d8b4bc206f3a4e8bc139ce1f55a9660011a31b1dbc400e6cfc7ea4e/morpheuslord/GPT_Vuln-analyzer",
        "platform": "telegram",
        "quality_score": 0.6000000000000001
    },
    {
        "project_id": 5624155,
        "content": "ðŸ”¥ <b>iSniff-GPS</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPassive sniffing and geolocation of iOS devices based on WiFi network information disclosure.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Passive sniffing of WiFi data (SSID probes, ARPs, MDNS packets)\nâ€¢ Geolocation of devices based on previously joined WiFi networks\nâ€¢ Database storage of captured data\nâ€¢ Web interface for viewing and analyzing data\nâ€¢ Querying Apple's WiFi location service for BSSID coordinates\n<br>\nðŸ“– <b>Summary:</b>\niSniff GPS is a passive sniffing tool that captures WiFi data broadcast by iOS devices to determine their previous geographical locations. It collects SSID probes, ARPs, and MDNS packets, extracts BSSIDs and SSIDs, and queries Apple's WiFi location service and wigle.net to obtain GPS coordinates, providing a web interface for data analysis and visualization.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/hubert3/iSniff-GPS?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/75939e5be0f10f71c9ffcf793bedbc1e22688ece70d55ddd3da0ad298200468e/hubert3/iSniff-GPS",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 952096867,
        "content": "ðŸ”¥ <b>simon</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSystem and Docker container monitoring with alerting capabilities.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ System Monitoring (CPU, memory, disk usage, network activity)\nâ€¢ Web-Based UI\nâ€¢ Docker Integration (container listing, resource usage, logs)\nâ€¢ Alerting System (configurable thresholds)\nâ€¢ Single binary deployment\n<br>\nðŸ“– <b>Summary:</b>\nSimon is a lightweight, web-based system monitor that provides real-time insights into system resources and Docker containers. It features an alerting system for proactive issue detection and is distributed as a single binary, simplifying deployment. The tool aims to provide comprehensive monitoring with minimal resource overhead.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/alibahmanyar/simon?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/28457d922d351dcf8538493e335cf18698169ca46c9b55faa27e1d800a7a379d/alibahmanyar/simon",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 756058516,
        "content": "ðŸ’¡ <b>zane-ops</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosting web services, web applications, databases, and other services for startups and enterprises.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Self-hosted platform\nâ€¢ Open-source\nâ€¢ Supports static sites, web apps, databases, and services\nâ€¢ Uses Docker Swarm for scalability\nâ€¢ Uses Caddy for flexibility\n<br>\nðŸ“– <b>Summary:</b>\nZaneOps is a self-hosted, open-source platform designed to simplify the deployment and management of web services, applications, and databases. It offers a free alternative to platforms like Heroku and Railway by leveraging Docker Swarm for scalability and Caddy for flexibility, making it suitable for both startups and enterprises.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/zane-ops/zane-ops?embed=0\">View Project</a>\nâ€¢ <a href=\"https://zaneops.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f9eb6230a02b3687475ede2c6565ab373e119d69d59c96a40e4d02e7cc956168/zane-ops/zane-ops",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 911620016,
        "content": "ðŸš€ <b>godex</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCommand-line file management\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ File Search\nâ€¢ Compression Tools\nâ€¢ Google Drive Backup\nâ€¢ File Versioning\nâ€¢ Shell Completion\n<br>\nðŸ“– <b>Summary:</b>\ngodex is a command-line file manager designed to simplify file operations. It offers features such as file searching, compression, cloud backup integration with Google Drive, and file versioning. The tool aims to provide a comprehensive solution for managing files directly from the command line.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/inodinwetrust10/godex?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e7f6196857551ca9f0edaa4ed2cc23dd6f812966d077c3e226febf5f2c67a2a5/inodinwetrust10/godex",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    }
]