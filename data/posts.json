[
    {
        "project_id": 918932603,
        "content": "ðŸ”¥ <b>UI-TARS-desktop</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRemote control and automation of computer and browser tasks through a GUI agent.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Native GUI Agent\nâ€¢ Local computer operator\nâ€¢ Remote computer operator\nâ€¢ Browser operator\nâ€¢ Remote Browser Operator\n<br>\nðŸ“– <b>Summary:</b>\nThe UI-TARS-desktop repository is a desktop application that provides a native GUI agent based on the UI-TARS model. It allows users to interact with and control computers and browsers remotely through a graphical interface, leveraging multimodal AI capabilities. The application ships with local and remote computer as well as browser operators.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bytedance/UI-TARS-desktop?embed=0\">View Project</a>\nâ€¢ <a href=\"https://agent-tars.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a45c109d46862504419977c732c6a64a014ab5c0ba6ae4197d1fca100356e4fd/bytedance/UI-TARS-desktop",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1039587768,
        "content": "ðŸ’¡ <b>osaurus</b> | Swift\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRunning LLMs locally on Apple Silicon Macs for development, experimentation, and privacy-focused AI applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Native MLX runtime optimized for Apple Silicon\nâ€¢ OpenAI API compatible (/v1/models, /v1/chat/completions)\nâ€¢ Ollama API compatible (/chat endpoint with NDJSON streaming)\nâ€¢ Function/Tool calling (OpenAI-style)\nâ€¢ Fast token streaming (Server-Sent Events)\n<br>\nðŸ“– <b>Summary:</b>\nOsaurus is a native, Apple Silicon-only local LLM server, similar to Ollama. It leverages Apple's MLX framework for optimized performance on M-series chips. It features a SwiftUI app and a SwiftNIO server with OpenAI and Ollama-compatible endpoints, enabling local LLM inference and experimentation on macOS.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dinoki-ai/osaurus?embed=0\">View Project</a>\nâ€¢ <a href=\"https://dinoki.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/feb53f72ab3170256f5226badc7376f63d1bb77f07950342191eb225a0e4e0f6/dinoki-ai/osaurus",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 10126031,
        "content": "ðŸ”¥ <b>mixxx</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPerforming live DJ mixes using digital music files.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Live DJ mixing\nâ€¢ Cross-platform support (GNU/Linux, Windows, macOS)\nâ€¢ Bug tracker using Github Issues\nâ€¢ Build instructions for multiple operating systems\nâ€¢ Translation support for multiple languages\n<br>\nðŸ“– <b>Summary:</b>\nMixxx is a free, open-source DJ software that provides all the necessary tools for live DJ mixing. It supports various operating systems including GNU/Linux, Windows, and macOS, and allows users to perform mixes using digital music files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mixxxdj/mixxx?embed=0\">View Project</a>\nâ€¢ <a href=\"http://mixxx.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4bf92c7abd3dd35f38e6a9558be95c2e9184ad6e4820c042f09f81e3d4becad1/mixxxdj/mixxx",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 957859485,
        "content": "âœ¨ <b>cai</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding and deploying AI-powered offensive and defensive automation for cybersecurity tasks such as vulnerability discovery, exploitation, and security assessment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ 300+ AI Models (OpenAI, Anthropic, DeepSeek, Ollama, and more)\n<br>\nðŸ“– <b>Summary:</b>\nCybersecurity AI (CAI) is an open-source Python framework designed to empower security professionals in building and deploying AI-powered offensive and defensive automation. It provides building blocks for creating specialized AI agents that assist with mitigation, vulnerability discovery, exploitation, and security assessment. It supports various AI models and built-in security tools.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aliasrobotics/cai?embed=0\">View Project</a>\nâ€¢ <a href=\"https://aliasrobotics.github.io/cai/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e8a10a57061cf5a4a0cb8513e6fc5e6e9da16a7057e358d711ffb9ed7a637129/aliasrobotics/cai",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 1575307,
        "content": "âœ¨ <b>pyopencl</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAccessing and utilizing GPUs and other massively parallel compute devices from Python for tasks like scientific computing, array manipulation, and parallel algorithm implementation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Object cleanup tied to object lifetime (RAII)\nâ€¢ Completeness of OpenCL API access\nâ€¢ Automatic error checking with Python exceptions\nâ€¢ C++ base layer for speed\n<br>\nðŸ“– <b>Summary:</b>\nPyOpenCL provides Python bindings for the OpenCL parallel computing framework, enabling access to GPUs and other parallel compute devices from Python. It offers features like automatic error checking, object lifetime management (RAII), and comprehensive access to the OpenCL API, aiming for both ease of use and performance.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/inducer/pyopencl?embed=0\">View Project</a>\nâ€¢ <a href=\"http://mathema.tician.de/software/pyopencl?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ecad0f2a5270c2761cc2135127efc1b10cca8b6f2892976fed8112a2ae1040d3/inducer/pyopencl",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 780278376,
        "content": "ðŸ’¡ <b>premier</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTransforming Python web applications into full-featured API gateways.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ API Gateway Features (caching, rate limiting, retry logic, timeout)\nâ€¢ Path-Based Policies\nâ€¢ Load Balancing & Circuit Breaker\nâ€¢ WebSocket Support\nâ€¢ Web Dashboard\n<br>\nðŸ“– <b>Summary:</b>\nPremier is a Python API gateway that can be used as a standalone service, ASGI middleware, or with decorators. It provides features like caching, rate limiting, retry logic, timeouts, and a web dashboard for monitoring and configuration, aiming for simplicity and ease of integration with existing Python applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/raceychan/premier?embed=0\">View Project</a>\nâ€¢ <a href=\"https://lihil.cc/premier?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7b0917720263af1b2ca8e0358ce9d73a111c6cd17bb60d76d3630981f1722241/raceychan/premier",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1013542777,
        "content": "âœ¨ <b>subarr</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating actions based on new YouTube uploads from specified channels or playlists.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ YouTube channel/playlist/subscription monitoring\nâ€¢ Webhook integration (e.g., Discord)\nâ€¢ Process execution on new uploads (e.g., yt-dlp)\nâ€¢ Lightweight resource usage (suitable for Raspberry Pi)\nâ€¢ RSS subscription based\n<br>\nðŸ“– <b>Summary:</b>\nSubarr is a lightweight JavaScript application designed to monitor YouTube channels, playlists, and subscriptions for new video uploads. It allows users to define actions, such as sending webhooks or executing processes like downloading videos via yt-dlp, when new content is detected, providing a Sonarr-like experience for YouTube.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/derekantrican/subarr?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/aa87389cc73ec7d8fff87ac9b0b1b5af29e5d760fa17f7c421fd60a61a665e4c/derekantrican/subarr",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 393235957,
        "content": "âœ¨ <b>risinglight</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEducation and learning about OLAP database systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ OLAP database system\nâ€¢ Educational purpose\nâ€¢ Written in Rust\nâ€¢ Supports SQL queries\nâ€¢ Includes documentation for development and usage\n<br>\nðŸ“– <b>Summary:</b>\nRisingLight is an educational OLAP database system written in Rust. It's designed for learning and experimentation with OLAP database concepts and is not intended for production use. The repository provides a platform for understanding database internals and query processing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/risinglightdb/risinglight?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ad89c7b8b51ee0327871b28f41c651b7f5e2216a552bcd13179c3d80aa54c1ef/risinglightdb/risinglight",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    }
]