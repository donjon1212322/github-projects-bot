[
    {
        "project_id": 1027789393,
        "content": "ðŸ’¡ <b>rewindtty</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCapturing and replaying terminal sessions with precise timing for debugging, auditing, or demonstration purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Record terminal sessions with accurate timing\nâ€¢ Replay sessions with original timing\nâ€¢ Store sessions in JSON format\nâ€¢ Graceful shutdown and file closure on interruption\nâ€¢ Lightweight with minimal dependencies\n<br>\nðŸ“– <b>Summary:</b>\nRewindTTY is a C-based terminal session recorder and replayer. It captures terminal input/output with accurate timing information and stores it in a JSON format. The tool allows users to replay sessions with original timing, making it useful for debugging, auditing, or creating demonstrations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/debba/rewindtty?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f54810e030376fcc3e574e77e9e4f7f87a1ebca4b766d930e1a90724e17145cc/debba/rewindtty",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 188700274,
        "content": "ðŸŒŸ <b>copyparty</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTurning almost any device into a file server with resumable uploads/downloads.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Resumable uploads/downloads\nâ€¢ HTTP, WebDAV, FTP, TFTP, SMB protocols\nâ€¢ Android app and iOS shortcuts\nâ€¢ Media indexer and thumbnails\nâ€¢ File manager (cut/paste, rename, delete)\n<br>\nðŸ“– <b>Summary:</b>\nCopyparty is a portable file server that supports resumable uploads and downloads through a web browser. It offers multiple protocols including HTTP, WebDAV, FTP, TFTP, and SMB, and provides features like media indexing, thumbnails, file management, and sharing capabilities. It can be deployed on various devices and has optional Android and iOS integrations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/9001/copyparty?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/188700274/42754d5b-fa34-45dd-9030-6ff0c16036be",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 949199938,
        "content": "ðŸ”¥ <b>machine-learning-visualized</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLearning and visualizing machine learning algorithms through code and interactive notebooks.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Implements machine learning algorithms from first principles\nâ€¢ Provides Jupyter Notebooks with mathematical derivations\n<br>\nðŸ“– <b>Summary:</b>\nThe Machine Learning Visualized repository provides Jupyter Notebook implementations of various machine learning algorithms, derived from first principles using NumPy. It focuses on visualizing the training process and the impact of weights on loss functions through interactive notebooks. The repository serves as a platform for learning and understanding machine learning concepts through interactive code and visualizations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gavinkhung/machine-learning-visualized?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ml-visualized.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b0a529646911ea6e2899294323058f1e300f897e2e01a8cddd58e0e87084c20e/gavinkhung/machine-learning-visualized",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 652712035,
        "content": "ðŸ”¥ <b>airllm</b> | Jupyter Notebook\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRunning large language models with limited GPU memory.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Enables inference of 70B LLMs on a single 4GB GPU\nâ€¢ Supports Llama3.1 405B on 8GB VRAM\nâ€¢ Offers 8bit/4bit quantization\nâ€¢ Supports CPU inference\nâ€¢ Supports non-sharded models\n<br>\nðŸ“– <b>Summary:</b>\nAirLLM optimizes memory usage for LLM inference, allowing 70B models to run on a single 4GB GPU without quantization. It supports various models like Llama, ChatGLM, QWen, and offers features like model compression and CPU inference. The library aims to make large language models accessible on resource-constrained environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/lyogavin/airllm?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/32404435dd9fc4e8db7676158afed2224355ff93befe5ed0c5d2c812c50eb94c/lyogavin/airllm",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 319848237,
        "content": "ðŸ”¥ <b>doggo</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCommand-line DNS client for performing DNS lookups and queries.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Human-readable output\nâ€¢ JSON output support\nâ€¢ Multiple transport protocols (DoH, DoT, DoQ, TCP, UDP, DNSCrypt)\nâ€¢ Multiple resolver support\nâ€¢ Reverse DNS lookups\n<br>\nðŸ“– <b>Summary:</b>\nDoggo is a command-line DNS client written in Go that provides human-readable output and supports multiple DNS protocols like DoH, DoT, and DoQ. It allows users to perform DNS lookups, query specific record types, and obtain results in JSON format for scripting. Doggo offers cross-platform support and aims to be a modern alternative to traditional DNS tools like `dig`.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mr-karan/doggo?embed=0\">View Project</a>\nâ€¢ <a href=\"https://doggo.mrkaran.dev/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8a7c7eb4957ed5fd4b256333a82ce9d353fecd0b8ebc4fa02150f60059cafc81/mr-karan/doggo",
        "platform": "telegram",
        "quality_score": 0.85
    }
]