[
    {
        "project_id": 903167385,
        "content": "ðŸŒŸ <b>blue95</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProvides a modern, lightweight desktop experience reminiscent of Windows 95.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Fedora Atomic Xfce base\nâ€¢ Chicago95 theme\nâ€¢ Image-based installation\nâ€¢ Immutable system\nâ€¢ Automatic updates\n<br>\nðŸ“– <b>Summary:</b>\nBlue95 is a Linux distribution based on Fedora Atomic Xfce, themed to resemble Windows 95. It offers an immutable, image-based system with automatic updates and pre-installed codecs, providing a nostalgic yet modern computing experience. Installation is primarily intended through rebasing from another Fedora Atomic desktop.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/winblues/blue95?embed=0\">View Project</a>\nâ€¢ <a href=\"https://blues.win/95?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/903167385/baa29cc3-468a-43a2-9b38-bdd8ee8a9e88",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 936511251,
        "content": "ðŸŒŸ <b>FileRise</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nWeb-based file management\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multiple File/Folder Uploads with Progress (Resumable.js Integration)\nâ€¢ Built-in File Editing & Renaming (CodeMirror)\nâ€¢ Built-in File Preview (Images, Videos, Audio, PDFs)\nâ€¢ Gallery (Grid) View\nâ€¢ Batch Operations (Delete/Copy/Move/Download/Extract Zip)\n<br>\nðŸ“– <b>Summary:</b>\nFileRise is a lightweight, self-hosted web application designed for efficient file management. It offers features like multi-file uploads with progress tracking, built-in file editing with syntax highlighting, file previews, gallery view, and batch operations. It serves as an alternative to other file management solutions, providing an easy-to-set-up experience for document management, image galleries, and other file-intensive applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/error311/FileRise?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d3d9ad3abd01e9bcd070c98a53aaac705f600591ae50075e3efc3b004d87cab0/error311/FileRise",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 91629816,
        "content": "ðŸ”¥ <b>freqtrade</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated cryptocurrency trading\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Supports multiple exchanges\nâ€¢ Telegram and webUI control\nâ€¢ Backtesting\nâ€¢ Plotting tools\nâ€¢ Money management tools\n<br>\nðŸ“– <b>Summary:</b>\nFreqtrade is a free and open-source crypto trading bot written in Python. It allows users to automate their trading strategies across multiple exchanges, offering features like backtesting, strategy optimization via machine learning, and control through Telegram or a web UI. The bot supports dry-run mode for testing strategies without risking real funds.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/freqtrade/freqtrade?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.freqtrade.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/91629816/d6659780-a0e1-11eb-8a38-933cd666cdeb",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 259053705,
        "content": "ðŸ’¡ <b>symbiote</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSocial engineering for educational purposes (capturing webcam images via phishing)\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Phishing page creation\nâ€¢ Webcam image capture\nâ€¢ Tunnelling options (Ngrok, Localhost.run, LocalXpose)\n<br>\nðŸ“– <b>Summary:</b>\nThe Symbiote repository is a social engineering tool designed for educational purposes. It creates a phishing page to request camera permissions and capture webcam images from a target's device. The tool offers various tunnelling options for remote access and is intended for use in a controlled environment to demonstrate security vulnerabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/hasanfirnas/symbiote?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e2bec454868b07ff893daccae66d45de1ce1da8c24eaf7ff5a53ea13aff705b5/hasanfirnas/symbiote",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 937782240,
        "content": "ðŸš€ <b>gochromecast</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nStreaming videos to Android TV or Google Chromecast devices.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Streams media to Android TV or Chromecast devices\nâ€¢ Discovers devices on the network\nâ€¢ Casts video with subtitles\n<br>\nðŸ“– <b>Summary:</b>\nGoChromecast is a tool written in Go that allows users to stream videos to their Android TV or Google Chromecast devices. It discovers devices on the network and casts the specified video, including subtitles, to the selected device. The tool is designed for simple media streaming and does not currently support ffmpeg.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vjerci/gochromecast?embed=0\">View Project</a>\nâ€¢ <a href=\"https://vjerci.com/writings/chromecast/basics/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f6b046850bc8414022f6977451e444bc45ed8a7f5155a773b0dd7aab4e4de5b1/vjerci/gochromecast",
        "platform": "telegram",
        "quality_score": 0.3
    },
    {
        "project_id": 908197385,
        "content": "ðŸš€ <b>nativewebp</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEncoding images to WebP format in Go applications without external dependencies.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Native WebP encoding in Go\nâ€¢ No dependencies on libwebp\nâ€¢ WebP lossless (VP8L) support\nâ€¢ Decoding support via golang.org/x/image/webp wrapper\nâ€¢ Faster and smaller files compared to standard PNG encoder\n<br>\nðŸ“– <b>Summary:</b>\nThe nativewebp repository provides a native Go WebP encoder, eliminating the need for libwebp. It focuses on performance and efficiency, producing smaller files and encoding faster than the standard Go PNG encoder. Currently, it supports WebP lossless images (VP8L) and offers decoding support via a wrapper around the golang.org/x/image/webp package.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/HugoSmits86/nativewebp?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2e3ab90a9d4c02bfbabd288fa221a0f6896c546419ac1e995faaa2ea157eb306/HugoSmits86/nativewebp",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 19463625,
        "content": "ðŸš€ <b>nginx-proxy</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomatically configure Nginx as a reverse proxy for Docker containers, simplifying the process of routing traffic to different containers based on their VIRTUAL_HOST environment variables.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automated reverse proxy configuration for Docker containers\nâ€¢ Dynamic configuration updates based on container start/stop events\nâ€¢ Uses docker-gen to generate nginx configurations\n<br>\nðŸ“– <b>Summary:</b>\nThe nginx-proxy repository provides an automated Nginx reverse proxy solution for Docker containers. It leverages docker-gen to dynamically generate Nginx configurations based on container start and stop events, routing traffic based on the VIRTUAL_HOST environment variable. The repository offers both Debian and Alpine-based images for flexibility.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nginx-proxy/nginx-proxy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/57fa65ea5927060c8490eaebea3f7b223cbc03a25e82493def7889b9cb29772f/nginx-proxy/nginx-proxy",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 584240610,
        "content": "ðŸŒŸ <b>neo-server</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIoT data management and analysis\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Time-series database\nâ€¢ MQTT API\nâ€¢ HTTP API\nâ€¢ gRPC API\nâ€¢ SSH CLI\n<br>\nðŸ“– <b>Summary:</b>\nThe machbase-neo repository provides an IoT database server that combines a time-series database with MQTT and HTTP APIs for data ingestion and a web UI for visualization. It's designed for building IoT platforms, enabling data collection from sensors, storage, and real-time analysis.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/machbase/neo-server?embed=0\">View Project</a>\nâ€¢ <a href=\"https://docs.machbase.com/neo/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f47dcba980c9f9742b69c85dee4783c9190ce90bca9177f4818306c4f013df65/machbase/neo-server",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 933661622,
        "content": "âœ¨ <b>monarch</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSimplifying MongoDB interactions in Go by providing an ORM-like interface for common database operations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ ORM for MongoDB in Go\nâ€¢ Seamless data queries\nâ€¢ Collection API\nâ€¢ Find Many, Find One, Update One, Update Many, Delete One, Delete Many operations\nâ€¢ Save operation\n<br>\nðŸ“– <b>Summary:</b>\nMonarch is a Go ORM designed to simplify MongoDB interactions. It offers a collection API for performing common database operations such as querying, updating, deleting, and saving data. Monarch aims to provide an easier and less repetitive way to interact with MongoDB compared to using the standard Go driver directly.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/go-monarch/monarch?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9ca729f71f1e096abe7a5a0a40cebc25028c8edb7cd70eb571480c249e2f3d12/go-monarch/monarch",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    }
]