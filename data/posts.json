[
    {
        "project_id": 1052645535,
        "content": "ðŸš€ <b>gacua</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating computer tasks such as gameplay assistance and software installation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Out-of-the-box computer use\nâ€¢ High accuracy task execution\nâ€¢ Step-by-step control & observability\nâ€¢ Remote operation\n<br>\nðŸ“– <b>Summary:</b>\nGACUA (Gemini CLI as Computer Use Agent) is an out-of-the-box computer use agent powered by Gemini CLI. It allows users to automate computer tasks with step-by-step control and observability, enabling remote operation and high accuracy task execution through an \"Image Slicing + Two-Step Grounding\" method.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/openmule/gacua?embed=0\">View Project</a>\nâ€¢ <a href=\"https://blog.mulerun.com/p/gacua-a-free-and-open-source-computer-use-agent-for-developers/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/564b7594dfa243f10b8efe693300021462ab3008b6f80cbeac6e3a5dfda30c64/openmule/gacua",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 1053061334,
        "content": "ðŸš€ <b>yapyap</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVoice dictation and transcription for text input in Linux environments.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Push-to-talk dictation\nâ€¢ Transcription using whisper.cpp\nâ€¢ Output to stdout\nâ€¢ Customizable key combination\nâ€¢ Model selection for transcription\n<br>\nðŸ“– <b>Summary:</b>\nYapyap is a push-to-talk dictation tool that transcribes audio to text using whisper.cpp and outputs the transcription to stdout. It's primarily designed for Linux and allows users to record audio by holding down a key combination, which is then transcribed and can be piped to other commands for further processing, such as copying to the clipboard and pasting.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/lxe/yapyap?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/36898d9bd76957a4f6023f5bb13b0acf38694ecafcb5e250bc510eb3c432097e/lxe/yapyap",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1006184123,
        "content": "âœ¨ <b>Windows-Use</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating Windows tasks using AI agents and LLMs.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Windows GUI automation\nâ€¢ AI agent integration\nâ€¢ Task automation (opening apps, clicking buttons, typing)\nâ€¢ Shell command execution\nâ€¢ UI state capture\n<br>\nðŸ“– <b>Summary:</b>\nWindows-Use is a Python-based automation agent that allows AI agents to interact directly with the Windows GUI layer. It enables tasks like opening applications, clicking buttons, typing, and executing shell commands without relying on traditional computer vision models, making it suitable for LLMs to perform computer automation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/CursorTouch/Windows-Use?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/729e64ee7ce13b87de1e1ddfdbaebdc321e3e0a89316b45e025122da656e71fc/CursorTouch/Windows-Use",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 1047458606,
        "content": "âœ¨ <b>omarchist</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVisual creation and editing of Omarchy themes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Theme Designer: Visual editor for creating and editing Omarchy themes\n<br>\nðŸ“– <b>Summary:</b>\nOmarchist is a GUI application built with Tauri/Rust/Svelte for creating and editing themes for Omarchy. It provides a visual editor with color pickers and an intuitive interface to design, preview, and fine-tune themes, simplifying the customization process.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tahayvr/omarchist?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/1047458606/2c9b9207-5928-4fb3-9baa-3117afce57ba",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 683332044,
        "content": "âœ¨ <b>dbcls</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDatabase management and data analysis through a terminal interface.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ SQL query editing with syntax highlighting\nâ€¢ Direct query execution from the editor\nâ€¢ Data visualization with interactive tables\nâ€¢ Support for multiple database engines (MySQL, PostgreSQL, ClickHouse)\nâ€¢ Configuration via command line or config file\n<br>\nðŸ“– <b>Summary:</b>\nDbCls is a terminal-based database client that combines SQL query editing with data visualization. It supports multiple database engines like MySQL, PostgreSQL, and ClickHouse, allowing users to execute queries, inspect table schemas, and visualize data using interactive tables.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Sets88/dbcls?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3e52af2389df39a85512695ca461a55fb5215ad41e37fd27157940296e308eeb/Sets88/dbcls",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 52420005,
        "content": "ðŸ”¥ <b>griddb</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nStoring, managing, and analyzing time series data from IoT devices and other big data sources with high performance and flexibility through NoSQL and SQL interfaces.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ NoSQL interface\nâ€¢ SQL interface\nâ€¢ Time series data support\nâ€¢ IoT data management\nâ€¢ Big data processing\n<br>\nðŸ“– <b>Summary:</b>\nGridDB is a next-generation open-source database designed for time series, IoT, and big data applications. It offers both NoSQL and SQL interfaces, aiming for fast and easy data management. The repository includes server and Java client components, with additional JDBC driver support available in a separate repository.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/griddb/griddb?embed=0\">View Project</a>\nâ€¢ <a href=\"https://griddb.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5fc99623c2cd4739f48df69e9d7288df7d010fa87bfe2a492c5fd2af67dfb9b5/griddb/griddb",
        "platform": "telegram",
        "quality_score": 0.7000000000000001
    },
    {
        "project_id": 459739627,
        "content": "ðŸš€ <b>Replibyte</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSeeding development databases with anonymized production data.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Support data dump and restore for PostgreSQL, MySQL and MongoDB\nâ€¢ Analyze your data schema\nâ€¢ Replace sensitive data with fake data\nâ€¢ Works on large database (> 10GB)\nâ€¢ Database Subsetting\n<br>\nðŸ“– <b>Summary:</b>\nReplibyte is a tool designed to seed development databases with production data while ensuring sensitive information is protected. It supports data dumping and restoration for PostgreSQL, MySQL, and MongoDB, and includes features for data subsetting, on-the-fly compression/encryption, and custom data transformations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Qovery/Replibyte?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.replibyte.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/459739627/6d24316e-c920-4073-9668-cb89e0802a7a",
        "platform": "telegram",
        "quality_score": 0.55
    }
]