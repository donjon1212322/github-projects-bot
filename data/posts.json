[
    {
        "project_id": 940004912,
        "content": "ðŸ”¥ <b>ClipboardShield</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProtecting the system clipboard from unauthorized access by malicious applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Protection of clipboard content against unauthorized access\nâ€¢ Implementation of hooks for event detection\nâ€¢ Inter-process communication (IPC) for security management\nâ€¢ Use of custom threads to optimize performance\nâ€¢ Logging capabilities for security auditing\n<br>\nðŸ“– <b>Summary:</b>\nClipboard Shield is designed to monitor and protect sensitive data copied to the system clipboard, preventing unauthorized access from malicious applications. It utilizes features like event hooks, inter-process communication, custom threads, logging, and Windows service integration to provide continuous protection and security auditing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/CoinFabrik/ClipboardShield?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/af46b52c35cd45cbe30cef14fc128e3131c1748853b389e74096550ff54f3521/CoinFabrik/ClipboardShield",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 5616877,
        "content": "ðŸš€ <b>Thrive</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDevelopment of an open-source evolution simulation game called Thrive.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Evolution simulation game development\nâ€¢ C# codebase with Godot Engine integration\nâ€¢ Asset management using Git LFS\nâ€¢ Extensive documentation and contribution guidelines\nâ€¢ Community-driven development with forums and translation support\n<br>\nðŸ“– <b>Summary:</b>\nThrive is an open-source evolution simulation game developed in C# using the Godot Engine. The repository contains the game's source code, assets, and documentation, and it encourages community contributions through coding, art, translation, and testing. It uses Git LFS for managing large asset files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Revolutionary-Games/Thrive?embed=0\">View Project</a>\nâ€¢ <a href=\"https://revolutionarygamesstudio.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/5616877/23434400-d399-11eb-9a83-a0ece3bc9269",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 17420614,
        "content": "ðŸŒŸ <b>SeleniumBase</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nWeb automation, testing, and bypassing bot-detection.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Web automation\nâ€¢ Web testing\nâ€¢ Web scraping\nâ€¢ Bot detection bypass\nâ€¢ End-to-end testing\n<br>\nðŸ“– <b>Summary:</b>\nSeleniumBase is a Python framework for web automation and end-to-end testing. It provides APIs for browser automation, web crawling, web scraping, and bypassing bot detection. It integrates with pytest and offers features for creating robust and reliable web tests.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/seleniumbase/SeleniumBase?embed=0\">View Project</a>\nâ€¢ <a href=\"https://seleniumbase.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/17420614/88f045f8-d20b-4d5e-9e71-fa03242f5654",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 930695967,
        "content": "ðŸŒŸ <b>voice-transcribe-summarize-telegram-bot</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTranscribing and summarizing voice notes received via Telegram.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Transcribes voice notes from Telegram messages\nâ€¢ Summarizes transcribed content\nâ€¢ Uses Whisper for transcription\nâ€¢ Uses Llama 3 for summarization\nâ€¢ Supports multiple audio formats\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a Telegram bot that transcribes voice notes using Whisper and summarizes them using Llama 3, both powered by Groq's API. It allows users to easily convert spoken audio into text and receive concise summaries directly within Telegram, supporting various audio formats.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aviaryan/voice-transcribe-summarize-telegram-bot?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c3b74d898009af7e3a9a30db552bddde521f19d1574012eeb86454e0b3d196f9/aviaryan/voice-transcribe-summarize-telegram-bot",
        "platform": "telegram",
        "quality_score": 0.3
    },
    {
        "project_id": 23129458,
        "content": "ðŸš€ <b>aseprite</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating animated sprites and pixel art.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Layer and frame-based sprite composition\nâ€¢ Color profile and mode support (RGBA, Indexed, Grayscale)\nâ€¢ Animation facilities with real-time preview and onion skinning\nâ€¢ Export/import to sprite sheets, GIF, PNG, and other formats\nâ€¢ Pixel-art specific tools (Pixel Perfect, Shading, Custom Brushes)\n<br>\nðŸ“– <b>Summary:</b>\nAseprite is a C++ based animated sprite editor and pixel art tool. It provides features for creating and editing sprites with layers, frames, color profiles, and animation tools. It supports exporting to various formats and offers pixel-art specific tools, Lua scripting, and a command-line interface.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aseprite/aseprite?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.aseprite.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/23129458/bc7e1a00-4beb-11ea-965b-60f3458721df",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 869724660,
        "content": "ðŸŒŸ <b>quicky</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nStreamlining the deployment and management of self-hosted Next.js and Node.js applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ GitHub Integration for project deployment and management\nâ€¢ Automated process management using PM2\nâ€¢ Simplified project updates and removal\nâ€¢ Automated domain and SSL certificate configuration with Nginx\n<br>\nðŸ“– <b>Summary:</b>\nQuicky CLI is a tool designed to simplify the deployment and management of self-hosted Next.js and Node.js applications. It offers features such as GitHub integration, automated process management with PM2, domain and SSL configuration, webhook management, and a dashboard for monitoring, aiming to streamline the entire application lifecycle on remote servers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/alohe/quicky?embed=0\">View Project</a>\nâ€¢ <a href=\"https://quicky.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/869724660/b437114b-eb86-48eb-83ba-5d9befc76813",
        "platform": "telegram",
        "quality_score": 0.35
    },
    {
        "project_id": 869660918,
        "content": "ðŸ”¥ <b>mle-bench</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBenchmarking AI agents' performance in machine learning engineering tasks.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Dataset construction code\nâ€¢ Evaluation logic\nâ€¢ Evaluated agents\nâ€¢ Benchmarking setup recommendations\nâ€¢ Lite evaluation using Low complexity split\n<br>\nðŸ“– <b>Summary:</b>\nMLE-bench is a benchmark designed to evaluate how well AI agents perform in machine learning engineering. It provides code for dataset construction, evaluation logic, and pre-evaluated agents. The repository also offers a recommended benchmarking setup and a 'lite' evaluation option using a low-complexity dataset split for faster and more cost-effective assessments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/openai/mle-bench?embed=0\">View Project</a>\nâ€¢ <a href=\"https://openai.com/index/mle-bench/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/42ef58cb97aafe10f05810e7f6d71a4e1269f69cfdf06f3899bf06ff83ed3cd9/openai/mle-bench",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 481398639,
        "content": "ðŸš€ <b>caps-log</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPersonal journaling with organization and habit tracking features.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal-based journaling\nâ€¢ Markdown log storage\nâ€¢ Section and tag-based organization\nâ€¢ Calendar highlighting based on tags/sections\nâ€¢ External editor integration via $EDITOR\n<br>\nðŸ“– <b>Summary:</b>\nCaps-Log is a terminal-based journaling tool that stores entries as Markdown files. It allows users to organize their entries using sections and tags, and provides a calendar view that highlights dates based on selected tags or sections. The tool also supports external editor integration and git-based remote storage, and AES encryption.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/NikolaDucak/caps-log?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/481398639/83241f34-7d7d-4024-b922-2e4246aaa2e7",
        "platform": "telegram",
        "quality_score": 0.35
    },
    {
        "project_id": 764979648,
        "content": "ðŸ”¥ <b>godoxy</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReverse proxy with Docker integration for microservices.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Easy to use with effortless configuration\nâ€¢ Auto SSL with Let's Encrypt and DNS-01\nâ€¢ Auto hot-reload on container state/config file changes\nâ€¢ Dynamic route creation from Docker containers\nâ€¢ idlesleeper: stop containers on idle, wake up on traffic\n<br>\nðŸ“– <b>Summary:</b>\nGoDoxy is a lightweight reverse proxy designed for easy integration with Docker. It automates SSL certificate management, dynamically creates routes based on Docker containers, and offers features like idle container management and a comprehensive Web UI. It simplifies the management and routing of microservices.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yusing/godoxy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e24388148d9192228f547efb3ff1100c93731cc57a683fb476d98d17202c64bf/yusing/godoxy",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 825279449,
        "content": "âœ¨ <b>ai-renamer</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIntelligently renaming files (images, videos, documents) based on their content using AI models to improve organization and searchability.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Intelligently renames files based on their content using AI models.\nâ€¢ Supports Ollama, LM Studio, and OpenAI providers.\nâ€¢ Configurable model selection (Llava, Gemma, Llama, gpt-4o, etc.).\n<br>\nðŸ“– <b>Summary:</b>\nThe ai-renamer is a Node.js CLI tool that leverages AI models from Ollama, LM Studio, or OpenAI to intelligently rename files based on their content. It supports various models and offers customization options for case style, character limits, and language, making file management more efficient and intuitive.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ozgrozer/ai-renamer?embed=0\">View Project</a>\nâ€¢ <a href=\"https://airenamer.app?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/83fb4b31f6c233c3764bfbe6c67c1e0838e94264d2f7f1b4e954085155973264/ozgrozer/ai-renamer",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    }
]