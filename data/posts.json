[
    {
        "project_id": 958228271,
        "content": "ðŸš€ <b>WattWise</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring power usage from smart plugs in real-time via the command line.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time power usage monitoring (wattage and current)\nâ€¢ Multiple connection options (TP-Link Kasa, Home Assistant)\nâ€¢ Dynamic color-coded power display\nâ€¢ Continuous monitoring with charts and historical data\nâ€¢ Simple command-line interface\n<br>\nðŸ“– <b>Summary:</b>\nWattWise is a command-line tool for monitoring power usage from smart plugs. It supports direct connection to TP-Link Kasa plugs or integration with Home Assistant, providing real-time power data with color-coded displays and historical charts. The tool offers a simple interface for monitoring wattage and current, making it easy to track energy consumption.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/naveenkul/WattWise?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9387081a5c051b13a1d96b6b0008b8760a1fa87ab6684febd7c4416234f9e3ed/naveenkul/WattWise",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 832458987,
        "content": "ðŸ’¡ <b>ImageIndexer</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTo automatically generate and add metadata tags (keywords and descriptions) to images using a local AI model, enabling local indexing, searching, and organization of images without relying on cloud services or databases.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Image Analysis using a local AI model\nâ€¢ Automatic metadata tagging\nâ€¢ Local processing\nâ€¢ Multi-format support\nâ€¢ User-friendly GUI\n<br>\nðŸ“– <b>Summary:</b>\nThe ImageIndexer repository provides a tool for automatically tagging images with metadata using a local AI model. It analyzes images, generates keywords and captions, and writes this information to the image's metadata. This allows users to index, search, and organize their images locally without relying on external services.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jabberjabberjabber/ImageIndexer?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ab3afc688d90c0036c252fa2f4a965fd3c2b79cd9e9ae996cb5d4da07a9ae2e3/jabberjabberjabber/ImageIndexer",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 98595746,
        "content": "ðŸš€ <b>Sickle</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPayload development and shellcode analysis.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Assembly to machine code conversion\nâ€¢ Bytecode execution\nâ€¢ Opcode formatting\nâ€¢ Bad character identification\nâ€¢ Linear disassembly\n<br>\nðŸ“– <b>Summary:</b>\nSickle is a payload development framework designed to assist in developing and understanding shellcode. It offers features such as assembly to machine code conversion, shellcode execution, opcode formatting, bad character identification, disassembly, and diffing. The framework supports shellcode generation via the Keystone Engine and aims to simplify the process of testing and analyzing shellcode.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/wetw0rk/Sickle?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/36e52f40d3011330323a20213bda9877edd112986d8124ccd6659818d81580e4/wetw0rk/Sickle",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 887984411,
        "content": "ðŸ”¥ <b>DCOMUploadExec</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLateral movement and remote code execution in Windows environments by exploiting the DCOM IMsiServer interface.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Lateral movement via DCOM\nâ€¢ Remote payload upload and execution\nâ€¢ Abuse of IMsiServer interface\nâ€¢ Payload configuration via PayloadConfig.h\nâ€¢ Supports strong-named .NET assemblies\n<br>\nðŸ“– <b>Summary:</b>\nThe DCOMUploadExec repository provides a proof-of-concept tool for lateral movement by abusing the DCOM IMsiServer interface. It allows uploading and executing a .NET assembly payload on a remote machine. The tool requires a strong-named assembly and configuration of payload details in PayloadConfig.h.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/deepinstinct/DCOMUploadExec?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8f4d274efb8cdb70173826daa7e4691ca5ae0d3f2dbf0344a1879528871e2249/deepinstinct/DCOMUploadExec",
        "platform": "telegram",
        "quality_score": 0.3
    },
    {
        "project_id": 43695474,
        "content": "ðŸš€ <b>quasar</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding high-performance VueJS user interfaces for multiple platforms (web, mobile, desktop) from a single codebase.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Build responsive Single Page Apps (SPAs)\nâ€¢ Server-Side Rendered (SSR) Apps\nâ€¢ Progressive Web Apps (PWAs)\nâ€¢ Browser extensions\nâ€¢ Hybrid Mobile Apps\n<br>\nðŸ“– <b>Summary:</b>\nQuasar Framework enables developers to rapidly build high-performance VueJS user interfaces that can be deployed across various platforms, including web, mobile, and desktop. It supports SPAs, SSR apps, PWAs, browser extensions, and hybrid mobile/Electron applications, all from a single codebase. This allows for efficient development and maintenance of cross-platform applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/quasarframework/quasar?embed=0\">View Project</a>\nâ€¢ <a href=\"https://quasar.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0dd014f69271374c25f419ad9da7a4c74a24f5e97d856d04dd9d6084c2b6f2d7/quasarframework/quasar",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 597179753,
        "content": "ðŸ”¥ <b>MinerSearch</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSearching for and removing hidden cryptocurrency miners from a Windows system.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Detects and removes hidden miners\nâ€¢ Scans for suspicious files, directories, and processes\nâ€¢ Blocks malicious service files and scheduled tasks\nâ€¢ Removes miners with valid signatures\nâ€¢ Improved registry debugger handling\n<br>\nðŸ“– <b>Summary:</b>\nMinerSearch is a C# program designed to detect and eliminate hidden cryptocurrency miners on Windows systems. It functions as an auxiliary tool, scanning for suspicious files, processes, and registry entries associated with mining malware. The program offers various command-line options for customized scans and includes features for blocking malicious services and scheduled tasks, as well as removing miners with valid signatures.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/BlendLog/MinerSearch?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/289261f1fda03081d54ecf0f51ffd007c968a8c602af568832999c3ff5eebd83/BlendLog/MinerSearch",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 112235591,
        "content": "ðŸ’¡ <b>hacker101</b> | SCSS\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLearning web and mobile security concepts and techniques.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Free web security class\nâ€¢ Teaches web and mobile security\nâ€¢ Provides hands-on hacking experience\n<br>\nðŸ“– <b>Summary:</b>\nHacker101 is a free online web security class designed for programmers and security professionals. It provides a learning environment to understand and practice web and mobile security concepts, including common vulnerabilities like XSS, SQL injection, and CSRF. The repository contains the source code for the Hacker101 website.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Hacker0x01/hacker101?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.hacker101.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cf81efaf1071f8353c5a3fb140d226df2ed2c397615de90dc7402201cd3f8a87/Hacker0x01/hacker101",
        "platform": "telegram",
        "quality_score": 0.6
    }
]