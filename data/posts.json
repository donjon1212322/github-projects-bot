[
    {
        "project_id": 941322864,
        "content": "ðŸ’¡ <b>cyberimage</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered image generation platform with a web UI and API access\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Stable Diffusion AI model integration\nâ€¢ Web UI with cyberpunk theme\nâ€¢ Fast and precise image generation\nâ€¢ Gallery with multiple view options, search, filtering, and batch operations\nâ€¢ Queue system for managing image generation jobs\n<br>\nðŸ“– <b>Summary:</b>\nCyberImage is an AI image generation platform utilizing Stable Diffusion.  It offers a user-friendly web interface, supports batch processing and negative prompts, and integrates with AI assistants via the Model Context Protocol (MCP) using a JSON-RPC API.  The platform prioritizes speed, precision, and user privacy.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/RamboRogers/cyberimage?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/04dac7fdfcdf23a84d1613ee634ed9e7faaceb1ec155bf818916cc2b4329d036/RamboRogers/cyberimage",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 941298693,
        "content": "ðŸ”¥ <b>BookmarkCanvas</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOrganize and visualize bookmarks within IntelliJ IDEs for improved navigation and understanding of relationships between bookmarked code locations\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Add bookmarks to a visual canvas from various IntelliJ IDE locations (tool window, modal dialog, canvas itself)\nâ€¢ Navigate to bookmarks by double-clicking on the canvas\nâ€¢ Remove, move, and zoom/pan the canvas\nâ€¢ Save/load canvas layouts\nâ€¢ Create and remove connections between bookmarks\n<br>\nðŸ“– <b>Summary:</b>\nThis IntelliJ plugin provides a visual canvas for managing bookmarks.  Users can add, arrange, connect, and navigate bookmarks, saving and loading layouts.  It supports configuration of context display and layout styles for enhanced code organization and understanding.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mwalkerr/BookmarkCanvas?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ade8d768d7fc078ecbd3eb85ecf5ed5945feae6c37a648b029a4308c66ccd575/mwalkerr/BookmarkCanvas",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 863050120,
        "content": "âœ¨ <b>fastrtc</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding real-time audio and video streaming applications in Python using WebRTC or WebSockets\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatic Voice Detection and Turn Taking\nâ€¢ Automatic UI with Gradio\nâ€¢ Automatic WebRTC Support\nâ€¢ Websocket Support\nâ€¢ Automatic Telephone Support\n<br>\nðŸ“– <b>Summary:</b>\nFastRTC is a Python library enabling real-time audio/video streaming via WebRTC or WebSockets.  It features automatic UI generation, voice detection, and integration with FastAPI for custom backend development.  Use cases include creating voice-enabled applications and integrating with various APIs like those from Google and OpenAI.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/freddyaboulton/fastrtc?embed=0\">View Project</a>\nâ€¢ <a href=\"https://fastrtc.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2850521fbb8db76187514fb38abc6adb93e62423eb330adeb98de22c9b8d8c47/freddyaboulton/fastrtc",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 894891699,
        "content": "ðŸš€ <b>PdfDing</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hostable PDF manager, viewer, and editor\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Seamless browser based PDF viewing on multiple devices\nâ€¢ Multi-level tagging, starring and archiving functionalities\nâ€¢ Add annotations, highlighting and drawings to PDFs\nâ€¢ Clean, intuitive UI with dark mode, inverted color mode, custom theme colors and multiple layouts\nâ€¢ SSO support via OIDC\n<br>\nðŸ“– <b>Summary:</b>\nPdfDing is a self-hosted application for managing, viewing, and editing PDFs.  It offers a user-friendly interface with features like annotation tools, access controls, and various customization options.  Users can install it using Docker, Docker Compose, or Helm for Kubernetes deployments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mrmn2/PdfDing?embed=0\">View Project</a>\nâ€¢ <a href=\"https://demo.pdfding.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/35f1dc5bbea49d9ecbd739fa5cb75e26fa39708fc8fe9c00d097463edba9476d/mrmn2/PdfDing",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 920354355,
        "content": "ðŸš€ <b>codecapy</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated UI testing for pull requests\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatically detects new pull requests (PRs)\nâ€¢ Generates natural language end-to-end UI tests based on code changes\nâ€¢ Executes tests in isolated Scrapybara instances\nâ€¢ Posts test results to PR comments\nâ€¢ Supports custom test environment configuration via `capy.yaml` file\n<br>\nðŸ“– <b>Summary:</b>\nCodeCapy is a GitHub app that automates UI testing for pull requests. It generates and executes UI tests based on code changes, providing feedback directly in PR comments.  It supports flexible test environment configuration through a `capy.yaml` file and integrates with GitHub Actions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Scrapybara/codecapy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://codecapy.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9e6023854a3183b074732ca41fd1f23da7b51c08964eace2dcdf5d38ab90c09c/Scrapybara/codecapy",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 365250183,
        "content": "ðŸš€ <b>nicegui</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\ncreating micro web apps, dashboards, and tools for robotics, smart home, and machine learning\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ browser-based graphical user interface\nâ€¢ implicit reload on code change\nâ€¢ webserver or native mode operation\nâ€¢ standard GUI elements (label, button, checkbox, etc.)\nâ€¢ grouping with rows, columns, cards, dialogs\n<br>\nðŸ“– <b>Summary:</b>\nNiceGUI is a Python-based UI framework for building web-based GUIs.  It offers a wide range of UI elements and features, enabling rapid development of interactive applications for various use cases, including dashboards and tools for robotics, smart homes, and machine learning.  The framework supports features such as data binding, custom routes, and a testing framework.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/zauberzeug/nicegui?embed=0\">View Project</a>\nâ€¢ <a href=\"https://nicegui.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/30142de771c889135e1a0c10b330b10ab540db2521ed1cb7a63d35faaaff6bc3/zauberzeug/nicegui",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 325671936,
        "content": "ðŸš€ <b>reconftw</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated reconnaissance for security assessments\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Subdomain enumeration using passive, bruteforce, permutation, certificate transparency, source code scraping, and analytics techniques\nâ€¢ Vulnerability checks (XSS, Open Redirects, SSRF, CRLF, LFI, SQLi, SSL tests, SSTI, DNS zone transfers)\nâ€¢ OSINT techniques\nâ€¢ Directory fuzzing\nâ€¢ Dorking\n<br>\nðŸ“– <b>Summary:</b>\nreconFTW automates reconnaissance, performing subdomain enumeration with various techniques and vulnerability checks.  It also includes OSINT, directory fuzzing, and more, aiming to provide comprehensive target information.  Integration with Axiom and Faraday is supported.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/six2dez/reconftw?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/325671936/e190df94-4fc5-4335-9b73-23e04e060768",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 16005513,
        "content": "âœ¨ <b>wireless-ids</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nWireless Intrusion Detection System (IDS)\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Detect mass deauthentication packets indicating WPA attacks\nâ€¢ Detect continuous data sent to access point using broadcast MAC address (WEP attacks)\n<br>\nðŸ“– <b>Summary:</b>\nThis Python-based Wireless IDS sniffs air traffic for suspicious activities like WEP/WPA/WPS attacks.  It detects various attack types, including deauthentication floods, rogue access points, and specific attack packets from tools like Aircrack-NG and MDK3.  The system offers logging and customizable settings for enhanced monitoring.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/SYWorks/wireless-ids?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.facebook.com/media/set/?set=a.767725556588881.1073741830.281645261863582?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d499eb92ce7a63be01fd38d947725fd3860a277ab29a6e4e11543b4e2ee8c763/SYWorks/wireless-ids",
        "platform": "telegram",
        "quality_score": 0.4
    },
    {
        "project_id": 877675290,
        "content": "âœ¨ <b>awesome-free-apps</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCurated list of free applications categorized by functionality and platform support\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Windows support\nâ€¢ macOS support\nâ€¢ Linux support\nâ€¢ Open-source options\nâ€¢ Recommended applications\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a categorized list of free applications for Windows, macOS, Linux, Android, and iOS.  It includes various software types, from audio and video tools to developer tools and system utilities, with indicators for open-source options and recommendations.  The list is maintained and updated regularly.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Axorax/awesome-free-apps?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/877675290/46ff54a2-f146-4cda-8a08-05baaa081f32",
        "platform": "telegram",
        "quality_score": 0.85
    }
]