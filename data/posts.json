[
    {
        "project_id": 409737972,
        "content": "âœ¨ <b>Gitnuro</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a multiplatform Git client for managing Git repositories without relying on web technologies.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ View diffs for text based files\nâ€¢ View history log and branches\nâ€¢ Add (stage) & reset (unstage) files\nâ€¢ Stage & unstage of hunks\nâ€¢ Checkout files\n<br>\nðŸ“– <b>Summary:</b>\nGitnuro is a free and open-source, multiplatform Git client built with Jetbrains Compose and JGit. It aims to provide a constraint-free Git client, not relying on web technologies, with features for both beginners and advanced users, including diff viewing, history browsing, staging, committing, branching, merging, and more.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/JetpackDuba/Gitnuro?embed=0\">View Project</a>\nâ€¢ <a href=\"https://gitnuro.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/df63aa014927e2c2c2db6fbb2ed79bd0182b5b530bc4049203dba1edc7b011b1/JetpackDuba/Gitnuro",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 601185172,
        "content": "âœ¨ <b>telegram_media_downloader</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDownloading media files from Telegram chats, channels, and groups, including those with download restrictions, using either a web interface or a Telegram bot.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Downloads media files from Telegram\nâ€¢ Supports web UI for browsing and downloading\nâ€¢ Supports Telegram bot interface for issuing commands\nâ€¢ Works with private groups with download restrictions\nâ€¢ Cross-platform support\n<br>\nðŸ“– <b>Summary:</b>\nThe Telegram Media Downloader is a tool for downloading media files (up to 2GiB per file) from Telegram conversations, chats, and channels, even from private groups with download restrictions. It supports both a web UI for browsing and downloading, and a Telegram bot interface for issuing download commands.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tangyoha/telegram_media_downloader?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/76b22545d29e55ef6b02482e81072f2a4f5f572110f8b312c4d9c3cd442e96c6/tangyoha/telegram_media_downloader",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 979886407,
        "content": "âœ¨ <b>mcp-context-forge</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCentral management and access point for tools, resources, and prompts used by MCP-compatible LLM applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ REST to MCP conversion\nâ€¢ Federation of MCP and REST services\nâ€¢ Virtual server composition\nâ€¢ Security (authentication, rate-limiting)\nâ€¢ Observability\n<br>\nðŸ“– <b>Summary:</b>\nThe MCP Gateway is a gateway, proxy, and registry for the Model Context Protocol (MCP). It unifies REST, MCP, and A2A services, providing features like federation, security, observability, and multi-transport protocol support for AI clients. It can be deployed via PyPI or Docker and scales to multi-cluster Kubernetes environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/IBM/mcp-context-forge?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ibm.github.io/mcp-context-forge/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5a8531a136eed8b6e884744c650a472775fe726ccbdcf21f9aa42b6eb6a108cc/IBM/mcp-context-forge",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 920603619,
        "content": "ðŸ’¡ <b>verifiers</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and utilizing RL environments for training and evaluating LLM agents.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Modular components for creating RL environments\nâ€¢ LLM agent training\nâ€¢ Async GRPO implementation\nâ€¢ Integration with prime-rl for large-scale FSDP training\nâ€¢ OpenAI-compatible inference client support\n<br>\nðŸ“– <b>Summary:</b>\nThe repository provides a library of modular components for creating Reinforcement Learning (RL) environments and training Large Language Model (LLM) agents. These environments can be used for LLM evaluations, synthetic data pipelines, or agent harnesses, and support various RL frameworks and training paradigms.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrimeIntellect-ai/verifiers?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a1c147efcfd6d3b5955a697fba198d5b0e27086459cd6f634285b1644c9dd34a/PrimeIntellect-ai/verifiers",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 912164685,
        "content": "ðŸŒŸ <b>clearcam</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered security camera system using RTSP cameras or iPhones with object detection and remote monitoring.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Object detection\nâ€¢ Object tracking\nâ€¢ Mobile notifications\nâ€¢ RTSP camera support\nâ€¢ iPhone support\n<br>\nðŸ“– <b>Summary:</b>\nClearcam turns RTSP-enabled cameras or old iPhones into AI security cameras with object detection, tracking, and mobile notifications. It allows users to self-host a network video recorder (NVR) with inference capabilities, view live camera feeds remotely, receive notifications on detected events, and view event clips with end-to-end encryption.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/roryclear/clearcam?embed=0\">View Project</a>\nâ€¢ <a href=\"https://apps.apple.com/app/clearcam/id6743237694?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/dd67a804b88235f0822cf7df0cddcdd472d92f878388b7b33bcb675b9bd4c738/roryclear/clearcam",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1025300166,
        "content": "ðŸš€ <b>how-to-build-a-coding-agent</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding a local AI-powered coding assistant.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Connect to the Anthropic Claude API\nâ€¢ Build a simple AI chatbot\nâ€¢ Add tools for reading files, editing code, and running commands\nâ€¢ Handle tool requests and errors\nâ€¢ Build an agent that gets smarter with each step\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a step-by-step workshop for building an AI-powered coding assistant using Go. The workshop guides users through creating a chatbot and adding tools for file reading, command execution, code searching, and more, ultimately resulting in a local developer assistant.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ghuntley/how-to-build-a-coding-agent?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ghuntley.com/agent/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1b7953504c166c92dbbcdb6e0b92d50914965fc94edf97fff2bddc3fecd61d5d/ghuntley/how-to-build-a-coding-agent",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    },
    {
        "project_id": 1043194037,
        "content": "ðŸ”¥ <b>lunar-test-v1</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDeveloping 3D games and interactive experiences using Luau scripting language.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Basic scene rendering (lighting, shadows, ambient, skybox)\nâ€¢ Standard data types (CFrame, Vector3, Color3, Random)\nâ€¢ Instance System (Parent, Destroy, Clone)\nâ€¢ Part support (Color, Transparency, Size, Position, CFrame)\nâ€¢ Client-sided services (Workspace, RunService, Lighting)\n<br>\nðŸ“– <b>Summary:</b>\nLunarEngine is an open-source 3D game engine powered by Luau, designed to be API-compatible with popular sandbox engines. It allows developers to build immersive experiences with a familiar interface while maintaining complete ownership of their platform, offering a subset of its planned API in the demo stage.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/lunarengine/lunar-test-v1?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/71a175eb568887786d273078e04f3e3c2a23eb6e6201481029eb2d3f84973659/lunarengine/lunar-test-v1",
        "platform": "telegram",
        "quality_score": 0.6
    }
]