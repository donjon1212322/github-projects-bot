[
    {
        "project_id": 952131779,
        "content": "ðŸ’¡ <b>tgv</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBrowsing and exploring genomes and alignment files in the terminal.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal-based genome viewer\nâ€¢ Supports multiple genome formats (BAM)\nâ€¢ Vim-like navigation\nâ€¢ Fast and lightweight\nâ€¢ Can browse remote BAM files\n<br>\nðŸ“– <b>Summary:</b>\nTGV is a terminal-based genome viewer written in Rust that allows users to quickly browse and explore genomes and alignment files. It supports multiple formats, including BAM, and offers Vim-like navigation for efficient exploration. It is designed for use in remote sessions where graphical genome viewers are not practical.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/zeqianli/tgv?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/952131779/c2962e1a-5325-4d9e-b5ac-ce0cb4f1c5df",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 683605055,
        "content": "ðŸš€ <b>AnduinOS</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFacilitating the transition of Windows developers to Linux by providing a familiar environment and workflow.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Custom Ubuntu-based Linux distribution\nâ€¢ Facilitates developers transitioning from Windows to Linux\nâ€¢ Maintains familiar operational habits and workflows\n<br>\nðŸ“– <b>Summary:</b>\nAnduinOS is a custom Ubuntu-based Linux distribution designed to ease the transition for developers moving from Windows to Linux. It achieves this by maintaining familiar operational habits and workflows. The distribution aims to provide a comfortable and efficient development environment for those accustomed to Windows.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Anduin2017/AnduinOS?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.anduinos.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4f8ea47b8feda96e455ef24876ef4d4eb14e47829e0f99fdbc7eddee8dd89d46/Anduin2017/AnduinOS",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    },
    {
        "project_id": 720209383,
        "content": "ðŸ”¥ <b>Cap</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and sharing screen recordings as an open-source alternative to Loom.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Screen recording\nâ€¢ Video editing\nâ€¢ Video sharing\nâ€¢ Self-hosting (in progress)\nâ€¢ Cross-platform (macOS & Windows)\n<br>\nðŸ“– <b>Summary:</b>\nCap is an open-source Loom alternative that allows users to record, edit, and share screen recordings. It offers desktop applications for macOS and Windows. Self-hosting options are currently under development, providing users with more control over their data and deployment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/CapSoftware/Cap?embed=0\">View Project</a>\nâ€¢ <a href=\"https://cap.so?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5c8a080d9e5cfa8debb33a8da2101e87faea19ed52807f6dd628325ae3edf3fe/CapSoftware/Cap",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 151651158,
        "content": "ðŸš€ <b>sn0int</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGathering intelligence about a given target or about yourself for IT security professionals, bug bounty hunters, law enforcement agencies, and security awareness trainings.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Harvest subdomains from certificate transparency logs and passive DNS\nâ€¢ Mass resolve collected subdomains and scan for HTTP/HTTPS services\n<br>\nðŸ“– <b>Summary:</b>\nsn0int is a semi-automatic OSINT framework and package manager written in Rust. It enumerates attack surface by semi-automatically processing public information and mapping the results in a unified format for followup investigations. It is extensible via modules that can be shared through a registry, allowing users to easily add new capabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kpcyrd/sn0int?embed=0\">View Project</a>\nâ€¢ <a href=\"https://sn0int.readthedocs.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/151651158/b2306680-663f-11e9-9094-711bee5cf2f3",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 221571611,
        "content": "âœ¨ <b>python-kasa</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nControlling TP-Link smart home devices programmatically using Python.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Control of TP-Link smart home devices (plugs, switches, bulbs)\nâ€¢ Device discovery\nâ€¢ Command-line interface\nâ€¢ Asynchronous operation\n<br>\nðŸ“– <b>Summary:</b>\nThe python-kasa library provides a Python API for interacting with TP-Link smart home devices. It allows users to discover, control, and monitor devices such as plugs, switches, and bulbs through a command-line interface or programmatically within Python scripts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/python-kasa/python-kasa?embed=0\">View Project</a>\nâ€¢ <a href=\"https://python-kasa.readthedocs.io/en/stable/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/985b0313ea44c024e63d03a927f838939d6af8aa4db24385b26c7285ad00864e/python-kasa/python-kasa",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    },
    {
        "project_id": 1017451,
        "content": "ðŸš€ <b>watchdog</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring file system events and triggering actions based on those events.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ File system event monitoring\nâ€¢ Python API for event handling\nâ€¢ Shell utilities (watchmedo)\nâ€¢ Tricks for custom event handling via YAML configuration\n<br>\nðŸ“– <b>Summary:</b>\nThe Watchdog library provides a Python API and shell utilities for monitoring file system events. It allows developers to observe changes in directories and files, triggering custom actions or scripts in response. The `watchmedo` utility offers command-line tools for logging events and executing shell commands, while the 'tricks' feature enables advanced event handling through YAML configuration.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gorakhargosh/watchdog?embed=0\">View Project</a>\nâ€¢ <a href=\"http://packages.python.org/watchdog/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7670f0402a89c244ff0086814eb5bdd1e98a7f9e71d2bdad57dcfd1042c0f10d/gorakhargosh/watchdog",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 494107715,
        "content": "ðŸ’¡ <b>datafusion-ballista</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDistributing DataFusion applications to enable parallel query execution across a cluster of machines.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed query execution engine\nâ€¢ Enhances Apache DataFusion\nâ€¢ Parallelized workload execution across multiple nodes\nâ€¢ Supports SQL queries\nâ€¢ Uses a scheduler and executor architecture\n<br>\nðŸ“– <b>Summary:</b>\nBallista is a distributed query execution engine built on top of Apache DataFusion. It allows DataFusion applications to be scaled out to a cluster of machines, enabling parallel processing of large datasets. The system uses a scheduler and executor architecture and can be deployed using Docker Compose or Kubernetes.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apache/datafusion-ballista?embed=0\">View Project</a>\nâ€¢ <a href=\"https://datafusion.apache.org/ballista?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b0284a943d2730b6c97adfd851d40adc2f56bc41c79099131f201bf348091f25/apache/datafusion-ballista",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 5891360,
        "content": "âœ¨ <b>radon</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAnalyzing Python code to compute various code metrics for quality assurance and complexity assessment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ McCabe's complexity (cyclomatic complexity)\nâ€¢ Raw metrics (SLOC, comment lines, blank lines, etc.)\nâ€¢ Halstead metrics\nâ€¢ Maintainability Index\n<br>\nðŸ“– <b>Summary:</b>\nRadon is a Python tool designed for static code analysis. It computes various metrics, including McCabe's complexity, raw metrics like SLOC, Halstead metrics, and the Maintainability Index, providing insights into code quality and complexity. Radon can be used from the command line or programmatically and supports Python versions from 2.7 to 3.12.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/rubik/radon?embed=0\">View Project</a>\nâ€¢ <a href=\"http://radon.readthedocs.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/eeb308744edc5a7788e00e9a1a12d501aa5bcf0c7bd3582a49419711d0261f6d/rubik/radon",
        "platform": "telegram",
        "quality_score": 0.45
    }
]