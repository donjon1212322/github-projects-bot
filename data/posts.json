[
    {
        "project_id": 825187044,
        "content": "ðŸŒŸ <b>ab-download-manager</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEfficiently managing and accelerating file downloads on desktop computers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Faster Download Speed\nâ€¢ Queues and Schedulers\nâ€¢ Browser Extensions\nâ€¢ Multiplatform Support (Windows/Linux/Mac)\nâ€¢ Multiple Themes (Dark/Light)\n<br>\nðŸ“– <b>Summary:</b>\nAB Download Manager is a desktop application built with Kotlin that aims to accelerate and efficiently manage file downloads. It offers features like faster download speeds, download queue management, browser integration through extensions, and cross-platform compatibility (Windows, Linux, Mac).\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/amir1376/ab-download-manager?embed=0\">View Project</a>\nâ€¢ <a href=\"https://abdownloadmanager.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/825187044/e982f7e5-20e1-4842-a2f3-6281ef8b9f71",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 33037215,
        "content": "ðŸŒŸ <b>docker-mailserver</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSetting up and managing a complete mail server infrastructure using Docker containers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Containerized mail server (SMTP, IMAP, LDAP)\nâ€¢ Postfix with SMTP/LDAP authentication\nâ€¢ Dovecot with SASL, IMAP, POP3, LDAP, Sieve, and quotas\n<br>\nðŸ“– <b>Summary:</b>\nThe docker-mailserver repository provides a production-ready, full-stack mail server solution within a Docker container. It includes essential components like Postfix, Dovecot, and anti-spam/anti-virus tools, configured primarily through configuration files rather than a SQL database, aiming for simplicity and ease of deployment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/docker-mailserver/docker-mailserver?embed=0\">View Project</a>\nâ€¢ <a href=\"https://docker-mailserver.github.io/docker-mailserver/latest/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/33037215/533fdc00-7d03-11eb-808d-bfc8f3d87004",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 1056028586,
        "content": "ðŸ’¡ <b>small_projects</b> | Assembly\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding examples of small Assembly projects.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Source code for small projects\nâ€¢ Schematics for small projects\n<br>\nðŸ“– <b>Summary:</b>\nThis repository hosts source code and schematics for small projects developed over the years, as found on mikekohn.net. The projects are written in Assembly language.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mikeakohn/small_projects?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/623e910b792e31b1242fbf022d60c8254dbb665016928f89d0db6550d7d0c107/mikeakohn/small_projects",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1043516507,
        "content": "ðŸš€ <b>port-kill</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIdentifying and releasing blocked ports to facilitate software development and deployment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Find and free ports\nâ€¢ Cross-platform support (macOS, Linux, Windows)\nâ€¢ CLI interface\nâ€¢ Status bar integration\nâ€¢ Optional dashboard\n<br>\nðŸ“– <b>Summary:</b>\nPort Kill is a Rust-based tool designed to identify and free up ports that are blocking development work. It supports macOS, Linux, and Windows, offering both local and remote (SSH) functionality through a CLI, status bar integration, and an optional dashboard.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kagehq/port-kill?embed=0\">View Project</a>\nâ€¢ <a href=\"https://portkill.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1104148d3c98efd8d1c70359eef2e8ce7a2fbc8c06e429855bf76ee9ca56096f/kagehq/port-kill",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 37319088,
        "content": "ðŸ’¡ <b>finicky</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCustomizing which browser opens for specific URLs based on user-defined rules.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Route URLs to preferred browsers with matching rules\nâ€¢ Automatically edit URLs before opening\nâ€¢ Write rules in JavaScript or TypeScript\nâ€¢ Create complex routing logic\nâ€¢ Handle multiple browsers and apps\n<br>\nðŸ“– <b>Summary:</b>\nFinicky is a macOS application that acts as a default browser, allowing users to define rules to route URLs to specific browsers based on matching criteria. It offers features like URL rewriting, JavaScript/TypeScript configuration, and handling multiple browsers, enhancing workflow organization by separating browsing contexts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/johnste/finicky?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5398557a0328a31b8f36b36a3d25f6e302687e2443a520590a65d18f5db4ad19/johnste/finicky",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 895926919,
        "content": "âœ¨ <b>poml</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating structured, maintainable, and versatile prompts for Large Language Models (LLMs).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Structured Prompting Markup\nâ€¢ Comprehensive Data Handling\nâ€¢ Decoupled Presentation Styling\nâ€¢ Integrated Templating Engine\nâ€¢ Rich Development Toolkit (IDE Extension, SDKs)\n<br>\nðŸ“– <b>Summary:</b>\nPOML (Prompt Orchestration Markup Language) is a markup language designed for structuring and managing prompts for Large Language Models (LLMs). It provides features for organizing prompt components, integrating data, and managing presentation variations, addressing challenges like lack of structure and format sensitivity in prompt engineering.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/microsoft/poml?embed=0\">View Project</a>\nâ€¢ <a href=\"https://microsoft.github.io/poml/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/39902a7c16ea5f7c43476e1f02e23e664154411f1724d76e7415e698a43537b3/microsoft/poml",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1020924685,
        "content": "ðŸŒŸ <b>marchat</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted, lightweight terminal chat for developers and small teams.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal UI (Bubble Tea)\nâ€¢ Real-time Chat (WebSockets, SQLite)\nâ€¢ Plugin System\nâ€¢ E2E Encryption (X25519/ChaCha20-Poly1305)\nâ€¢ File Sharing\n<br>\nðŸ“– <b>Summary:</b>\nmarchat is a lightweight, self-hosted terminal chat application built in Go, designed for developers and small teams. It features real-time WebSocket messaging, optional end-to-end encryption, a plugin system, file sharing, and an admin panel, all accessible through a terminal UI.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Cod-e-Codes/marchat?embed=0\">View Project</a>\nâ€¢ <a href=\"https://github.com/Cod-e-Codes/marchat?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/1020924685/9346b44d-528a-4d30-8a52-86fe55132fa9",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 1030990993,
        "content": "âœ¨ <b>hexora</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetecting malicious and harmful patterns in Python code.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Audit project dependencies\nâ€¢ Detect malicious scripts\nâ€¢ Analyze IoC files\nâ€¢ Audit new PyPi packages\nâ€¢ Static analysis of Python code\n<br>\nðŸ“– <b>Summary:</b>\nHexora is a static analysis tool written in Rust designed to detect malicious patterns in Python code. It can be used to audit project dependencies, detect malicious scripts, analyze IoC files, and audit new PyPi packages.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/rushter/hexora?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/fb1257a9fe17d86e20c4f1cbdf25c62432b9b1b4b3dedff3a049645d0736bfaf/rushter/hexora",
        "platform": "telegram",
        "quality_score": 0.65
    }
]