[
    {
        "project_id": 944414751,
        "content": "ðŸŒŸ <b>blender-mcp</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-assisted 3D modeling and scene creation in Blender using Claude AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Two-way communication between Claude AI and Blender\nâ€¢ Object manipulation (create, modify, delete)\nâ€¢ Material control (apply and modify materials and colors)\nâ€¢ Scene inspection (get detailed information about the current Blender scene)\nâ€¢ Code execution (run arbitrary Python code in Blender from Claude)\n<br>\nðŸ“– <b>Summary:</b>\nBlenderMCP integrates Blender with Claude AI using the Model Context Protocol (MCP), enabling AI-assisted 3D modeling, scene creation, and manipulation. It allows Claude to directly interact with and control Blender through a socket-based server, facilitating object manipulation, material control, scene inspection, and code execution within Blender.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ahujasid/blender-mcp?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/627fc8367f1ea6e617445c7cce8c02d78da26bc4e5b5167aa642f05d74f1247f/ahujasid/blender-mcp",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1009325669,
        "content": "âœ¨ <b>Raijin</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDisplaying current weather conditions and forecasts in a terminal window.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal User Interface (TUI)\nâ€¢ Free weather data access (no API key required)\nâ€¢ Data from NWS and OpenMeteo\nâ€¢ Moon phase data from ViewBits\nâ€¢ Configuration via environment file\n<br>\nðŸ“– <b>Summary:</b>\nRaijin is a free and simple terminal-based weather application (TUI) written in Rust. It retrieves weather data from NWS and OpenMeteo, and moon phase data from ViewBits, without requiring API keys, accounts, or subscriptions. Currently, it supports macOS and Linux operating systems.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/MasonStooksbury/Raijin?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/43fc6ebd37f81f5393163e58b7d1db62c1edaec7fa052205530e03a65c7ecec2/MasonStooksbury/Raijin",
        "platform": "telegram",
        "quality_score": 0.4
    },
    {
        "project_id": 452327893,
        "content": "âœ¨ <b>OpenMower</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUpgrading existing robotic lawn mowers with advanced autonomous navigation and control systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Autonomous Lawn Mowing\nâ€¢ Good Safety (emergency stop)\nâ€¢ No Perimeter Wire Needed\nâ€¢ Low Cost\nâ€¢ Open Source\n<br>\nðŸ“– <b>Summary:</b>\nThe OpenMower project aims to replace the limited software of cheap robotic lawn mowers with a modern, smart, RTK GPS-based system. It leverages existing hardware from off-the-shelf mowers, focusing on software improvements for autonomous mowing, safety, and advanced features like no perimeter wire and obstacle avoidance.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ClemensElflein/OpenMower?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/04d9813ce6587017de5f88045e8e4fa85dee1fc50d6d14f4c20baf11b3b65149/ClemensElflein/OpenMower",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 19813003,
        "content": "ðŸ’¡ <b>fdupes</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIdentifying and removing duplicate files to free up disk space.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Recursive directory searching\nâ€¢ Symlink and hardlink handling\nâ€¢ File size filtering\nâ€¢ Duplicate file deletion with user confirmation\nâ€¢ Caching for faster comparisons\n<br>\nðŸ“– <b>Summary:</b>\nFDUPES is a command-line tool written in C for identifying duplicate files within specified directories. It offers various options for recursive searching, handling symlinks and hardlinks, filtering by file size, and deleting duplicates while providing options for user confirmation and sorting.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/adrianlopezroche/fdupes?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ce46885bf790710fd703e2fe7ebaa44af4145405e02146c01e9f1a3ed0a251e3/adrianlopezroche/fdupes",
        "platform": "telegram",
        "quality_score": 0.6000000000000001
    }
]