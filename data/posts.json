[
    {
        "project_id": 41215835,
        "content": "ðŸŒŸ <b>HandBrake</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTranscoding video files into formats compatible with various devices.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Video transcoding\nâ€¢ Multi-platform support (Linux, Mac, Windows)\nâ€¢ Open-source (GPLv2 license)\nâ€¢ Support for common video files and formats\nâ€¢ Leverages FFmpeg, x264, x265, SVT-AV1\n<br>\nðŸ“– <b>Summary:</b>\nHandBrake is an open-source, multi-platform video transcoder that converts video files from various sources into formats suitable for playback on devices like mobile phones, tablets, TVs, and computers. It supports common video formats and leverages tools like FFmpeg, x264, and x265 to create MP4, MKV, or WebM video files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/HandBrake/HandBrake?embed=0\">View Project</a>\nâ€¢ <a href=\"https://handbrake.fr?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0bda557c0be331fcdacec99a3fd43f29735885cdcd6b2ae67febecab0540f8a7/HandBrake/HandBrake",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1030897854,
        "content": "ðŸš€ <b>servy</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRunning and managing applications as Windows services, especially those not designed to run as services natively.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Runs any application as a Windows service\nâ€¢ Provides a GUI and CLI for service management\nâ€¢ Allows setting a custom working directory for services\n<br>\nðŸ“– <b>Summary:</b>\nServy is a C# application that enables users to run any application as a Windows service, offering a fully managed alternative to NSSM. It provides both a GUI and CLI for creating, configuring, and managing services, with features like custom working directories, pre-launch scripts, automatic restarts, health checks, and logging. Servy is ideal for keeping non-service applications running reliably in the background.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aelassas/servy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://servy-win.github.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/53c794726d68a5917bcf5ba2f8d8d248629794a96849fb6d38ee77aa8960bcf7/aelassas/servy",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 971726597,
        "content": "ðŸ”¥ <b>abogen</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating audiobooks and voiceovers with synchronized captions from various text-based formats.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Text-to-speech conversion from EPUB, PDF, and text files\nâ€¢ Synchronized captions/subtitles generation\nâ€¢ Utilizes Kokoro-82M for natural-sounding speech synthesis\nâ€¢ Cross-platform compatibility (Windows, Linux, macOS)\n<br>\nðŸ“– <b>Summary:</b>\nAbogen is a text-to-speech tool that converts EPUB, PDF, and text files into high-quality audiobooks with synchronized subtitles. It leverages the Kokoro-82M model for natural-sounding speech. The tool supports multiple platforms, including Windows, Linux, and macOS, offering flexible installation options.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/denizsafak/abogen?embed=0\">View Project</a>\nâ€¢ <a href=\"https://pypi.org/project/abogen/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/90d7fd6a04a484541aade2a381df409dfddeaa1000f14c833ea0cd0c6df2af6f/denizsafak/abogen",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 347000736,
        "content": "ðŸŒŸ <b>Gokapi</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted file sharing with automatic expiration and encryption for teams or individuals prioritizing privacy and control.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Expiring file shares\nâ€¢ User management with roles\nâ€¢ File deduplication\nâ€¢ Cloud storage support (AWS S3, Backblaze B2)\nâ€¢ Built-in encryption\n<br>\nðŸ“– <b>Summary:</b>\nGokapi is a lightweight, self-hosted file sharing server designed as a Firefox Send alternative. It offers features like expiring file shares, user management, file deduplication, cloud storage integration (S3, Backblaze B2), built-in encryption, and a REST API, making it ideal for users seeking privacy and control over their file sharing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Forceu/Gokapi?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/255a1e40e2825eac4115af125b52432f3ae88f3328099179a378a1559372cffb/Forceu/Gokapi",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 727111358,
        "content": "âœ¨ <b>email-linter</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIdentifying potentially compromised masked email addresses by analyzing sender addresses.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Identifies spam and phishing emails received at masked email addresses.\nâ€¢ Works with Fastmail, Topicbox, and any email service with a JMAP API.\nâ€¢ Lists masked addresses and their senders to spot suspicious activity.\n<br>\nðŸ“– <b>Summary:</b>\nEmail Linter is a command-line tool designed to help users easily identify spam and phishing emails received at masked email addresses. It works by connecting to email services via the JMAP API, listing masked addresses, and displaying the senders they have received from, allowing users to quickly spot suspicious activity. The tool supports services like Fastmail and Topicbox.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/wheelercj/email-linter?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8c164914f5644c69be5ee717b94b0c3ebf63da82e12f5e20ac3f7fca56f5ea32/wheelercj/email-linter",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 942851394,
        "content": "âœ¨ <b>outrig</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDev-time observability for Go programs, enabling developers to search logs, monitor goroutines, and track variables in real-time.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time Log Viewing\nâ€¢ Goroutine Monitoring\nâ€¢ Variable Watching\nâ€¢ Runtime Hooks (coming soon)\nâ€¢ Minimal Integration\n<br>\nðŸ“– <b>Summary:</b>\nOutrig is a dev-time observability tool for Go programs. It allows developers to monitor their applications in real-time by providing features such as log search, goroutine monitoring, and variable tracking. It consists of an SDK client to be integrated into the Go application and a standalone monitor with a web-based dashboard.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/outrigdev/outrig?embed=0\">View Project</a>\nâ€¢ <a href=\"https://outrig.run?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2ab590c7fa98b7b9845827d030487ecdc8dcb067512b9b458af45ce68f188a6c/outrigdev/outrig",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 177659629,
        "content": "ðŸ”¥ <b>franz-go</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nInteracting with Kafka brokers for producing, consuming, transacting, and administrating Kafka topics.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Feature complete Kafka client (0.8.0 through v4.0+)\nâ€¢ Exactly-Once-Semantics (EOS)\nâ€¢ Idempotent & transactional producers\nâ€¢ Group consumers with various balancers\nâ€¢ Compression support (gzip, snappy, lz4, zstd)\n<br>\nðŸ“– <b>Summary:</b>\nFranz-go is a comprehensive, pure Go Kafka client library that supports a wide range of Kafka features from versions 0.8.0 through 4.0+. It enables developers to easily produce, consume, transact, and administer Kafka topics with features like exactly-once semantics, various consumer group balancers, compression, SASL authentication, and admin functionalities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/twmb/franz-go?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2c4aa3b390db45b6e12a48bdab9975ed17f17bdab28e87cf881de72f0bde51e2/twmb/franz-go",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    }
]