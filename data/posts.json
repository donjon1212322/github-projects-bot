[
    {
        "project_id": 934739086,
        "content": "ðŸ’¡ <b>network_manager_ui</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProvides a simple and user-friendly way to manage Wi-Fi and Ethernet connections on Linux systems, especially for users new to Linux distributions.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uses rofi for UI\nâ€¢ Python backend for network management\nâ€¢ Multiple themes (Catppuccin Mocha, Nord, Rospine, Monochrome)\nâ€¢ Supports various Linux distributions (Arch, Ubuntu/Debian, Fedora)\nâ€¢ No system tray required\n<br>\nðŸ“– <b>Summary:</b>\nThis project offers a network manager with a rofi-based UI, supporting multiple themes and various Linux distributions.  It avoids system tray implementations and provides a search function for efficient network management.  The Python backend interacts with NetworkManager to handle network connections.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Blazzzeee/network_manager_ui?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/65259303529b487db8d3b2fc2c07aefb9d787900b800c50b30b8607ad723f8b0/Blazzzeee/network_manager_ui",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 931884122,
        "content": "ðŸŒŸ <b>Youtube-playlist-to-formatted-text</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating a formatted text file from YouTube playlist transcripts using the Google Gemini API for enhanced readability.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ YouTube playlist transcript extraction\nâ€¢ Gemini API integration for transcript refinement\nâ€¢ Multiple refinement styles (Balanced and Detailed, Summary, Educational, Narrative Rewriting, Q&A Generation)\nâ€¢ Language support for output\n<br>\nðŸ“– <b>Summary:</b>\nThis Python application extracts transcripts from YouTube playlists or single videos.  It then uses the Google Gemini API to refine these transcripts into various formats (e.g., summaries, educational texts, narratives) based on user-selected styles and a configurable chunk size. The refined transcript is saved as a text file.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Ebrizzzz/Youtube-playlist-to-formatted-text?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cbc014b988e82dfc62b4da1166c6a2e4531015f94c5be278ba461cf5b035b4f6/Ebrizzzz/Youtube-playlist-to-formatted-text",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 193305104,
        "content": "ðŸ”¥ <b>QtScrcpy</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nScreen mirroring and control of Android devices from a computer\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Display and control Android devices via USB or network\nâ€¢ Supports GNU/Linux, Windows, and macOS\nâ€¢ Lightweight, high-performance (30-60fps), high-quality (1920x1080 or above), low-latency (35-70ms), and fast startup (around 1 second)\nâ€¢ No root privileges required\n<br>\nðŸ“– <b>Summary:</b>\nQtScrcpy allows users to mirror and control their Android devices on a computer without needing root access.  It supports multiple platforms and offers features like custom key mappings and group control for enhanced usability.  The software prioritizes speed, performance, and image quality.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/barry-ran/QtScrcpy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://blog.csdn.net/rankun1/article/details/87970523?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e3df72af3bde22c8039dd1c984baf39ff735b2cc6bbe010cde46d2b2bbd38ea6/barry-ran/QtScrcpy",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 924592126,
        "content": "ðŸ’¡ <b>ai-file-sorter</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomates file organization by categorizing and sorting files and folders based on their names and extensions using AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI-Powered Categorization\nâ€¢ Customizable Sorting Rules\nâ€¢ Intuitive Interface\nâ€¢ Cross-Platform Compatibility\nâ€¢ Local Database Caching\n<br>\nðŸ“– <b>Summary:</b>\nThis repository contains a cross-platform desktop application that uses AI to intelligently categorize and sort files.  It features a user-friendly interface, customizable sorting rules, and secure API key encryption. The application supports Windows, macOS, and Linux.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/hyperfield/ai-file-sorter?embed=0\">View Project</a>\nâ€¢ <a href=\"https://filesorter.app?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ad57b11771519ce3ef01e6c724a004e0e51cd5e6a40493602e3b347d9701c44e/hyperfield/ai-file-sorter",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 521655652,
        "content": "âœ¨ <b>infisical</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCentralized management of application configuration and secrets, preventing secret leaks\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Secrets Management\nâ€¢ Dashboard for managing secrets across projects and environments\nâ€¢ Native Integrations with GitHub, Vercel, AWS, Terraform, and Ansible\nâ€¢ Secret versioning and Point-in-Time Recovery\n<br>\nðŸ“– <b>Summary:</b>\nInfisical is an open-source secret management platform that helps teams centralize and manage application secrets and configurations.  It offers features like secret versioning, rotation, and dynamic secret generation, along with integrations with various platforms and tools.  This allows for secure and efficient management of sensitive information across different environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Infisical/infisical?embed=0\">View Project</a>\nâ€¢ <a href=\"https://infisical.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/521655652/7d1fa6af-1799-411b-a127-ae342e934685",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 222316111,
        "content": "ðŸ”¥ <b>rusty-hog</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetecting secrets and sensitive information in various systems and data sources\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Scans for secrets in various locations (Google Docs, S3 buckets, Git repositories, files, directories, archives, Confluence wikis, Jira issues, Slack channels)\nâ€¢ Uses regular expressions to detect sensitive information (API keys, passwords, personal information)\nâ€¢ Provides custom regular expression support via JSON object\n<br>\nðŸ“– <b>Summary:</b>\nRusty Hog is a secret scanner built in Rust.  It offers multiple binaries to scan various locations (e.g., Google Docs, S3, Git) for secrets using regular expressions, including custom ones.  It supports building from source and provides pre-built binaries and Docker images for ease of use.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/newrelic/rusty-hog?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4dce83eb1cb246e18beb720f3a394b700c5e5b958b1d4d973cdef67d3a0d744f/newrelic/rusty-hog",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 825470378,
        "content": "ðŸš€ <b>beszel</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nServer monitoring and system resource management\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Lightweight server monitoring platform\nâ€¢ Docker statistics tracking (CPU, memory, network)\nâ€¢ Historical data\nâ€¢ Alert functions (CPU, memory, disk, bandwidth, temperature, status)\nâ€¢ Multi-user support with admin controls\n<br>\nðŸ“– <b>Summary:</b>\nBeszel is a lightweight server monitoring platform providing a web interface to track Docker container and host system metrics, including historical data and configurable alerts.  It supports multi-user management, OAuth authentication, and automated backups, with a REST API for integration with other systems.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/henrygd/beszel?embed=0\">View Project</a>\nâ€¢ <a href=\"https://beszel.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/825470378/2710c6db-f934-4a8b-a2c4-7a0abbcd2ad6",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 928529246,
        "content": "ðŸ’¡ <b>ScrumAgent</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered agile project management within Discord communities, acting as a virtual Scrum Master\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Discord Integration\nâ€¢ Taiga Integration\nâ€¢ Automated Task Tracking\nâ€¢ Efficient Search & Retrieval\nâ€¢ Issue Management\n<br>\nðŸ“– <b>Summary:</b>\nScrum Agent is an open-source tool that integrates Discord and Taiga to streamline agile workflows.  It automates task tracking, facilitates efficient communication, and provides tools for managing user stories and issues.  The bot aims to improve project oversight and team collaboration for small to large development teams.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Shikenso-Analytics/ScrumAgent?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ea26ca76ac1b15bd5d39c4b05c13aa8f4c5eb9b7a40f8df265a5d26fc086147b/Shikenso-Analytics/ScrumAgent",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 273906263,
        "content": "ðŸ’¡ <b>httpdbg</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDebugging and inspecting HTTP(S) requests made by Python applications\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Debugging HTTP(S) client requests in Python programs\nâ€¢ Interactive console for real-time request inspection\nâ€¢ Command-line interface for tracing requests in scripts and modules\n<br>\nðŸ“– <b>Summary:</b>\nhttpdbg is a Python tool that simplifies debugging HTTP(S) client requests.  It provides an interactive console and a web interface to visualize requests, supports various libraries and testing frameworks, and allows customization for specific use cases.  This enables developers to easily monitor and analyze network traffic within their Python applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/cle-b/httpdbg?embed=0\">View Project</a>\nâ€¢ <a href=\"https://httpdbg.readthedocs.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f8d8301dbd78766aae1ddb4da92b1a1ca7b7d2534031f306fe8f55fc8dbfefd6/cle-b/httpdbg",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    }
]