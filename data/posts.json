[
    {
        "project_id": 836460535,
        "content": "ðŸ”¥ <b>Alice</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA smart desktop AI assistant application.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Voice Interaction (VAD, OpenAI TTS)\nâ€¢ Memory & Context (Short-term, Long-term, Summarization, Emotion awareness)\nâ€¢ Vision & Visual Output (Screenshot interpretation, Image generation)\nâ€¢ Computer Use Tools (File system browsing, Shell command execution, Granular command approvals)\n<br>\nðŸ“– <b>Summary:</b>\nAlice is an open-source AI desktop assistant that offers voice interaction, memory & context awareness, vision capabilities, and computer use tools. It allows users to interact with their computer through voice commands, leveraging function calling and customizable settings for a personalized AI experience. Alice is built with Vue.js, Vite, and Electron.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/pmbstyle/Alice?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5498517e4e9feaeaa62767c7a298030970b2f41aad51905717f963353338df87/pmbstyle/Alice",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 817827211,
        "content": "ðŸŒŸ <b>vid2text</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nExtracting searchable transcriptions from video and audio sources.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multi-source support (YouTube, local videos, M3U8 streams)\nâ€¢ Local transcription using MLX Whisper or OpenAI Whisper\nâ€¢ SQLite storage with Datasette web interface\nâ€¢ Batch processing via YAML configuration\n<br>\nðŸ“– <b>Summary:</b>\nThe vid2text tool enables users to create searchable transcripts from various video and audio sources, including YouTube videos, local files, and M3U8 streams. It leverages local Whisper models for transcription and stores the results in an SQLite database, accessible through a Datasette web interface. Batch processing is supported via YAML configuration files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kashw1n/vid2text?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/407f9ca622e37c3d47239833c6ab796b4ce50106c636553609c5f3392ba7fc84/kashw1n/vid2text",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 257787813,
        "content": "ðŸš€ <b>firezone</b> | Elixir\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecurely manage remote access for organizations of any size using a zero-trust approach.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Fast: Built on WireGuard\nâ€¢ Scalable: Deploy multiple gateways for load balancing and failover\nâ€¢ Private: Peer-to-peer, end-to-end encrypted tunnels\nâ€¢ Secure: Zero attack surface due to holepunching tech\nâ€¢ Open: Open-source codebase\n<br>\nðŸ“– <b>Summary:</b>\nFirezone is an open-source zero-trust access platform built on WireGuard. It provides a modern alternative to legacy VPNs, offering features like granular access control, multiple authentication options, and easy deployment. Firezone aims to provide secure and scalable remote access management for organizations of all sizes.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/firezone/firezone?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.firezone.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/257787813/7852ca28-8b51-4d6b-ab84-1da339831478",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 867701772,
        "content": "ðŸ’¡ <b>tewi</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nText-based management of a Transmission BitTorrent daemon.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Connect to Transmission daemon by its credentials\nâ€¢ Browse torrents list\nâ€¢ Different view modes: card, compact, oneline\nâ€¢ Display torrent details: overview, files, trackers, peers\nâ€¢ Add new torrents\n<br>\nðŸ“– <b>Summary:</b>\nTewi is a text-based user interface (TUI) for managing the Transmission BitTorrent daemon. It allows users to connect to a Transmission daemon, browse torrents, view details, add new torrents, and perform various actions like starting, pausing, removing, and verifying torrents, all from a terminal.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/anlar/tewi?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f8b81cf0a1062ff3874b6d8e892b3e960dc0ff6c9e7cd929aaaa8262be2d9efc/anlar/tewi",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 190169745,
        "content": "ðŸš€ <b>ripe-atlas-software-probe</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMeasuring Internet connectivity and reachability using a global network of software probes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Internet connectivity measurement\nâ€¢ Network reachability analysis\nâ€¢ Software probe implementation\n<br>\nðŸ“– <b>Summary:</b>\nThe ripe-atlas-software-probe repository contains the codebase for the RIPE Atlas software probe, which is part of a global network that measures Internet connectivity and reachability. It allows users to deploy software probes on various platforms, including Debian, Raspberry Pi OS, and Enterprise Linux, to contribute to a real-time understanding of the Internet's state. The repository also supports building an OpenWRT package for embedded devices.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/RIPE-NCC/ripe-atlas-software-probe?embed=0\">View Project</a>\nâ€¢ <a href=\"https://atlas.ripe.net/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d1f54c4dc9dca274003a83a4e9e85fd9070ce7d38b467e390bc364a7646d4d2/RIPE-NCC/ripe-atlas-software-probe",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 772283421,
        "content": "ðŸ”¥ <b>unsend</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOpen source alternative to Resend, Sendgrid, Postmark etc. for sending emails reliably and cheaply with a dashboard for managing contacts and sending bulk emails.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Add domains\nâ€¢ Transactional Mails\nâ€¢ Rest API\n<br>\nðŸ“– <b>Summary:</b>\nUnsend is an open-source email sending infrastructure that leverages Amazon SES to provide a reliable and cost-effective alternative to services like Resend and Sendgrid. It offers a comprehensive dashboard for monitoring email delivery metrics, managing contacts, and sending both transactional and marketing emails. Unsend also supports SMTP and a REST API, with plans to expand to other sending protocols like SMS and push notifications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/unsend-dev/unsend?embed=0\">View Project</a>\nâ€¢ <a href=\"https://unsend.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f02b45241f20c7f4964cc3dd702bfc829222719f80a84a5bf2662d2c6a70b777/unsend-dev/unsend",
        "platform": "telegram",
        "quality_score": 0.7
    }
]