[
    {
        "project_id": 981803794,
        "content": "ðŸ’¡ <b>maps_screenshot_to_3d</b> | Jupyter Notebook\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating 3D models from aerial imagery, specifically Google Maps screenshots, for experimental or artistic purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Converts Google Maps screenshots into 3D models\nâ€¢ Uses monocular depth estimation models\nâ€¢ Removes background and adjusts perspective\nâ€¢ Visualizes mesh or point cloud\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a Jupyter Notebook-based pipeline for converting Google Maps screenshots into 3D models. It leverages monocular depth estimation to estimate depth from the 2D image, removes the background, corrects perspective, and visualizes the result as a mesh or point cloud. The primary use case is for experimentation and generating 3D models from aerial imagery.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aliaksandr960/maps_screenshot_to_3d?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/61ccf71115fe446e50e3163e279d7cdf0478f499b2b1cac698a707193692b56f/aliaksandr960/maps_screenshot_to_3d",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 350411909,
        "content": "ðŸ’¡ <b>streamrip</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDownloading music from streaming services for offline listening and archival.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Fast, concurrent downloads\nâ€¢ Downloads from Qobuz, Tidal, Deezer, and SoundCloud\nâ€¢ Supports Spotify and Apple Music playlists via last.fm\nâ€¢ Automatic format conversion\nâ€¢ Duplicate track avoidance\n<br>\nðŸ“– <b>Summary:</b>\nStreamrip is a scriptable music downloader that supports multiple streaming platforms like Qobuz, Tidal, Deezer, and SoundCloud. It allows users to download tracks, albums, and playlists, convert them to preferred formats, and avoid duplicates. The tool offers features like concurrent downloads, rate limiting, interactive search, and integration with youtube-dl, making it a versatile solution for music enthusiasts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nathom/streamrip?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0c6eaeac273dc02883004e268ec2110fbc3adc1bbabb48f46efb6ec01bbc20e8/nathom/streamrip",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    },
    {
        "project_id": 142004087,
        "content": "âœ¨ <b>pywebcopy</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSaving webpages and websites locally for offline viewing and archiving.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Downloads entire or partial websites locally.\nâ€¢ Remaps links to resources for offline viewing.\nâ€¢ Crawls websites to discover and download linked resources.\nâ€¢ Command-line interface for easy usage.\n<br>\nðŸ“– <b>Summary:</b>\nPyWebCopy is a Python tool designed to download websites or specific webpages to your local machine for offline access. It automatically remaps links to ensure resources like stylesheets and images function correctly. The tool also features a command-line interface for simplified usage.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/rajatomar788/pywebcopy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://rajatomar788.github.io/pywebcopy/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/142004087/7dffa000-3a2f-11ea-9136-294a4ffcccfc",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 156939672,
        "content": "ðŸ”¥ <b>onnxruntime</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAccelerating machine learning inference and training across various platforms and hardware.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform inference and training accelerator\nâ€¢ Supports models from various deep learning frameworks and classical machine learning libraries\nâ€¢ Compatible with different hardware, drivers, and operating systems\n<br>\nðŸ“– <b>Summary:</b>\nONNX Runtime is a cross-platform machine learning accelerator for both inference and training. It supports models from popular frameworks like PyTorch and TensorFlow, as well as classical machine learning libraries. By leveraging hardware acceleration and graph optimizations, ONNX Runtime aims to provide optimal performance across diverse hardware and operating systems.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/microsoft/onnxruntime?embed=0\">View Project</a>\nâ€¢ <a href=\"https://onnxruntime.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/156939672/37b1cb00-864b-11eb-8220-76153935f7da",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 928902972,
        "content": "âœ¨ <b>switchsearch</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuickly switching between different search engines with a single click.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Built-in search engine options (Google, Yandex, Brave, DuckDuckGo, Perplexity, ChatGPT, Wiby, Marginalia)\nâ€¢ Ability to add custom search engines\nâ€¢ Google and Yandex image search via right-click\n<br>\nðŸ“– <b>Summary:</b>\nSwitchSearch is a browser extension that allows users to quickly switch between different search engines. It comes with several built-in options and allows users to add their own. It also offers convenient image search integration for Google and Yandex.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/thedmdim/switchsearch?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8f308692b049f83bb0f78674e0e157ae29079f5defac4e72b5ff12fb36430795/thedmdim/switchsearch",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 762837,
        "content": "ðŸš€ <b>ricochet</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAnonymous and secure instant messaging\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Anonymous messaging\nâ€¢ Metadata resistance\nâ€¢ Peer-to-peer communication\nâ€¢ Cross-platform support\n<br>\nðŸ“– <b>Summary:</b>\nRicochet is an anonymous peer-to-peer instant messaging system that prioritizes privacy and metadata resistance. It leverages the Tor network to hide user identities and prevent the exposure of contact lists or communication content. The application is designed to be cross-platform and user-friendly, focusing on secure communication without reliance on central servers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ricochet-im/ricochet?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ricochet.im/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/063b419efeeb5133bf7ae40f087d837196437078f1925c17b6a7159cc1eab84f/ricochet-im/ricochet",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 922192456,
        "content": "âœ¨ <b>tapnote</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nInstant, self-hosted Markdown-based content creation and publishing.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Minimalist Writing Experience\nâ€¢ Distraction-free Markdown editor\nâ€¢ Instant publishing\nâ€¢ Self-hosted content management\nâ€¢ Unique URL for each post\n<br>\nðŸ“– <b>Summary:</b>\nTapNote is a minimalist, self-hosted publishing platform that allows users to instantly create and publish Markdown-based content. It offers a distraction-free writing experience with features like unique URLs, secure editing, and support for images and code snippets. TapNote is ideal for quick notes, blog posts, or documentation sharing, giving users full control over their content.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vorniches/tapnote?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2c9eb3e0bb968d461027b24d54460d2df73c6e10e9b8c5ebe9f23aec6cb4609b/vorniches/tapnote",
        "platform": "telegram",
        "quality_score": 0.15
    },
    {
        "project_id": 926455740,
        "content": "âœ¨ <b>amoy-todo-wallpaper</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSetting a customizable To-Do list as a Windows desktop wallpaper for increased visibility and task management.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Sets a To-Do list as Windows wallpaper\nâ€¢ Allows editing of the To-Do list via a UI\nâ€¢ Allows customization of font color and background color\nâ€¢ Supports setting font size\nâ€¢ Uses a background image\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a Python program that sets a user-editable To-Do list as the Windows desktop wallpaper. It includes a UI for editing the To-Do list content and allows customization of font color, background color, and font size. The program utilizes a background image to enhance the visual appeal of the wallpaper.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/casualwriter/amoy-todo-wallpaper?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/22fec63d0a011c477104d9ca46b581da2b340f9f4e69bbe2edb136dff18f5036/casualwriter/amoy-todo-wallpaper",
        "platform": "telegram",
        "quality_score": 0.15
    },
    {
        "project_id": 816373900,
        "content": "ðŸŒŸ <b>SAMPart3D</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSegmenting any part in 3D objects.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ 3D object part segmentation\nâ€¢ Training pipeline for SAMPart3D\nâ€¢ Multi-view rendering using Blender\nâ€¢ Testing with pretrained MLPs\nâ€¢ Highlighting 3D segments on multi-view renderings\n<br>\nðŸ“– <b>Summary:</b>\nSAMPart3D is a Python-based project focused on segmenting parts within 3D objects. It provides tools and scripts for training segmentation models, utilizing multi-view rendering with Blender, and evaluating the segmentation results. The repository also includes utilities for highlighting segmented parts in rendered images and provides a dataset called PartObjaverse-Tiny.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Pointcept/SAMPart3D?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5880e6ecbf14691d173af6246f29335408d0c8af5a5ab5d99f67335c604820b9/Pointcept/SAMPart3D",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    }
]