[
    {
        "project_id": 800632485,
        "content": "âœ¨ <b>subtrace</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSee all incoming and outgoing requests in backend servers to resolve production issues faster\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Works out-of-the-box\nâ€¢ No code changes needed\nâ€¢ Supports all languages (Python + Node + Go + everything else)\nâ€¢ See full payload, headers, status code, and latency\nâ€¢ Less than 100Âµs performance overhead\n<br>\nðŸ“– <b>Summary:</b>\nSubtrace is a tool to debug docker containers, providing insights into network requests without code changes.  It supports multiple languages and offers low performance overhead, leveraging Clickhouse for data management.  This allows developers to quickly identify and resolve issues in their backend servers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/subtrace/subtrace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://subtrace.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9d999d33320461f5c1da2de5798bb63b09fdc16ffbc1dce34ff309c5f18a5260/subtrace/subtrace",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 908068887,
        "content": "ðŸ’¡ <b>google_photos_mobile_client</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUploading files to Google Photos without using a physical device or emulator\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uploads files to Google Photos as if from a Pixel XL device\nâ€¢ Provides both Python client and CLI interfaces\nâ€¢ Supports various options like progress display, recursive directory uploads, and album creation\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a command-line interface and Python client for uploading files to Google Photos, mimicking the behavior of a Pixel XL device.  It offers features such as progress tracking, recursive directory uploads, and options for managing storage quota and file deletion. The tool requires authentication data, which can be obtained using HTTP Toolkit to intercept requests from the Google Photos app.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/xob0t/google_photos_mobile_client?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 249331466,
        "content": "ðŸ’¡ <b>laplace</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nScreen sharing directly via browser without requiring software installations or plugins\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ WebRTC for low latency peer-to-peer connections\nâ€¢ WebSocket implemented in golang for WebRTC signaling\nâ€¢ Screen sharing directly via browser\nâ€¢ No installation or registration required\nâ€¢ Low server cost because encoding and transmission are done on client browsers\n<br>\nðŸ“– <b>Summary:</b>\nLaplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Golang-based WebSocket for signaling.  It offers a simple, installation-free solution for screen sharing with low server costs, ideal for various use cases including game streaming and remote collaboration.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/adamyordan/laplace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://laplace.adamjordan.id/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d19eb95f75e2935060e9415e57d31bd69a756933f3a7a422c2d5c12874cab017/adamyordan/laplace",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 853917967,
        "content": "ðŸŒŸ <b>fast-music-remover</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRemoving background music and noise from audio\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ background music filtering\nâ€¢ noise removal\nâ€¢ audio quality enhancement\nâ€¢ cross-platform support (Linux, macOS, Windows)\nâ€¢ containerized on GHCR\n<br>\nðŸ“– <b>Summary:</b>\nFast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It offers a web UI and is available as a container on GHCR, supporting cross-platform use. Future development includes real-time processing and additional ML models.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/omeryusufyagci/fast-music-remover?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d2f6dde957786f1317781fb6f6d3a21aa98eba5b3d13d18d480ea5f191b8b9e2/omeryusufyagci/fast-music-remover",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 49876476,
        "content": "âœ¨ <b>shardingsphere</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData sharding, scaling, and encryption on any database\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed SQL transaction\nâ€¢ query engine for data sharding\nâ€¢ scaling\nâ€¢ encryption\n<br>\nðŸ“– <b>Summary:</b>\nShardingSphere is a distributed database middleware that provides features for data sharding, scaling, and encryption.  It acts as a query engine, handling distributed SQL transactions across multiple databases.  This allows for improved performance and manageability of large-scale database systems.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apache/shardingsphere?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d04dc0777cf276f0548ae361f240422189deab822f87f2b87719c7cdf033f93/apache/shardingsphere",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 139199684,
        "content": "âœ¨ <b>prefect</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nbuilding and managing data pipelines in Python\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ workflow orchestration\nâ€¢ data pipeline building\nâ€¢ scheduling\nâ€¢ caching\nâ€¢ retries\n<br>\nðŸ“– <b>Summary:</b>\nPrefect is a Python framework for building data pipelines.  It offers features like scheduling, caching, and retries to create resilient workflows, and integrates with a self-hosted server or Prefect Cloud for monitoring.  Data teams can automate data processes with minimal code.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrefectHQ/prefect?embed=0\">View Project</a>\nâ€¢ <a href=\"https://prefect.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/38de807adfe98381b0087a33f30edb1c970041a86974a07cc246dda449466126/PrefectHQ/prefect",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 577623124,
        "content": "ðŸš€ <b>VPet</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTo provide a virtual pet simulator that can be integrated into other WPF applications or used as a standalone desktop application.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source virtual pet simulator software\nâ€¢ Integrates with WPF applications via NuGet\nâ€¢ Supports interactions such as feeding and petting\nâ€¢ Features a large number of animations (32 types * 4 states * 3 categories)\nâ€¢ Includes a mod maker for creating custom pets and animations\n<br>\nðŸ“– <b>Summary:</b>\nVPet-Simulator is an open-source virtual pet software that integrates into WPF applications.  It offers extensive animation options, a mod maker for customization, and Steam Workshop support for sharing creations.  Users can create and share new pets, animations, and even add new features via code plugins.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/LorisYounger/VPet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/687fda15083eea9c5910a247dd7a35f548f4936a0f4fa710924be80989359b60/LorisYounger/VPet",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 146327667,
        "content": "ðŸ’¡ <b>vector</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCollecting, transforming, and routing observability data (logs and metrics) to various destinations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ High-performance observability data pipeline\nâ€¢ End-to-end data processing (agent & aggregator)\nâ€¢ Collects, transforms, and routes logs and metrics\nâ€¢ Supports various data sources and destinations\nâ€¢ Built in Rust for reliability\n<br>\nðŸ“– <b>Summary:</b>\nVector is a high-performance data pipeline written in Rust that collects, transforms, and routes logs and metrics.  It supports various sources and destinations, enabling users to manage and reduce observability costs, transition vendors, and improve data quality.  Vector functions as both an agent and aggregator for a complete observability platform.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vectordotdev/vector?embed=0\">View Project</a>\nâ€¢ <a href=\"https://vector.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/146327667/79b84380-28db-11eb-9bb0-13be8f3541cc",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 335164964,
        "content": "âœ¨ <b>dataease</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData analysis and business intelligence\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source BI tool\nâ€¢ Supports various data sources (OLTP, OLAP databases, data warehouses, data lakes, data files, APIs)\nâ€¢ Drag-and-drop interface for chart creation\nâ€¢ Data sharing capabilities\nâ€¢ Available as desktop and server versions\n<br>\nðŸ“– <b>Summary:</b>\nDataEase is an open-source BI tool that allows users to analyze data and gain insights into business trends.  It supports a wide range of data sources and offers a user-friendly drag-and-drop interface for creating charts and sharing data.  DataEase is available as both a desktop and server application, providing flexibility for various deployment scenarios.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dataease/dataease?embed=0\">View Project</a>\nâ€¢ <a href=\"https://dataease.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9202c1ff4c6b3479a324a880be6bb0798efc14b0ea737b729e7dd36d59e7e1c5/dataease/dataease",
        "platform": "telegram",
        "quality_score": 0.85
    }
]