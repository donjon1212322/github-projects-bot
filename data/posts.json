[
    {
        "project_id": 77145066,
        "content": "ðŸŒŸ <b>docker-android</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAndroid application development and testing in isolated environments.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Android emulation within Docker containers\nâ€¢ noVNC support for remote access and control\nâ€¢ Support for multiple Android versions and device profiles\nâ€¢ ADB connect for external control\nâ€¢ Integration with cloud solutions like Genymotion Cloud\n<br>\nðŸ“– <b>Summary:</b>\nThe docker-android repository provides Docker images for running Android emulators, enabling developers to build and test Android applications in isolated environments. It supports various Android versions, device profiles, and remote access via noVNC, facilitating efficient and consistent testing workflows. The solution also integrates with cloud services and testing frameworks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/budtmo/docker-android?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/462a216d8aabae83277a730a82bb32e3422e247eb5766400a2934202fe33f9c7/budtmo/docker-android",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 707667804,
        "content": "ðŸŒŸ <b>Bluetooth-LE-Spam</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating phantom Bluetooth device advertisements to trigger pop-up dialogs on nearby devices for testing or demonstration purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Sends BLE advertisements mimicking various services\nâ€¢ Triggers unwanted pop-up dialogs on nearby devices\nâ€¢ Simulates Apple device popups, Microsoft Swift Pair, and Samsung Easy Setup\n<br>\nðŸ“– <b>Summary:</b>\nThe Bluetooth LE Spam repository provides an Android application that leverages Bluetooth Low Energy to broadcast fake device advertisements. This can trigger unwanted pop-up dialogs on nearby devices, simulating connection requests or other service notifications. The app also includes a spam detector to identify the source of such advertisements.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/simondankelmann/Bluetooth-LE-Spam?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/dcdb1178f41976e60b7bfcba9598f288a23da69b770b28e37d7e0218d445306d/simondankelmann/Bluetooth-LE-Spam",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 1003646358,
        "content": "ðŸ”¥ <b>OmniAvatar</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating realistic avatar videos from audio input.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Audio-driven avatar video generation\nâ€¢ Adaptive body animation\nâ€¢ Model weights for 1.3B and 14B parameter models available\nâ€¢ Inference code released\nâ€¢ LoRA and audio condition weights provided\n<br>\nðŸ“– <b>Summary:</b>\nOmniAvatar is a project focused on efficient audio-driven avatar video generation with adaptive body animation. It provides model weights and inference code for both 1.3B and 14B parameter models, along with LoRA and audio condition weights. The project leverages Hugging Face for model distribution and includes instructions for installation, model download, and inference.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Omni-Avatar/OmniAvatar?embed=0\">View Project</a>\nâ€¢ <a href=\"https://omni-avatar.github.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a9d078bb6ca0b28a9b1dc77e178ccac900790be002706942a66cf18c20a92d06/Omni-Avatar/OmniAvatar",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 969084914,
        "content": "ðŸ’¡ <b>doWM</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCustomizing and managing the X11 windowing environment on Linux systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Floating and tiling window management\nâ€¢ Written in Go\nâ€¢ Configurable via YAML and shell scripts\nâ€¢ X11 support\n<br>\nðŸ“– <b>Summary:</b>\ndoWM is a window manager for X11, written in Go, that provides both floating and tiling window management capabilities. It is configured using YAML files and shell scripts, allowing users to customize their window management experience. The primary goal is to provide a simple and beautiful window management solution for Linux users.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/BobdaProgrammer/doWM?embed=0\">View Project</a>\nâ€¢ <a href=\"https://dowm.softwarespot.top?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/06d500e0ef61c882055a53d96169b14ed682d36504223edacc02523f790bedb8/BobdaProgrammer/doWM",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 490028114,
        "content": "ðŸŒŸ <b>beelzebub</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetecting and analyzing cyber attacks by creating a secure honeypot environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Low-code configuration using YAML-based, modular service definitions\nâ€¢ LLM integration for simulating real systems and creating high-interaction honeypot experiences\n<br>\nðŸ“– <b>Summary:</b>\nBeelzebub is a low-code honeypot framework that leverages AI to create realistic, high-interaction honeypot environments. It supports multiple protocols, integrates with LLMs for deception, and provides observability through Prometheus and ELK stack. It is designed to detect and analyze cyber attacks in a secure and easily manageable way.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mariocandela/beelzebub?embed=0\">View Project</a>\nâ€¢ <a href=\"https://beelzebub-honeypot.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/490028114/6bb2bae0-6869-4731-960d-3d7880c1066a",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1003143578,
        "content": "âœ¨ <b>agents-towards-production</b> | Jupyter Notebook\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding production-ready GenAI agents that scale from prototype to enterprise.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ End-to-end tutorials for GenAI agents\nâ€¢ Stateful workflows\nâ€¢ Vector memory\nâ€¢ Real-time web search API integration\nâ€¢ Docker deployment\n<br>\nðŸ“– <b>Summary:</b>\nThe repository provides comprehensive, code-first tutorials for building production-grade GenAI agents. It covers various aspects, including stateful workflows, vector memory, real-time web search APIs, and deployment strategies. The tutorials aim to guide users through the process of scaling AI agents from initial prototypes to enterprise-level applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/NirDiamant/agents-towards-production?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/862dfe87a852cdf490b99dd5ba6aa48eed2f00742b63f92861e140e5242fbe2f/NirDiamant/agents-towards-production",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 1000968426,
        "content": "ðŸš€ <b>js-data-structures</b> | Vue\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLearning and demonstrating data structures in the context of frontend development using JavaScript and Vue.js.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Demonstrates data structures in JavaScript\nâ€¢ Provides practical examples for frontend development\nâ€¢ Uses Vue.js for implementation\n<br>\nðŸ“– <b>Summary:</b>\nThis repository serves as a practical guide for frontend developers to learn and understand data structures. It provides real-world examples implemented in JavaScript with Vue.js, covering common data structures like arrays, lists, maps, and trees. The project aims to bridge the gap between theoretical knowledge and practical application in frontend development.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/RuSaG0/js-data-structures?embed=0\">View Project</a>\nâ€¢ <a href=\"https://rusag0.github.io/js-data-structures/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/abad4a69d3decadfd26e92fe28ccb67b9e30d17de6c0616cea105a486bca7f9c/RuSaG0/js-data-structures",
        "platform": "telegram",
        "quality_score": 0.8
    }
]