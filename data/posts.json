[
    {
        "project_id": 965313467,
        "content": "ðŸ’¡ <b>droidrun</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating Android device interactions using natural language commands.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Control Android devices with natural language commands\nâ€¢ Supports multiple LLM providers (OpenAI, Anthropic, Gemini)\nâ€¢ Easy to use CLI\nâ€¢ Extendable Python API for custom automations\nâ€¢ Screenshot analysis for visual understanding of the device\n<br>\nðŸ“– <b>Summary:</b>\nDroidRun is a framework for controlling Android devices using LLM agents, enabling automation through natural language. It features a CLI, a Python API for custom automations, and supports multiple LLM providers like OpenAI, Anthropic, and Gemini. The framework also uses screenshot analysis for visual understanding of the device's state.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/droidrun/droidrun?embed=0\">View Project</a>\nâ€¢ <a href=\"https://droidrun.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e0d3d7302ebde7284da6cb56b0719496571856e67dd64e8a40ac1b82858fa88b/droidrun/droidrun",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 966383042,
        "content": "ðŸš€ <b>dead-man-hand</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nExecuting predefined actions when the user is no longer available, ensuring privacy and confidentiality until that time.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Privacy-focused action execution only after death\nâ€¢ Encrypted actions using age encryption\nâ€¢ Vault integration for private key management\nâ€¢ Multiple action execution methods (json_post, bulksms, mail)\n<br>\nðŸ“– <b>Summary:</b>\nThe dead-man-hand repository provides a dead-man-switch software solution designed with privacy in mind. It allows users to define actions that will be executed only when they are considered 'dead,' ensuring that these actions remain encrypted and confidential until that moment. The system integrates with Vault for secure key management and supports multiple action and probe methods.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bkupidura/dead-man-hand?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/95ef855a8278928fbcb587a27b108abad30a56f481c2b2d22677cf90de77baed/bkupidura/dead-man-hand",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 489384246,
        "content": "ðŸŒŸ <b>blackbird</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSearching for user accounts by username or email across social networks for digital investigations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ OSINT tool for username/email searches\nâ€¢ WhatsMyName integration\nâ€¢ PDF, CSV, and HTTP export options\nâ€¢ Customizable search filters\nâ€¢ AI-powered NER for metadata extraction\n<br>\nðŸ“– <b>Summary:</b>\nBlackbird is an OSINT tool designed to quickly locate user accounts on various platforms using usernames or email addresses. It integrates with WhatsMyName, offers multiple export formats, and includes AI-powered NER to enhance metadata extraction. The tool is intended for use in digital investigations and cybersecurity.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/p1ngul1n0/blackbird?embed=0\">View Project</a>\nâ€¢ <a href=\"https://p1ngul1n0.gitbook.io/blackbird/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4725bd8403cdec32c8f492a52d5675bbf245bf6e43bafd1d32ca292af35f03b1/p1ngul1n0/blackbird",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 927981080,
        "content": "ðŸŒŸ <b>ScrapeServ</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTaking website screenshots via an API.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Takes screenshots of different sections of a webpage by scrolling.\nâ€¢ Runs in a Docker container.\nâ€¢ Browser-based (runs website Javascript).\nâ€¢ Returns HTTP status code and headers.\nâ€¢ Handles redirects automatically.\n<br>\nðŸ“– <b>Summary:</b>\nScrapeServ is a self-hosted API that allows users to send a URL and receive website data as a file, along with screenshots of the site. It utilizes Playwright to launch a Firefox browser context for each job, ensuring accurate rendering of websites with JavaScript. The API handles redirects, download links, and provides HTTP status codes and headers, making it a comprehensive solution for web scraping and screenshot generation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/goodreasonai/ScrapeServ?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/db6e3c7278807ced7b8262147d8eae153b7b24dcc030c6c69d58a0638e1e8389/goodreasonai/ScrapeServ",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 6909307,
        "content": "ðŸ”¥ <b>pyquery</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuerying and manipulating XML/HTML documents in Python using a jQuery-like syntax.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ jQuery-like API for XML documents in Python\nâ€¢ Uses lxml for fast XML and HTML manipulation\nâ€¢ Ability to load XML from strings, lxml documents, files, or URLs\nâ€¢ Supports jQuery pseudo-classes like :first, :last, :even, :odd, etc.\n<br>\nðŸ“– <b>Summary:</b>\nPyQuery is a Python library that provides a jQuery-like interface for querying and manipulating XML documents. It leverages lxml for efficient processing and offers a familiar API for developers accustomed to jQuery. PyQuery simplifies tasks such as selecting elements, traversing the DOM, and modifying content within XML/HTML structures.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gawel/pyquery?embed=0\">View Project</a>\nâ€¢ <a href=\"http://pyquery.rtfd.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9555d94c4d9d1f2e9d1e2893cac0bf9dfddef1c914da7da9224bb0b6927d427d/gawel/pyquery",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 187202744,
        "content": "ðŸ’¡ <b>python-benedict</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nExtending Python dictionaries with advanced key access methods and built-in I/O operations for various data formats.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Dict subclass with keylist/keypath/keyattr support\nâ€¢ Built-in I/O operations (base64, csv, html, ini, json, pickle, plist, query-string, toml, xls, xml, yaml)\nâ€¢ S3 support\nâ€¢ Utility methods for data manipulation\n<br>\nðŸ“– <b>Summary:</b>\nThe python-benedict library enhances Python's built-in dictionary with keylist, keypath, and keyattr support, simplifying access to nested data. It provides integrated I/O operations for common data formats like JSON, YAML, and CSV, as well as S3 support. This makes it easier to work with complex data structures and perform data serialization/deserialization tasks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/fabiocaccamo/python-benedict?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/187202744/024f6180-049f-11eb-876a-be68f8b900d1",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 370397287,
        "content": "âœ¨ <b>AirPodsDesktop</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnhance the user experience of AirPods on Windows and Linux desktops.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Battery information display\nâ€¢ Automatic ear detection\nâ€¢ Low audio latency mode\nâ€¢ Beautiful animation\n<br>\nðŸ“– <b>Summary:</b>\nAirPodsDesktop is a C++ application designed to improve the AirPods user experience on Windows and Linux. It provides features such as battery information display, automatic ear detection, low audio latency mode, and visually appealing animations. The application aims to integrate AirPods seamlessly with desktop environments, offering a more convenient and intuitive user experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/SpriteOvO/AirPodsDesktop?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/370397287/01ccac85-7e2a-4e40-ab15-2807cabdfd8b",
        "platform": "telegram",
        "quality_score": 0.55
    }
]