[
    {
        "project_id": 960686967,
        "content": "ðŸ’¡ <b>robo-boy</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nControlling ROS 2 robots via a web application, especially on mobile devices.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Responsive design for desktop and mobile\nâ€¢ ROS 2 connection (via rosbridge)\nâ€¢ Camera stream display (via web_video_server)\nâ€¢ Interchangeable control interfaces\nâ€¢ 3D visualization support\n<br>\nðŸ“– <b>Summary:</b>\nRobo-Boy is a web application designed for controlling ROS 2 robots, with a focus on mobile usability and inspired by retro handheld consoles. It features a React frontend, ROS 2 integration via rosbridge, camera stream display, interchangeable control interfaces, 3D visualization support and customizable themes, providing a versatile and user-friendly robot control experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tessel-la/robo-boy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ef4adf3c1a6e522c254abb41d81daf454cb5b7055ad7f88088061360631f1689/tessel-la/robo-boy",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 651944895,
        "content": "ðŸ’¡ <b>Cavasik</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAudio visualization\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Five normal drawing modes\nâ€¢ Two circle drawing modes\nâ€¢ Five mirror drawing modes\nâ€¢ Four drawing directions\nâ€¢ Customizable LibAdwaita interface\n<br>\nðŸ“– <b>Summary:</b>\nCavasik is an audio visualizer based on CAVA, offering extended capabilities and a customizable interface. It provides various drawing modes, color options, and configuration settings to create dynamic visual representations of audio. Users can control the visualizer through a graphical interface or a DBus interface, and even load color schemes from files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/TheWisker/Cavasik?embed=0\">View Project</a>\nâ€¢ <a href=\"https://flathub.org/apps/io.github.TheWisker.Cavasik?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/651944895/00139716-601e-4558-825f-f4bbb7153fab",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 1028391416,
        "content": "ðŸŒŸ <b>duelr</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEvaluating and comparing Large Language Model responses across different providers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Parallel Comparison of LLMs\nâ€¢ Comprehensive Metrics (latency, token usage, cost)\nâ€¢ Quality Scoring (length simplicity, readability, JSON validity)\nâ€¢ Cost Transparency\nâ€¢ Extensible provider system\n<br>\nðŸ“– <b>Summary:</b>\nDuelr is an open-source tool designed to evaluate and compare the performance of various Large Language Models (LLMs). It allows users to test multiple LLMs simultaneously, tracking key metrics such as latency, token usage, and cost, while also providing quality scores for readability and JSON validity. Duelr aims to provide transparency and facilitate informed decisions when selecting LLMs.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/stashlabs/duelr?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/43eb5d4bbcdd6502309e9f19598505e033d1b5c03bb5d71f707fe9bbce2b24ad/stashlabs/duelr",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 3564353,
        "content": "ðŸ’¡ <b>Baikal</b> | PHP\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCalendar and Contacts server\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ CalDAV server\nâ€¢ CardDAV server\nâ€¢ Installation and upgrade instructions available\nâ€¢ Guides for installation and maintenance available for users with limited IT experience\n<br>\nðŸ“– <b>Summary:</b>\nBaikal is a CalDAV and CardDAV server designed for managing calendars and contacts. It provides resources for installation, upgrading, and troubleshooting. The project aims to be accessible to users with varying levels of IT experience, offering detailed guides for setup and maintenance.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/sabre-io/Baikal?embed=0\">View Project</a>\nâ€¢ <a href=\"https://sabre.io/baikal/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c4506fa8539231ea2ca9bea533d14984e7379640ae442678d111801c6512bf26/sabre-io/Baikal",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 455878073,
        "content": "ðŸ”¥ <b>warpgate</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecurely manage and monitor access to servers and databases without requiring client-side software.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smart SSH, HTTPS, MySQL and PostgreSQL bastion host\nâ€¢ No client-side software required\nâ€¢ Session recording and replay via web UI\nâ€¢ Direct connection forwarding (not a jump host)\nâ€¢ Native 2FA and SSO support (TOTP & OpenID Connect)\n<br>\nðŸ“– <b>Summary:</b>\nWarpgate is a bastion host solution written in Rust that provides secure access to SSH, HTTPS, MySQL, and PostgreSQL servers. It features session recording, 2FA/SSO support, and a web UI for management, all within a single binary and without the need for client-side software.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/warp-tech/warpgate?embed=0\">View Project</a>\nâ€¢ <a href=\"https://warpgate.null.page?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c0e91a64de8f6872b5e497061cbede94d5a7e29ac5440e58eb6bd016a4c736af/warp-tech/warpgate",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 992393505,
        "content": "âœ¨ <b>LLMFeeder</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConverting web pages to clean Markdown format for use as context in Large Language Models (LLMs).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smart Content Extraction using Readability algorithm\nâ€¢ Dark/Light Mode with preference persistence\nâ€¢ Enhanced Image Processing with smart alt text generation\nâ€¢ One-Click content processing and copy to clipboard\n<br>\nðŸ“– <b>Summary:</b>\nLLMFeeder is a browser extension that simplifies the process of extracting and converting web page content into clean Markdown. It utilizes a readability algorithm for smart content extraction, offers dark/light mode theming, and provides enhanced image processing. The extension allows users to copy the converted Markdown to the clipboard or download it as a file, making it ideal for feeding web content to LLMs.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jatinkrmalik/LLMFeeder?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/34ad6c3101b73409d95d296b0bca5079ebf4d6c596531359fc3112afa924e953/jatinkrmalik/LLMFeeder",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 980173830,
        "content": "âœ¨ <b>kingfisher</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecret scanning and validation to prevent secrets from reaching production.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Live validation via cloud-provider APIs\nâ€¢ Supports scanning GitLab repos, S3 buckets, Docker images, Jira issues, and Slack messages\nâ€¢ Supports extracting and scanning compressed files for secrets\nâ€¢ Baseline mode to ignore known secrets and flag only new ones\nâ€¢ Language-aware detection for ~20 languages\n<br>\nðŸ“– <b>Summary:</b>\nKingfisher is a blazingly fast secret-scanning and validation tool built in Rust. It leverages Hyperscan and Tree-Sitter for performance and language-aware parsing. Kingfisher offers live validation, supports various targets like Git repositories, S3 buckets, and Docker images, and includes baseline management to ignore known secrets.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mongodb/kingfisher?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1ceb408a2709bcf15ee228ef69d7b1ac72e3982184350ae65af6b8749346c9ac/mongodb/kingfisher",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    }
]