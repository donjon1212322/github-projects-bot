[
    {
        "project_id": 997887280,
        "content": "ðŸ”¥ <b>lyricScribe</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFetching and displaying synced lyrics for music played through MPRIS compatible players.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Downloads synced lyrics\nâ€¢ Checks lyrics\nâ€¢ Displays synced lyrics for MPRIS compatible players\nâ€¢ Configuration options\nâ€¢ Hyprland floating lyrics support\n<br>\nðŸ“– <b>Summary:</b>\nlyricScribe is a Go script designed to fetch, check, and display synchronized lyrics for songs played using MPRIS-compatible music players. It allows users to easily view lyrics in sync with their music, and offers configuration options, including specific support for floating lyrics on Hyprland.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/user354015/lyricScribe?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/fc56783b78a76d9a4f73434c76eee347ebd26b86334c047f5e33f6a2df4cb239/user354015/lyricScribe",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 1030855297,
        "content": "ðŸ”¥ <b>spill</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTransient clipboard server for Windows\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Runs locally or on an external host (HTTP or HTTPS)\nâ€¢ Fully transient data storage\nâ€¢ Unicode support\nâ€¢ Minimize to tray\n<br>\nðŸ“– <b>Summary:</b>\nSpill is a transient clipboard server for Windows that allows users to copy and paste data between different machines. It supports both local and remote access via HTTP or HTTPS, and ensures that no data is permanently stored. The application also offers Unicode support and the ability to minimize to the system tray.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/inversepolarity/spill?embed=0\">View Project</a>\nâ€¢ <a href=\"http://ip.evenzero.in?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/536209edd005003d3c191d01b50dc95c92eba4aaa18550dd3d5890fea7774e7b/inversepolarity/spill",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1031499454,
        "content": "ðŸ’¡ <b>protector</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReal-time privacy protection for smart glasses applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Anonymizes faces (blur or ellipse masking)\nâ€¢ Manages consent (detects verbal consent)\nâ€¢ Real-time processing (720p 30fps)\nâ€¢ 100% offline operation\nâ€¢ Recording\n<br>\nðŸ“– <b>Summary:</b>\nThe 'protector' repository provides real-time privacy protection for smart glasses by filtering camera feeds. It anonymizes faces, manages consent through voice detection, and operates offline. The system offers developer-friendly features like easy camera replacement and an HTTP API for control, making it suitable for AI assistants, social apps, and enterprise applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrivacyIsAllYouNeed/protector?embed=0\">View Project</a>\nâ€¢ <a href=\"https://privacy.camera?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/42dc5a084618f1e7a7d9c309bbe841f69c2b8150fb5917c96fa3e65d7db5ec83/PrivacyIsAllYouNeed/protector",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1034662181,
        "content": "âœ¨ <b>wlgblock</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReplacing the standard Wayland password screen with a Gameboy emulator running a custom PokÃ©mon game, requiring the user to solve a puzzle within the game to unlock their session.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Replaces password screen with a Gameboy emulator.\nâ€¢ Uses a patched PokÃ©mon game as a session unlock mechanism.\n<br>\nðŸ“– <b>Summary:</b>\nThe wlgblock repository provides a unique way to lock and unlock a Wayland session by using a Gameboy emulator as a locker. It replaces the traditional password screen with a custom PokÃ©mon game, where the user must solve a puzzle to unlock their session. The project leverages the ext-session-lock-v1 protocol for secure locking and involves patching both a Gameboy emulator and a PokÃ©mon game to achieve this functionality.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/AdoPi/wlgblock?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2343b406ee4ceacb28aedcfb429c11d4ace08ed34e8e81856fa469c3597ba586/AdoPi/wlgblock",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 289516116,
        "content": "ðŸ’¡ <b>feroxbuster</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nContent discovery and enumeration of hidden or unlinked resources on web servers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Fast content discovery\nâ€¢ Recursive directory enumeration\nâ€¢ Forced browsing\nâ€¢ Wordlist-based scanning\n<br>\nðŸ“– <b>Summary:</b>\nFeroxbuster is a content discovery tool written in Rust that performs forced browsing to identify unlinked resources on web applications. It uses brute force combined with a wordlist to recursively search for hidden files and directories, helping to uncover sensitive information and potential vulnerabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/epi052/feroxbuster?embed=0\">View Project</a>\nâ€¢ <a href=\"https://epi052.github.io/feroxbuster-docs/docs/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/289516116/e4e2cc00-0560-11eb-888b-42dbdfc1c72c",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 314763206,
        "content": "ðŸš€ <b>urlhunter</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReconnaissance and intelligence gathering, particularly for bug bounty hunting and cyber threat intelligence.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Searches for URLs exposed via shortener services.\nâ€¢ Analyzes URLTeam's collections of brute-forced URLs.\nâ€¢ Supports keyword-based searching with single, multiple (AND logic), and regex options.\nâ€¢ Allows specifying date ranges for archive analysis.\n<br>\nðŸ“– <b>Summary:</b>\nurlhunter is a Go-based reconnaissance tool designed to discover URLs exposed through shortener services. It leverages the URLTeam's archive of brute-forced URLs, allowing users to search for specific keywords or regular expressions within specified date ranges. The tool is useful for security researchers and bug bounty hunters seeking to uncover hidden or sensitive information.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/utkusen/urlhunter?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/314763206/b8466780-2cfa-11eb-874f-c28a74c678b0",
        "platform": "telegram",
        "quality_score": 0.35
    },
    {
        "project_id": 4927517,
        "content": "ðŸ”¥ <b>arkime</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nNetwork analysis and security monitoring through full packet capture and indexing.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Full packet capture and storage in PCAP format\nâ€¢ Indexed access to network traffic\nâ€¢ Web interface for browsing, searching, and exporting PCAPs\nâ€¢ APIs for downloading PCAP data and JSON session data\nâ€¢ Scalable architecture for handling high traffic volumes\n<br>\nðŸ“– <b>Summary:</b>\nArkime is an open-source network analysis tool that captures and indexes network traffic for security monitoring and analysis. It stores data in standard PCAP format, provides a web interface for browsing and searching, and offers APIs for programmatic access. Arkime is designed to scale to handle large network environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/arkime/arkime?embed=0\">View Project</a>\nâ€¢ <a href=\"https://arkime.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/404f6866c947f0315f4fe2391a1e4c896161b02abb7e01a834d407ca7fd68350/arkime/arkime",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 303766501,
        "content": "ðŸ”¥ <b>tolgee-platform</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nWeb-based localization platform for developers and translators.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ In-context translation\nâ€¢ One-click screenshots for translation\nâ€¢ Translation directly on production environments\nâ€¢ True integrations via SDKs\n<br>\nðŸ“– <b>Summary:</b>\nTolgee is an open-source localization platform designed to streamline the translation process for developers and translators. It offers features like in-context translation, one-click screenshots, and production environment translation capabilities. Tolgee integrates seamlessly into applications through powerful SDKs, providing a truly embedded translation experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tolgee/tolgee-platform?embed=0\">View Project</a>\nâ€¢ <a href=\"https://tolgee.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0912d42d86463aaff7f7aba4c2e006fafa83c510b454c8bcb22eac762f867924/tolgee/tolgee-platform",
        "platform": "telegram",
        "quality_score": 0.85
    }
]