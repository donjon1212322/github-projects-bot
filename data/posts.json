[
    {
        "project_id": 512188824,
        "content": "âœ¨ <b>cdimage</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBurning visible images onto compact disc surfaces.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Burns visible pictures onto CD surfaces\nâ€¢ GUI with visual preview mode\nâ€¢ Coordinate conversion code based on unDEFER's implementation\nâ€¢ Ported to Qt6\n<br>\nðŸ“– <b>Summary:</b>\nCDImage is a C++ tool that allows users to burn visible pictures onto the surface of a compact disc. It provides a GUI with a visual preview mode and utilizes coordinate conversion code based on previous implementations. The project has been ported to Qt6 and offers a Windows binary build for ease of use.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/arduinocelentano/cdimage?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1bc4d19c2de38b52b28bf9862a9db4ddc747e5bc6e68eb7f9f204c3800b727f5/arduinocelentano/cdimage",
        "platform": "telegram",
        "quality_score": 0.15
    },
    {
        "project_id": 33242423,
        "content": "âœ¨ <b>flowblade</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nComposing movies from video, audio, and graphics files, with tools for cutting, filtering, and compositing.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multitrack non-linear video editing\nâ€¢ Image compositing with blend modes and wipes\nâ€¢ Extensive image and audio filters\nâ€¢ Media generators for animated texts and backgrounds\nâ€¢ Batch encoding and media re-linking\n<br>\nðŸ“– <b>Summary:</b>\nFlowblade is a multitrack non-linear video editor for Linux that allows users to create movies from various media types. It offers a range of features including advanced editing tools, image compositing, a wide array of filters, media generators, and support for batch encoding and USB shuttle control, making it suitable for both basic and advanced video editing tasks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jliljebl/flowblade?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f2a5a45f2f9e953979366e8031d7d656a426e1ff6574449107674b9bf8f9ff92/jliljebl/flowblade",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 454812611,
        "content": "ðŸ”¥ <b>Librum</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReading and managing e-book libraries with advanced features like note-taking and AI tooling.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ E-book reader\nâ€¢ Online library management\nâ€¢ Note-taking\nâ€¢ AI tooling\nâ€¢ Highlighting\n<br>\nðŸ“– <b>Summary:</b>\nLibrum is a C++ based application designed for reading and managing e-book libraries. It offers features such as note-taking, AI tooling, and highlighting, along with the ability to manage an online library accessible from any device. The application also provides free access to over 70,000 books and personal reading statistics.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Librum-Reader/Librum?embed=0\">View Project</a>\nâ€¢ <a href=\"https://librumreader.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/bf8259cabe5b73b29863ce3a3b8eeb6c5daab0a58ff5fd23671f5e9eb06d792c/Librum-Reader/Librum",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 531307134,
        "content": "ðŸ’¡ <b>UEVR</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling VR support for Unreal Engine games that lack native VR integration.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Full 6DOF and stereoscopic 3D support\nâ€¢ Native Unreal Engine stereo rendering\nâ€¢ Frontend GUI for process injection\nâ€¢ OpenVR and OpenXR runtime support\nâ€¢ Multiple rendering modes (Native Stereo, Synchronized Sequential, AFR)\n<br>\nðŸ“– <b>Summary:</b>\nUEVR is a universal VR mod for Unreal Engine 4 and 5 games, providing full 6DOF, stereoscopic 3D, and motion control support. It features a frontend GUI for easy injection, supports OpenVR and OpenXR runtimes, and offers multiple rendering modes to maximize compatibility. The mod also includes a plugin system that allows users to add motion controls and other features.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/praydog/UEVR?embed=0\">View Project</a>\nâ€¢ <a href=\"http://uevr.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7d7288928eb8ef806ea61ab65c3adf98f23d713d3135381699732b5908fc4a7d/praydog/UEVR",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 3884981,
        "content": "ðŸ”¥ <b>JUCE</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating cross-platform desktop and mobile applications, especially audio plug-ins and plug-in hosts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform C++ application framework\nâ€¢ Support for VST, VST3, AU, AUv3, AAX, and LV2 audio plug-ins\nâ€¢ Project management with Projucer or CMake\nâ€¢ Project export for Xcode, Visual Studio, Android Studio, and Linux Makefiles\n<br>\nðŸ“– <b>Summary:</b>\nJUCE is a comprehensive C++ framework designed for developing cross-platform applications. It simplifies the creation of desktop and mobile applications, with a strong focus on audio plug-ins supporting various formats like VST, AU, and AAX. Projects can be managed using either the Projucer tool or CMake, and exported to multiple IDEs and build systems.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/juce-framework/JUCE?embed=0\">View Project</a>\nâ€¢ <a href=\"https://juce.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8591570d3a433422836cd9027fb15739988922edfdac6a96b8c27dbf60e7630d/juce-framework/JUCE",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 98831796,
        "content": "ðŸš€ <b>FlyingCarpet</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFile transfer between devices on different operating systems without requiring a shared network or internet connection.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform file transfer (Android, iOS, Linux, macOS, Windows)\nâ€¢ Ad hoc WiFi transfer (no network infrastructure required)\nâ€¢ Bluetooth for transfer negotiation\n<br>\nðŸ“– <b>Summary:</b>\nFlying Carpet is a cross-platform file transfer tool that enables users to send and receive files between Android, iOS, Linux, macOS, and Windows devices using ad hoc WiFi or Bluetooth. It eliminates the need for a shared network or internet connection, making it ideal for situations where network infrastructure is unavailable or inconvenient. The application is available as standalone executables and installers for various platforms.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/spieglt/FlyingCarpet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/98831796/e7156988-0ec5-4a22-96c5-ed0bfa5543a7",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    }
]