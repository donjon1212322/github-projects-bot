[
    {
        "project_id": 887103582,
        "content": "ðŸš€ <b>objcurses</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPreviewing 3D models quickly in the terminal without needing a full 3D editor.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Render .obj files directly in terminal\nâ€¢ Real-time camera and directional light control\nâ€¢ Basic color support from .mtl material files\nâ€¢ HUD overlay for additional stats\n<br>\nðŸ“– <b>Summary:</b>\nobjcurses is a terminal-based 3D object viewer that renders .obj models using ASCII characters. It allows users to preview 3D files directly in the terminal, control the camera and lighting in real-time, and supports basic colors from .mtl files. This tool is useful for quickly previewing 3D models without launching a heavy editor.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/admtrv/objcurses?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ff114f6976b033b7c29fc24e1d2a4e75a6c79fb83a75cc38e9fd23870281b85b/admtrv/objcurses",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 976256008,
        "content": "ðŸ”¥ <b>Simple-Site-Monitor</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring website uptime, performance, and SSL certificate expiration.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time Website Monitoring\nâ€¢ SSL Certificate Monitoring\nâ€¢ Configurable Thresholds\nâ€¢ Webhook Notifications\nâ€¢ Advanced Log History\n<br>\nðŸ“– <b>Summary:</b>\nSimple Site Monitor is a web application designed to monitor website uptime, performance, and SSL certificate expiration. It provides a dashboard for real-time tracking, configurable thresholds, webhook notifications, and Docker support for easy deployment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/DarthTigerson/Simple-Site-Monitor?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/811ca91a57cb1183819254eed3774567e0347c04758e19825df54a2d44ab62c0/DarthTigerson/Simple-Site-Monitor",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 977113202,
        "content": "ðŸ”¥ <b>oci2git</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLayer Diffing\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Analyze Docker images and extract layer information\nâ€¢ Create a Git repository where each image layer is represented as a commit\nâ€¢ Support for empty layers as empty commits\nâ€¢ Complete metadata extraction to Markdown format\nâ€¢ Extensible architecture for supporting different container engines\n<br>\nðŸ“– <b>Summary:</b>\nOCI2Git converts container images into Git repositories, representing each layer as a commit. This enables users to leverage Git's powerful features like diffing, blame, and log to analyze and track changes within container images. The primary use case is layer diffing, allowing engineers to easily identify changes between layers for troubleshooting and understanding image evolution.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Virviil/oci2git?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/097c941a5b9aeda9fe7260c2b547e2e7b609c441d85213e95d06248f0feff8fb/Virviil/oci2git",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 227265548,
        "content": "ðŸ’¡ <b>gluesql</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a versatile SQL database library for developers, supporting both SQL and AST Builder, and handling structured and unstructured data with various storage options.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multi-Model Database Engine as a Library\nâ€¢ Supports SQL and AST Builder\nâ€¢ Supports Structured and Unstructured Data with Schema Flexibility\n<br>\nðŸ“– <b>Summary:</b>\nGlueSQL is a Rust library that provides a multi-model database engine. It supports both SQL and an AST Builder, allowing developers to interact with the database using either method. GlueSQL is designed to be flexible, supporting structured and unstructured data, custom storage systems, and integration with both Rust and JavaScript environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gluesql/gluesql?embed=0\">View Project</a>\nâ€¢ <a href=\"https://gluesql.org/docs?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1b276eb0c2fc3ff92bc0003e8e7d8c549ac7cc1527df7218cf719a90a796a833/gluesql/gluesql",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 515368123,
        "content": "ðŸŒŸ <b>burn</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDeveloping and deploying deep learning models with a focus on performance and cross-platform compatibility.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automatic kernel fusion\nâ€¢ Asynchronous execution\nâ€¢ Thread-safe building blocks\nâ€¢ Cross-platform support (CUDA, Metal, ROCm, Vulkan, WebGPU)\nâ€¢ Flexibility, efficiency, and portability\n<br>\nðŸ“– <b>Summary:</b>\nBurn is a deep learning framework written in Rust that prioritizes flexibility, efficiency, and portability. It achieves high performance through features like automatic kernel fusion and asynchronous execution. The framework's thread-safe design and cross-platform support enable multi-device training and deployment on various backends, including CUDA, Metal, and WebGPU.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tracel-ai/burn?embed=0\">View Project</a>\nâ€¢ <a href=\"https://burn.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f6f45c03fc1be811ac6334603e34b4dce57de6e986622e986b6d87a41e4a668b/tracel-ai/burn",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 316912509,
        "content": "ðŸ’¡ <b>ggwave</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCommunicating small amounts of data between air-gapped devices using sound.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Data-over-sound communication\nâ€¢ FSK-based transmission protocol\nâ€¢ Error correction codes (ECC)\nâ€¢ Platform agnostic audio backend\nâ€¢ Serverless one-to-many broadcast\n<br>\nðŸ“– <b>Summary:</b>\nggwave is a tiny data-over-sound library that enables communication between devices using audio signals. It utilizes FSK modulation and error correction to transmit data, making it suitable for serverless broadcasting and IoT applications. The library is platform-agnostic, allowing integration with various audio backends.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ggerganov/ggwave?embed=0\">View Project</a>\nâ€¢ <a href=\"https://youtu.be/Zcgf77T71QM?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/316912509/6dc87c80-52a1-11eb-97ea-3dbba2a5fccb",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    },
    {
        "project_id": 730033775,
        "content": "ðŸ’¡ <b>star-vector</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating Scalable Vector Graphics (SVG) code from images and text using a multimodal vision-language model.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Image to SVG generation\nâ€¢ Text to SVG generation\nâ€¢ Multimodal vision-language model for SVG code generation\n<br>\nðŸ“– <b>Summary:</b>\nStarVector is a multimodal vision-language model designed for generating SVG code. It transforms vectorization into a code generation task, enabling both image-to-SVG and text-to-SVG generation. The model leverages a vision-language modeling architecture to process visual and textual inputs, producing high-quality SVG code.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/joanrod/star-vector?embed=0\">View Project</a>\nâ€¢ <a href=\"https://starvector.github.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2fd698e04436528793f98c53f593704d6b18565705505df641da0c2844ae8afc/joanrod/star-vector",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    },
    {
        "project_id": 228145865,
        "content": "âœ¨ <b>KitHack</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating the setup of penetration testing tools and generating multi-platform backdoors.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automated installation of penetration testing tools\nâ€¢ Multi-platform backdoor generation using Metasploit Framework\nâ€¢ Android application infection\nâ€¢ Ngrok integration for TCP connections\n<br>\nðŸ“– <b>Summary:</b>\nKitHack is a framework designed to automate the process of downloading and installing various penetration testing tools. It also features a backdoor generator that leverages the Metasploit Framework for creating multi-platform payloads. The tool supports infecting legitimate Android applications and utilizes Ngrok for establishing TCP connections.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/AdrMXR/KitHack?embed=0\">View Project</a>\nâ€¢ <a href=\"https://adrmxr.github.io/KitHack/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/228145865/4ee48380-db65-11ea-9341-cb9f8b488ea2",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 375081980,
        "content": "ðŸŒŸ <b>osint_stuff_tool_collection</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCollection of online tools for Open Source Intelligence (OSINT) investigations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Maps, Geolocation and Transport tools\nâ€¢ Social Media OSINT tools\nâ€¢ Domain/IP/Links analysis tools\nâ€¢ Image Search and Identification tools\nâ€¢ Cryptocurrency investigation tools\n<br>\nðŸ“– <b>Summary:</b>\nThis repository is a curated collection of hundreds of online tools designed to assist in Open Source Intelligence (OSINT) investigations. It categorizes tools across various domains like social media, geolocation, domain analysis, and more. While some tools may be outdated, the repository serves as a valuable resource for discovering and exploring potential OSINT resources.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/cipher387/osint_stuff_tool_collection?embed=0\">View Project</a>\nâ€¢ <a href=\"https://cybdetective.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/71e65828b01153fe329596ea22be8cbfeb074e652390deb954cc1b469a2028d2/cipher387/osint_stuff_tool_collection",
        "platform": "telegram",
        "quality_score": 0.6
    }
]