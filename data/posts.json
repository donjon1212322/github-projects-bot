[
    {
        "project_id": 999831233,
        "content": "âœ¨ <b>raycast-linux</b> | Svelte\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA Raycast-inspired application launcher for Linux systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Extensible Command Palette\nâ€¢ Extension Support\nâ€¢ Powerful Calculator\nâ€¢ Clipboard History\nâ€¢ Snippets\n<br>\nðŸ“– <b>Summary:</b>\nRaycast for Linux is an open-source application launcher designed to bring the functionality of Raycast to Linux users. It offers features such as an extensible command palette, extension support, a powerful calculator, clipboard history, snippets, and AI integration, aiming to provide a streamlined and efficient way to interact with your system.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ByteAtATime/raycast-linux?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0f526102e29719f5882ec938215cf511a67d5c74c37ed963dad11495fe9b4a94/ByteAtATime/raycast-linux",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 583641182,
        "content": "ðŸ”¥ <b>favbox</b> | Vue\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnhances and simplifies bookmark management locally without cloud storage or third-party services.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Syncs with browser profile\nâ€¢ No data sent to third-party services\nâ€¢ Minimalist, clean UI\nâ€¢ Tag support for easy organization\nâ€¢ Advanced search, sorting, and filtering\n<br>\nðŸ“– <b>Summary:</b>\nFavBox is a local-first browser extension for enhanced bookmark management. It provides features like tag support, advanced search, duplicate detection, and local notes, all while keeping your data private and synced with your browser profile. It extends the browser's native bookmarking features without replacing them.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dd3v/favbox?embed=0\">View Project</a>\nâ€¢ <a href=\"https://chrome.google.com/webstore/detail/favbox/eangbddipcghohfjefjmfihcjgjnnemj?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/583641182/30395700-ac76-4b66-9416-2da389baca25",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 985046164,
        "content": "ðŸŒŸ <b>telepipe</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSending messages and files to Telegram channels, chats, or groups directly from the command line, enabling scripting and automation of notifications and alerts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Send messages to Telegram from the command line\nâ€¢ File upload support\nâ€¢ Video streaming support\nâ€¢ Message formatting (Markdown, HTML)\nâ€¢ Scheduled message delivery\n<br>\nðŸ“– <b>Summary:</b>\nTelepipe is a command-line utility that allows users to send messages and files to Telegram directly from their terminal. It supports features like file uploads, video streaming, message formatting, and scheduled delivery, making it suitable for scripting, monitoring, and automated notifications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Linuxmaster14/telepipe?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f4118c7ed9ee4424938bcd34ad46b55ddf2e2983e73e3e3b0958e901f1a7df81/Linuxmaster14/telepipe",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 657049902,
        "content": "âœ¨ <b>hub</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-integrated device hub for controlling and interacting with custom-built physical devices using natural language via LLM hosts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Privacy-focused distributed architecture\nâ€¢ Web application interface accessible on any device\nâ€¢ AI-integration via Model Context Protocol (MCP)\nâ€¢ Docker-based deployment for cloud readiness\n<br>\nðŸ“– <b>Summary:</b>\nMerliot Device Hub is an AI-integrated platform that allows users to control custom-built devices using natural language. It emphasizes privacy through a distributed architecture and offers a web-based interface accessible from any device. The hub supports integration with LLMs via the Model Context Protocol and can be deployed using Docker for cloud readiness.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/merliot/hub?embed=0\">View Project</a>\nâ€¢ <a href=\"https://merliot.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8fea7b4f10f09a801a35853e3b7231c4a5d7b7c5015a5f09d9e01d2940a21d5c/merliot/hub",
        "platform": "telegram",
        "quality_score": 0.4
    },
    {
        "project_id": 895202100,
        "content": "ðŸ’¡ <b>everwilds</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLearning resource for developers interested in MMORPG networking and netcode architecture.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Client-server architecture\nâ€¢ Character movement with walk animation\nâ€¢ Basic combat system\nâ€¢ Simple leveling system\nâ€¢ Character nameplates toggle\n<br>\nðŸ“– <b>Summary:</b>\nEverwilds is a prototype MMORPG designed as a learning resource. It demonstrates key aspects of MMORPG architecture, particularly networking and player movement synchronization, using techniques similar to those found in World of Warcraft. The project includes a client-server architecture, character movement, combat, leveling, and a chat system.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nickyvanurk/everwilds?embed=0\">View Project</a>\nâ€¢ <a href=\"http://everwilds.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8e23adaf82be98a958c68bf228277908ac9ec1b9f1817333cdd9b8f0fedea15b/nickyvanurk/everwilds",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 667568594,
        "content": "ðŸ”¥ <b>quik</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReplacement for the stock Android messaging app.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Scheduled Messages\nâ€¢ Message Backup\nâ€¢ Speech to Text and Text to Speech\nâ€¢ Message Blocking and Archiving\nâ€¢ Voice Messages\n<br>\nðŸ“– <b>Summary:</b>\nQUIK is an open-source Android SMS messenger app that aims to provide a more beautiful and feature-rich experience than the stock messaging app. It offers features such as scheduled messages, message backup, speech-to-text integration, message blocking, voice messages, and support for various attachments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/octoshrimpy/quik?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7606506f1f3b6cc2714bb3a7766c6c18b11bac17cb792d8ddcf546ab9737391b/octoshrimpy/quik",
        "platform": "telegram",
        "quality_score": 0.85
    }
]