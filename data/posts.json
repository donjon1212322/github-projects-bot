[
    {
        "project_id": 951646417,
        "content": "âœ¨ <b>ios-simulator-mcp</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuality Assurance tasks via MCP tool calls, allowing AI assistants to validate UI consistency and behavior after feature implementation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Get the ID of the currently booted iOS simulator\nâ€¢ Describe all accessibility elements on screen\nâ€¢ Tap on screen coordinates\nâ€¢ Input text\nâ€¢ Swipe between coordinates\n<br>\nðŸ“– <b>Summary:</b>\nThe iOS Simulator MCP Server enables interaction with iOS simulators through a Model Context Protocol. It provides functionalities to retrieve simulator information, control UI interactions (tapping, swiping, text input), inspect UI elements, take screenshots, and integrate with AI agents for visual feedback, primarily used for automated QA testing and validation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/joshuayoes/ios-simulator-mcp?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/95b178f153b22313d94d337138feb25ac9a68f131d7a0cfbb2632b2e9306e12b/joshuayoes/ios-simulator-mcp",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1028470147,
        "content": "ðŸ”¥ <b>FSB</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered browser automation for tasks like web testing, data entry, research, social media automation, and e-commerce activities.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multi-Model AI Support (Grok, Gemini, and more)\nâ€¢ Natural Language Interface\nâ€¢ Smart DOM Analysis\nâ€¢ Comprehensive Automation (click, type, scroll, etc.)\nâ€¢ CAPTCHA Integration\n<br>\nðŸ“– <b>Summary:</b>\nFSB is a Chrome extension that provides AI-powered browser automation through a natural language interface. It supports multiple AI models, analyzes webpage structure, and automates tasks like form filling and navigation. The primary use case is to streamline repetitive browsing tasks and automate workflows for web testing, data entry, research, and more.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/LakshmanTurlapati/FSB?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a0fccc565943e7e87b007c8ee328fc352a02f1cc5e2cd66147f43b3a3fe7c075/LakshmanTurlapati/FSB",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 628160489,
        "content": "ðŸŒŸ <b>SimpMusic</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA FOSS YouTube Music client for Android with features from Spotify, Musixmatch, SponsorBlock, and ReturnYouTubeDislike.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Play music from YouTube Music or YouTube for free, without ads and in the background\n<br>\nðŸ“– <b>Summary:</b>\nSimpMusic is a free and open-source Android music player that utilizes YouTube Music as its backend. It offers a variety of features, including ad-free playback, background play, offline support, synced lyrics, and integration with services like Musixmatch, Spotify, SponsorBlock, and Return YouTube Dislike. The app aims to provide a comprehensive music listening experience by combining the vast library of YouTube Music with the convenience of a dedicated music player.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/maxrave-dev/SimpMusic?embed=0\">View Project</a>\nâ€¢ <a href=\"https://simpmusic.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/628160489/d1caf378-9996-45bd-aad8-360494ce98be",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 33242423,
        "content": "ðŸ’¡ <b>flowblade</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and editing videos from various media sources, applying effects, and producing a final video output.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multitrack non-linear video editing\nâ€¢ Image compositing with blend modes and wipes\nâ€¢ Extensive image and audio filters\nâ€¢ Media generator plugin framework\nâ€¢ Batch encoding and media re-linking\n<br>\nðŸ“– <b>Summary:</b>\nFlowblade is a multitrack non-linear video editor for Linux that allows users to compose movies from video, audio, and graphics files. It offers a range of editing tools, image compositing features, and audio/video filters. Flowblade supports various media formats and provides advanced features like media generation, batch encoding, and USB shuttle control.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jliljebl/flowblade?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/87cca8a157cefa7ad0640edb947376d7a390d5ae498ed7783cde6be9ea6613ad/jliljebl/flowblade",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 988821906,
        "content": "ðŸš€ <b>winhider</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nHiding sensitive or distracting windows during screen sharing sessions while still being able to use them.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Hides windows from screensharing\nâ€¢ Hides windows from taskbar and taskswitcher (Alt-Tab)\nâ€¢ Allows normal use of hidden windows\nâ€¢ GUI and CLI interface\nâ€¢ Winget installation support\n<br>\nðŸ“– <b>Summary:</b>\nWinHider is a C++ application designed to hide specific windows from being visible during screen sharing sessions and from the taskbar/taskswitcher. This allows users to maintain privacy and reduce distractions while still being able to interact with the hidden applications. It offers both a graphical user interface (GUI) and a command-line interface (CLI) for managing window visibility.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aamitn/winhider?embed=0\">View Project</a>\nâ€¢ <a href=\"http://winhider.bitmutex.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c1c9ff7f26b04b433bc22418c4f0a5385c88699b74a3b3865fb40732072cee63/aamitn/winhider",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 99286908,
        "content": "ðŸŒŸ <b>Addon</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomatically remove tracking elements from URLs to protect user privacy.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Removes tracking from URLs automatically\nâ€¢ Blocks some common ad domains (optional)\nâ€¢ Built-in tool to clean up multiple URLs at once\n<br>\nðŸ“– <b>Summary:</b>\nClearURLs is a browser extension that automatically removes tracking elements from URLs, enhancing user privacy while browsing. It supports various browsers and offers features like blocking ad domains, cleaning multiple URLs, preventing tracking injection, and providing a context menu option for copying clean links. The extension aims to provide a cleaner and more private browsing experience by removing unnecessary tracking parameters from web addresses.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ClearURLs/Addon?embed=0\">View Project</a>\nâ€¢ <a href=\"http://docs.clearurls.xyz?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/677703cbec589fe2c473cd7fa16f2e8c57c0b04124340c00a7ce4f73504adbef/ClearURLs/Addon",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    }
]