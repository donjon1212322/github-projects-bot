[
    {
        "project_id": 951534260,
        "content": "ðŸ’¡ <b>rf-detr</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nObject detection and instance segmentation in real-time applications, particularly where speed and accuracy are critical.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time object detection\nâ€¢ Instance segmentation\nâ€¢ Transformer-based architecture\nâ€¢ SOTA performance on COCO\nâ€¢ Fine-tuning capabilities\n<br>\nðŸ“– <b>Summary:</b>\nRF-DETR is a real-time object detection and instance segmentation model architecture developed by Roboflow. It achieves state-of-the-art performance on the COCO benchmark and is designed for fine-tuning, offering a balance between speed and accuracy for real-time applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/roboflow/rf-detr?embed=0\">View Project</a>\nâ€¢ <a href=\"https://rfdetr.roboflow.com/1.3.0?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5b592392f92684ab9c78567c80da9b88502a889b88feb744124fb524f73c288e/roboflow/rf-detr",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 838253246,
        "content": "ðŸŒŸ <b>BitNet</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEfficient inference of 1-bit LLMs on CPUs and GPUs.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Optimized kernels for 1-bit LLM inference\nâ€¢ Support for CPU and GPU (NPU support coming)\nâ€¢ Significant speedups on ARM and x86 CPUs\nâ€¢ Reduced energy consumption\nâ€¢ Ability to run large models (e.g., 100B) on a single CPU\n<br>\nðŸ“– <b>Summary:</b>\nThe repository `bitnet.cpp` is an inference framework optimized for 1-bit Large Language Models (LLMs) like BitNet b1.58. It provides optimized kernels for fast and lossless inference on CPUs and GPUs, achieving significant speedups and energy reductions compared to standard implementations, enabling the deployment of large language models on local devices.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/microsoft/BitNet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c8dc999d8cc03e7d8f8d540333309db1b3af535903b2b52109287db470f7722b/microsoft/BitNet",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 1067446359,
        "content": "ðŸŒŸ <b>youtube-to-blog</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTransforming YouTube video content into written blog posts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ One-Click Conversion\nâ€¢ AI-Powered (Gemini 2.5 Flash)\nâ€¢ Professional Formatting (MDX)\nâ€¢ Modern UI (Dark/Light Mode)\nâ€¢ Persistent Storage\n<br>\nðŸ“– <b>Summary:</b>\nThe YouTube to Blog application automatically converts YouTube videos into well-structured blog posts using AI. It extracts video metadata and transcripts, then uses Google's Gemini 2.5 Flash to transform the content into professional MDX blog posts, which are then saved to a database.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/TheOrcDev/youtube-to-blog?embed=0\">View Project</a>\nâ€¢ <a href=\"https://youtube-to-blog-brown.vercel.app?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1efe9beb4e9ed9f7d476276e32dfcc5594c520ee322645ce12c67aa6c88ffca2/TheOrcDev/youtube-to-blog",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1034478597,
        "content": "âœ¨ <b>open-lovable</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRapidly creating React applications from existing websites using AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Website cloning to React app\nâ€¢ AI-powered code generation\nâ€¢ Uses Firecrawl API\nâ€¢ Support for multiple LLMs (Anthropic, OpenAI, Gemini, Groq)\nâ€¢ Optional fast apply using MorphLLM\n<br>\nðŸ“– <b>Summary:</b>\nOpen Lovable allows users to clone and recreate websites as modern React applications using AI. It leverages AI to generate React code from existing websites, providing a quick way to modernize or replicate web applications. The project is associated with Firecrawl and Lovable.dev, suggesting a connection to a larger cloud-based solution.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/firecrawl/open-lovable?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/71278b77900f563cd7a6ab1efc003deed3dfec1bd7a1db43d2a1e49266f1e23d/firecrawl/open-lovable",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1016411413,
        "content": "ðŸš€ <b>omnara</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a central command center to interact with and monitor AI agents, facilitating real-time collaboration and control.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time visibility into AI agent activity\nâ€¢ Unified dashboard for web and mobile\nâ€¢ CLI integration for Claude Code and Codex CLI\nâ€¢ n8n integration for human-in-the-loop workflows\nâ€¢ Headless mode for dashboard-only interaction\n<br>\nðŸ“– <b>Summary:</b>\nOmnara is a platform that provides a unified interface to interact with AI agents like Claude Code and Codex CLI from various devices (terminal, web, and mobile). It allows users to monitor agent activity in real-time and respond to agent requests from a central dashboard, enhancing collaboration with AI agents.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/omnara-ai/omnara?embed=0\">View Project</a>\nâ€¢ <a href=\"https://omnara.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0f2077f556784c747cd3d64b24b45f2b02e245947320c8914c83fbd9626cd82b/omnara-ai/omnara",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 119336293,
        "content": "ðŸ’¡ <b>yn</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating, editing, and managing Markdown documents with advanced features and extensibility.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Monaco editor kernel for VSCode-like experience\nâ€¢ Version control\nâ€¢ Applet embedding\nâ€¢ Runnable code blocks\nâ€¢ PlantUML and Drawio support\n<br>\nðŸ“– <b>Summary:</b>\nYank Note is a highly extensible Markdown editor designed for productivity. It offers features like version control, AI copilot integration, mind map support, document encryption, code snippet execution, an integrated terminal, chart embedding, HTML applets, Reveal.js presentations, plugin support, and macro replacement, aiming to provide a comprehensive Markdown editing experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/purocean/yn?embed=0\">View Project</a>\nâ€¢ <a href=\"https://yank-note.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a8f516e36bcf165dc2fa3ab5148e3ac8de0428f62b5112cddf0d3ae157c4beab/purocean/yn",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 924637527,
        "content": "ðŸš€ <b>zen</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPersonal note-taking and knowledge management\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Single Go binary or Docker Compose deployment\nâ€¢ Low resource usage\nâ€¢ Markdown files with SQLite database\nâ€¢ Flexible tags for organization\nâ€¢ Full-text search with BM25 ranking\n<br>\nðŸ“– <b>Summary:</b>\nZen is a self-hosted notes application built with Go, storing notes as Markdown files within a SQLite database. It offers full-text search, low resource usage, and features like tagging, templates, and experimental canvas-based organization.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/sheshbabu/zen?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.sheshbabu.com/zen/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/924637527/b8017903-ecbc-4421-83f5-eb15e07f1f8e",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 645330651,
        "content": "ðŸš€ <b>AdGuardian-Term</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring and analyzing network traffic and DNS queries handled by an AdGuard Home instance.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time Query Monitoring\nâ€¢ Block and Allow Stats\nâ€¢ Historical Query Counts\nâ€¢ Filter Lists\nâ€¢ Top Domain Statistics\n<br>\nðŸ“– <b>Summary:</b>\nAdGuardian-Term is a terminal-based application written in Rust for real-time monitoring and statistics of an AdGuard Home instance. It provides features such as real-time query monitoring, block/allow statistics, historical query counts, filter list information, and top domain statistics, offering a lightweight and safe way to keep an eye on network traffic.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Lissy93/AdGuardian-Term?embed=0\">View Project</a>\nâ€¢ <a href=\"https://adguardian.as93.net?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/645330651/795e1d85-9d3d-44c7-a115-a385b4142944",
        "platform": "telegram",
        "quality_score": 0.85
    }
]