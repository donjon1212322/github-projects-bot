[
    {
        "project_id": 1027461827,
        "content": "âœ¨ <b>vicinae</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFast, keyboard-first access to system actions for developers and power users.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Application launching and information retrieval\nâ€¢ File indexing with full-text search\nâ€¢ Emoji picker with custom keywords\nâ€¢ Calculator with unit and currency conversion\nâ€¢ Encrypted clipboard history tracker\n<br>\nðŸ“– <b>Summary:</b>\nVicinae is a high-performance, native launcher for Linux built with C++ and Qt. It provides a fast, keyboard-first interface for accessing system actions, launching applications, and performing common tasks. Vicinae also offers Raycast compatibility, allowing users to leverage existing extensions with minimal modification.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vicinaehq/vicinae?embed=0\">View Project</a>\nâ€¢ <a href=\"https://docs.vicinae.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b0debbe4726ca38e5d06c46a6c0b96fa577b2e085577c2d23cc66dd6709e540a/vicinaehq/vicinae",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 81095334,
        "content": "âœ¨ <b>save-images</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDownloading all images from a webpage, including those in nested iframes, with customizable filtering options.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Detects images in nested iframes\nâ€¢ Filters images by size, dimension, URL, or type\nâ€¢ Finds images in links, background scripts, and CSS files\n<br>\nðŸ“– <b>Summary:</b>\nThe 'save-images' repository provides a browser extension that allows users to download all images from a webpage. It detects images even within nested iframes and offers filtering options based on file size, dimensions, URL, and file type. The extension also finds images in links, background scripts, and CSS files, presenting them in a gallery view before downloading.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/belaviyo/save-images?embed=0\">View Project</a>\nâ€¢ <a href=\"https://webextension.org/listing/save-images.html?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3c1bb3e915ab8161f32e4a980d090fc717920c85846420819eecfe7bffb6d5e4/belaviyo/save-images",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1032305700,
        "content": "ðŸ”¥ <b>term-shdw</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating an interactive terminal comet/shadow effect for aesthetic purposes and customization.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Interactive comet head following mouse motion\nâ€¢ Fading tail with color interpolation\nâ€¢ Light aura surrounding the head\nâ€¢ Twinkling stars\nâ€¢ Command-line options for personalization\n<br>\nðŸ“– <b>Summary:</b>\nTerm-shdw is a Python CLI tool that generates an interactive comet effect in the terminal, following mouse movements and displaying a fading tail, aura, and twinkling stars. It's designed for lightweight customization through command-line options and is intended for users who want to enhance their terminal's visual appeal.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/DaarcyDev/term-shdw?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6338fd09b92783c4e2a520a21ea0a8dad5bebe22fdcd7adf83a60e8168dc73de/DaarcyDev/term-shdw",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1029317220,
        "content": "ðŸš€ <b>brs-xss</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCross-Site Scripting (XSS) vulnerability scanning for security professionals and penetration testers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Context-Aware Scanning\nâ€¢ WAF Detection & Bypass\nâ€¢ Intelligent Classification\nâ€¢ Professional Reporting\nâ€¢ Multi-Language Support\n<br>\nðŸ“– <b>Summary:</b>\nBRS-XSS is a command-line XSS scanner designed for security professionals. It offers features like context-aware scanning, WAF detection & bypass, intelligent classification, and professional reporting. The tool supports asynchronous scanning, web crawling, and DOM XSS analysis, making it a comprehensive solution for identifying XSS vulnerabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/EPTLLC/brs-xss?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/178e09624c4c7f19cd90db1d579d0654925248590940129ff2690965c455cae9/EPTLLC/brs-xss",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 910418754,
        "content": "ðŸš€ <b>nanobrowser</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered web automation using multi-agent workflows.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multi-agent System\nâ€¢ Interactive Side Panel\nâ€¢ Task Automation\nâ€¢ Follow-up Questions\nâ€¢ Conversation History\n<br>\nðŸ“– <b>Summary:</b>\nNanobrowser is an open-source Chrome extension for AI-powered web automation. It allows users to run multi-agent workflows using their own LLM API keys, offering a free and privacy-focused alternative to tools like OpenAI Operator. The extension supports multiple LLM providers and features an interactive side panel for real-time task management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nanobrowser/nanobrowser?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/bc7bc8bfe6f19177e689137c9f258023effa0297c7650f06af07886259c39351/nanobrowser/nanobrowser",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    },
    {
        "project_id": 438128602,
        "content": "ðŸŒŸ <b>lotusdb</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nKey-value data storage\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Combine the advantages of LSM and B+ tree\nâ€¢ Fast read/write performance\nâ€¢ Much lower read and space amplification than typical LSM\n<br>\nðŸ“– <b>Summary:</b>\nLotusDB is a high-performance key-value store written in Go. It combines the strengths of both LSM trees and B+ trees to achieve fast read/write speeds and reduced space amplification. It is designed as an optimized alternative to existing key-value stores like Badger and Bolt.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/lotusdblabs/lotusdb?embed=0\">View Project</a>\nâ€¢ <a href=\"https://lotusdblabs.github.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/dc46975cd3d8be8f92ba6e0a9b756c5919e22b5dcb6bb08c6cc34091bfabe99b/lotusdblabs/lotusdb",
        "platform": "telegram",
        "quality_score": 0.6
    }
]