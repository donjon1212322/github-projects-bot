[
    {
        "project_id": 574716825,
        "content": "ðŸ’¡ <b>WiFi-password-stealer</b> | PowerShell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDemonstrating keystroke injection techniques for security research and penetration testing to extract WiFi credentials from target systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Keystroke injection for automated command execution\nâ€¢ WiFi data exfiltration (SSID and password)\nâ€¢ Windows exploit via email (SMTP)\nâ€¢ Linux exploit via USB storage\nâ€¢ Rubber Ducky attack implementation\n<br>\nðŸ“– <b>Summary:</b>\nThe WiFi-password-stealer repository provides tools to extract stored WiFi data (SSID and password) from Windows and Linux systems using keystroke injection. It demonstrates how a device, like a Raspberry Pi Pico configured as a Rubber Ducky, can be used to automate data exfiltration, simulating a USB-based attack.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/AleksaMCode/WiFi-password-stealer?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/93c74d06b45eda7b45aa317261eb31c722936a05b52e441d22ca39eaf3db33c5/AleksaMCode/WiFi-password-stealer",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 1003531567,
        "content": "ðŸ’¡ <b>reddit2shorts</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated creation of YouTube Shorts from Reddit content.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generates YouTube Shorts from Reddit posts\nâ€¢ Supports random post selection or specific post ID\nâ€¢ Configurable number of comments to include\nâ€¢ Text-to-speech functionality (Google TTS)\nâ€¢ Video upload to YouTube or TikTok\n<br>\nðŸ“– <b>Summary:</b>\nThe reddit2shorts repository is a TypeScript-based tool that automates the creation of YouTube Shorts from Reddit posts. It extracts content from Reddit, generates videos, and optionally uploads them to YouTube or TikTok, utilizing text-to-speech and background media.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yogeshdofficial/reddit2shorts?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b5cc17eee0330d32f14c6a57f9ace41e703f6d05c333455976e2a4eeba0576f0/yogeshdofficial/reddit2shorts",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 771350543,
        "content": "ðŸŒŸ <b>WrenAI</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSimplifying data interaction and analysis by enabling users to query databases and generate insights using natural language, without requiring SQL knowledge.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Natural language to SQL conversion\nâ€¢ AI-generated insights and summaries\nâ€¢ Automated chart creation\nâ€¢ Semantic layer for accuracy and governance\nâ€¢ Embeddable API for custom applications\n<br>\nðŸ“– <b>Summary:</b>\nWren AI is an open-source GenBI agent that allows users to query databases using natural language. It generates SQL queries (Text-to-SQL), creates charts (Text-to-Chart), and provides AI-powered insights, aiming to simplify business intelligence tasks.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Canner/WrenAI?embed=0\">View Project</a>\nâ€¢ <a href=\"https://getwren.ai/oss?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0c6e99873d1eece0343c709ec9770078b0795a4a5855ab98b9b7ba1545eff6e6/Canner/WrenAI",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 746689243,
        "content": "ðŸš€ <b>kafka-ui</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring and managing Apache Kafka clusters.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Topic Insights\nâ€¢ Configuration Wizard\nâ€¢ Multi-Cluster Management\nâ€¢ Metrics Dashboard\nâ€¢ Kafka Brokers Overview\n<br>\nðŸ“– <b>Summary:</b>\nKafka UI is an open-source web interface designed for monitoring and managing Apache Kafka clusters. It provides a user-friendly dashboard to track key metrics such as brokers, topics, partitions, production, and consumption, enabling users to observe data flows, troubleshoot issues, and optimize performance.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kafbat/kafka-ui?embed=0\">View Project</a>\nâ€¢ <a href=\"https://kafbat.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/746689243/b6715355-a1a2-4537-863c-a33b8a26a0c8",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1021753449,
        "content": "ðŸ”¥ <b>his</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEfficiently accessing and re-executing commands from the command-line history.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Command history\nâ€¢ Icons and colors for visual enhancement\nâ€¢ Cross-platform compatibility (Windows and GNU/Linux)\nâ€¢ Fuzzy search\n<br>\nðŸ“– <b>Summary:</b>\n`his` is a command history utility designed for both Windows and GNU/Linux operating systems. It enhances the command-line experience by providing a visually appealing and efficient way to access and execute previously used commands, incorporating features like icons and colors for improved usability.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/terroo/his?embed=0\">View Project</a>\nâ€¢ <a href=\"https://youtu.be/gILIsK3MiGQ?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6e8284de975eae555a6d4a110d1a77a72df161f08f17383c8104d84c9bf255f5/terroo/his",
        "platform": "telegram",
        "quality_score": 0.4
    },
    {
        "project_id": 835103731,
        "content": "ðŸ’¡ <b>colanode</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTeam collaboration and knowledge management with a focus on data privacy and local-first functionality.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-Time Chat\nâ€¢ Rich Text Pages\nâ€¢ Customizable Databases\nâ€¢ File Management\nâ€¢ Local-first workflow with SQLite database\n<br>\nðŸ“– <b>Summary:</b>\nColanode is an open-source, local-first collaboration workspace designed as an alternative to Slack and Notion. It prioritizes data privacy and control by allowing users to self-host their data while providing real-time chat, rich text pages, customizable databases, and file management capabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/colanode/colanode?embed=0\">View Project</a>\nâ€¢ <a href=\"https://colanode.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0644a13c284c68ae48a456d70ac6ee1505a3c2986f0a316cee4693a61b03d84a/colanode/colanode",
        "platform": "telegram",
        "quality_score": 0.85
    }
]