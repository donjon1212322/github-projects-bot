[
    {
        "project_id": 196274912,
        "content": "ðŸ”¥ <b>IronRDP</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nImplementing the Microsoft Remote Desktop Protocol (RDP) in Rust.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uncompressed raw bitmap support\nâ€¢ Interleaved Run-Length Encoding (RLE) Bitmap Codec support\nâ€¢ RDP 6.0 Bitmap Compression support\nâ€¢ Microsoft RemoteFX (RFX) support\nâ€¢ Asynchronous I/O RDP client example\n<br>\nðŸ“– <b>Summary:</b>\nIronRDP is a collection of Rust crates that provide an implementation of the Microsoft Remote Desktop Protocol (RDP), with a focus on security. It offers support for various video codecs and provides examples of both asynchronous and synchronous RDP clients, showcasing its versatility in different application scenarios.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Devolutions/IronRDP?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/40d4e1140f6080fa9408e5e09752fe9e6934bbd10ec0494e47c69cfee8c68b7b/Devolutions/IronRDP",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 927096917,
        "content": "ðŸŒŸ <b>tray-tui</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDisplaying system tray menus as interactive trees within a terminal user interface.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ System tray integration in a terminal\nâ€¢ Interactive tree-based menu navigation\nâ€¢ Built using Rust and ratatui\n<br>\nðŸ“– <b>Summary:</b>\ntray-tui brings system tray functionality to the terminal, allowing users to interact with tray menus through an interactive tree-based navigation system. It is built using Rust and the ratatui library, providing a seamless TUI experience for managing system tray items and actions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Levizor/tray-tui?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6316bcea309bc48df4c1a39c18d9b01694e21c35a4987b8660be93bb54fda925/Levizor/tray-tui",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 929156152,
        "content": "ðŸŒŸ <b>groovy</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTranspiling Python code to JavaScript for client-side execution, particularly within the Gradio library.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Converts Python functions to JavaScript equivalents.\nâ€¢ Supports a subset of the Python standard library.\nâ€¢ Provides complete error reporting for unsupported Python code.\n<br>\nðŸ“– <b>Summary:</b>\nGroovy is a Python-to-JavaScript transpiler designed for use in the Gradio library. It converts Python functions into their JavaScript equivalents, enabling developers to write Python code that runs efficiently on the client-side. Groovy prioritizes clear error reporting for unsupported Python code, making it easier for developers to adapt their functions accordingly.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gradio-app/groovy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a9291289a5c4a40a30d8e8aeda53bcbc822a7c1d6f50492f33eab82d435fbb9f/gradio-app/groovy",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 515647260,
        "content": "ðŸŒŸ <b>1Panel</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLinux server management through a web interface.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Web-based Linux server management\nâ€¢ Website deployment\nâ€¢ Application store\nâ€¢ Security and reliability\n<br>\nðŸ“– <b>Summary:</b>\n1Panel is a web-based control panel designed to simplify Linux server management. It offers features such as website deployment, an application store for easy installation of open-source tools, and focuses on security and reliability through containerization.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/1Panel-dev/1Panel?embed=0\">View Project</a>\nâ€¢ <a href=\"https://1panel.pro?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0bf6fb2fd30131bee364e23ef3a06621e2f9ac606811129c56db9ac17e85528d/1Panel-dev/1Panel",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 831420946,
        "content": "âœ¨ <b>bunster</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCompiling shell scripts into standalone, portable, and secure static binaries that can run in environments without a shell.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Compiles shell scripts to static binaries\nâ€¢ Transpiles shell scripts to Go code\nâ€¢ Aims for bash compatibility\nâ€¢ Provides improved error handling and messages\n<br>\nðŸ“– <b>Summary:</b>\nBunster is a shell compiler that converts bash scripts into Go code and then compiles them into static binaries. This allows the scripts to run in environments where a shell is not available, improving security and portability. Bunster aims to provide modern language features like improved error handling, a module system, and support for .env files.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yassinebenaid/bunster?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bunster.netlify.app?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ec542a65976afde95878ff3bdfcb53d3578330674e516f7bcae84a1d756567f0/yassinebenaid/bunster",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 774716772,
        "content": "ðŸš€ <b>heyform</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating conversational forms for surveys, questionnaires, quizzes, and polls without coding.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Versatile Inputs (text, email, phone, picture choices, date pickers, file uploads)\nâ€¢ Smart Logic (conditional logic, URL redirections)\nâ€¢ Powerful Integrations (webhooks, analytics, marketing platforms, Zapier, Make.com)\n<br>\nðŸ“– <b>Summary:</b>\nHeyForm is an open-source form builder that simplifies the creation of engaging conversational forms. It offers a wide array of input types, smart logic, powerful integrations, and extensive customization options. Users can analyze data collected through insightful analytics and export results for further analysis.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/heyform/heyform?embed=0\">View Project</a>\nâ€¢ <a href=\"https://heyform.net?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/774716772/96c47530-c0b6-4d26-9b97-a0c10c4b83e8",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 660603097,
        "content": "âœ¨ <b>zebar</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating customizable and cross-platform taskbars, desktop widgets, and popups.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform support (Windows, MacOS, Linux)\nâ€¢ Customizable desktop widgets\nâ€¢ Taskbar creation\nâ€¢ Popup creation\nâ€¢ Uses native webviews for widgets (lightweight alternative to Electron)\n<br>\nðŸ“– <b>Summary:</b>\nZebar is a Rust-based tool for creating customizable and cross-platform desktop widgets, taskbars, and popups. It leverages native webviews for lightweight widget rendering and exposes system information through reactive providers. Zebar supports various frontend frameworks, allowing users to build widgets with their preferred technology.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/glzr-io/zebar?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/bfd0c2a39fbdd1bcf87d14c69a2b8be9e7ea9aaa215ac4f6169c59e7ae4445fa/glzr-io/zebar",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 916618403,
        "content": "ðŸŒŸ <b>baitroute</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetect vulnerability scans and mislead attackers by providing false positive results, acting as an early warning system and wasting attackers' time.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Easy Integration with Go, Python, and Javascript web frameworks\nâ€¢ Ready-to-use vulnerability/misconfiguration rules\n<br>\nðŸ“– <b>Summary:</b>\nBaitroute is a web honeypot library designed to detect and mislead attackers by creating realistic, vulnerable-looking endpoints. It integrates seamlessly with Go, Python, and Javascript web frameworks and offers ready-to-use rules that can be configured to create custom decoys. The library aims to provide an early warning system for potential attacks and waste attackers' time by presenting them with false positive vulnerabilities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/utkusen/baitroute?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ac7324209b5b8a663de377b9f73285f5fd02bd8082303d4fbdf44e705d60b883/utkusen/baitroute",
        "platform": "telegram",
        "quality_score": 0.7000000000000001
    },
    {
        "project_id": 233472199,
        "content": "ðŸš€ <b>Microsoft-Activation-Scripts</b> | Batchfile\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nWindows and Office activation\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ HWID Activation\nâ€¢ Ohook Activation\nâ€¢ TSforge Activation\nâ€¢ KMS38 Activation\nâ€¢ Online KMS Activation\n<br>\nðŸ“– <b>Summary:</b>\nThe Microsoft Activation Scripts repository provides open-source tools for activating Windows and Office using various methods like HWID, Ohook, TSforge, KMS38, and Online KMS. It also includes advanced troubleshooting capabilities to assist users in resolving activation issues. The repository aims to simplify and streamline the activation process for Microsoft products.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/massgravel/Microsoft-Activation-Scripts?embed=0\">View Project</a>\nâ€¢ <a href=\"https://massgrave.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/233472199/7f86712b-fee6-4659-a2cf-c967d6b0d733",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    }
]