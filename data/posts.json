[
    {
        "project_id": 505401707,
        "content": "ðŸ”¥ <b>fooyin</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPlaying and managing a local music collection with extensive customization options.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Playback of major audio formats (FLAC, MP3, MP4, Vorbis, Opus, WavPack, WAV, AIFF, MKA, Musepack, Monkeyâ€™s Audio)\nâ€¢ Native support for VGM and tracker module formats\nâ€¢ Gapless playback\nâ€¢ Play files directly from archives\nâ€¢ Full CUE sheet support\n<br>\nðŸ“– <b>Summary:</b>\nfooyin is a customizable music player that supports a wide range of audio formats and provides extensive customization options. It features a plugin system, a scripting language for advanced configuration, and a layout editing mode for complete UI customization. Currently, only Linux is supported, with plans for future platform support.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/fooyin/fooyin?embed=0\">View Project</a>\nâ€¢ <a href=\"https://fooyin.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9ecfabc3106be5770b925a3cbb0a537f3ac1e4bb19c63a9125ec0b7832c64936/fooyin/fooyin",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 486721097,
        "content": "ðŸ”¥ <b>youtube-tui</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBrowsing YouTube content and playing videos/audio from the terminal without a graphical user interface.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Browse YouTube content from the terminal\nâ€¢ Customizable through config files (YAML format)\nâ€¢ Dependency-free (relies on external programs like mpv and yt-dlp)\nâ€¢ View channel, playlist, and video information\nâ€¢ Use search filters\n<br>\nðŸ“– <b>Summary:</b>\nYouTube TUI is a terminal-based user interface for browsing YouTube. It's written in Rust and allows users to browse YouTube content, view information about channels, playlists, and videos, use search filters, and save browsing history, all from the command line.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Siriusmart/youtube-tui?embed=0\">View Project</a>\nâ€¢ <a href=\"https://tui.siri.ws/youtube?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d2d75c359c5089762fe822c31a942b5b68e1b0fafffb35746d0eeb12c87cfdcf/Siriusmart/youtube-tui",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 77419377,
        "content": "ðŸ’¡ <b>ctop</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nMonitoring container resource usage and performance in real-time.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time container metrics\nâ€¢ Top-like interface\nâ€¢ Multiple container overview\nâ€¢ Single container view\nâ€¢ Docker support\n<br>\nðŸ“– <b>Summary:</b>\nctop is a command-line tool that provides a real-time, top-like interface for monitoring container metrics. It offers a concise overview of multiple containers and a single container view for detailed inspection, supporting Docker and runC.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bcicen/ctop?embed=0\">View Project</a>\nâ€¢ <a href=\"https://ctop.sh?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3c33e00037f106b78d8d27fc188540e6d226fa1493487ec433010676bfdec4aa/bcicen/ctop",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 441062625,
        "content": "ðŸŒŸ <b>NetAlertX</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nNetwork intrusion detection and presence detection on a local network.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Network scanning for new devices\nâ€¢ Detection of new connections and disconnections\nâ€¢ IP change detection\nâ€¢ Internet IP address change detection\nâ€¢ Plugin system for custom functionality\n<br>\nðŸ“– <b>Summary:</b>\nNetAlertX is a network monitoring and security tool that scans your network for connected devices and alerts you to new or unknown devices. It helps with presence detection, network analysis, and building a network source of truth (NSoT) through scheduled scans and customizable plugins.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jokob-sk/NetAlertX?embed=0\">View Project</a>\nâ€¢ <a href=\"https://netalertx.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/441062625/3d4957be-0bb2-4617-bb58-7bb0cf0cbc08",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 719438276,
        "content": "ðŸ’¡ <b>gramax</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and publishing documentation, knowledge bases, and notes using Markdown with Git integration.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Visual Editor\nâ€¢ Cross-Platform availability\nâ€¢ Local Storage in Markdown\nâ€¢ Customizable Styles\nâ€¢ Multilingual Support\n<br>\nðŸ“– <b>Summary:</b>\nGramax is an open-source, local-first documentation tool that uses a docs-as-code approach. It allows users to create, edit, and publish documentation using Markdown, with a visual editor and Git integration. It supports various features like multilingual support, advanced editing capabilities, and documentation portal generation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Gram-ax/gramax?embed=0\">View Project</a>\nâ€¢ <a href=\"https://gram.ax?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ca6d7074909c5edf433fc6933e7b966d2ee27e7ea4341e31765fdbfdb1964921/Gram-ax/gramax",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 996250059,
        "content": "ðŸŒŸ <b>depyler</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConverting Python code to Rust for improved performance, memory safety, and energy efficiency.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Type-directed transpilation\nâ€¢ Memory safety analysis\nâ€¢ Semantic verification\nâ€¢ Support for basic Python types and collections\nâ€¢ Support for control flow, comprehensions, and exception handling\n<br>\nðŸ“– <b>Summary:</b>\nDepyler is a Python-to-Rust transpiler that aims to facilitate the transition from Python to Rust by converting annotated Python code into idiomatic Rust. It focuses on semantic verification and memory safety analysis to ensure the generated Rust code preserves the original program's behavior while providing compile-time safety guarantees.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/paiml/depyler?embed=0\">View Project</a>\nâ€¢ <a href=\"https://paiml.github.io/depyler/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5512dda57385e4b08d98a6d5bf712d956c78bdfd556f4404211c0925c208a087/paiml/depyler",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    }
]