[
    {
        "project_id": 966235850,
        "content": "âœ¨ <b>sokuji</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLive speech translation for meetings and conversations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time speech translation using OpenAI's Realtime API\nâ€¢ Support for GPT-4o Realtime and GPT-4o mini Realtime models\nâ€¢ Automatic turn detection\nâ€¢ Audio visualization with waveform display\n<br>\nðŸ“– <b>Summary:</b>\nSokuji is a desktop application that provides real-time speech translation using OpenAI's Realtime API. It supports features like automatic turn detection, audio visualization, and virtual audio device management, making it suitable for bridging language barriers in live conversations. A browser extension is also available, offering similar functionality with integration for Google Meet and Microsoft Teams.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kizuna-ai-lab/sokuji?embed=0\">View Project</a>\nâ€¢ <a href=\"https://kizuna-ai-lab.github.io/sokuji/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d7091dcd506344bf04ea6dbf9216acc0f77aa56739371dbc7ec3fa53220f74df/kizuna-ai-lab/sokuji",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 932580333,
        "content": "âœ¨ <b>BillionMail</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nManaging email campaigns, sending newsletters, promotional emails, and transactional messages.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source mail server and email marketing platform\nâ€¢ Advanced analytics for tracking email performance\nâ€¢ Unlimited email sending capabilities\n<br>\nðŸ“– <b>Summary:</b>\nBillionMail is an open-source mail server and email marketing platform designed to provide businesses and individuals with full control over their email campaigns. It offers features such as advanced analytics, customizable templates, and unlimited sending, all while ensuring privacy through self-hosting. The platform aims to be a cost-effective and feature-rich alternative to expensive, closed-source solutions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aaPanel/BillionMail?embed=0\">View Project</a>\nâ€¢ <a href=\"http://www.billionmail.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9eb29c44cca99e5856616d1f994bf33690c8382fc4829800cc26d9d2f11fad68/aaPanel/BillionMail",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 131129792,
        "content": "ðŸ”¥ <b>bandit</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIdentifying security vulnerabilities in Python code through static analysis.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Finds common security issues in Python code\nâ€¢ Processes files and builds AST\nâ€¢ Runs plugins against AST nodes\nâ€¢ Generates reports\nâ€¢ Available as a container image\n<br>\nðŸ“– <b>Summary:</b>\nBandit is a security linter for Python code that identifies common security vulnerabilities. It works by processing Python files, building an Abstract Syntax Tree (AST), and running plugins against the AST nodes to detect potential issues. Bandit is also available as a container image, ensuring consistent and verifiable execution.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PyCQA/bandit?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bandit.readthedocs.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/131129792/fff334d9-70ac-4bb0-a941-89087a6ffab7",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 871373324,
        "content": "ðŸ’¡ <b>contextgem</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEffortless extraction of structured data and insights from documents using LLMs.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automated dynamic prompts\nâ€¢ Automated data modelling and validators\nâ€¢ Precise granular reference mapping (paragraphs & sentences)\n<br>\nðŸ“– <b>Summary:</b>\nContextGem is an open-source LLM framework designed to simplify the extraction of structured data from documents. It provides powerful abstractions to automate dynamic prompts, data modeling, and granular reference mapping, reducing boilerplate code and development overhead. The framework aims to make LLM-based document intelligence more accessible and efficient.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/shcherbak-ai/contextgem?embed=0\">View Project</a>\nâ€¢ <a href=\"https://contextgem.dev/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/871373324/760ce77b-3b57-472b-9762-545d363b41fa",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 961914674,
        "content": "ðŸŒŸ <b>OmniSVG</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating complex and detailed SVGs from multimodal inputs using pre-trained Vision-Language Models.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ End-to-end multimodal SVG generation\nâ€¢ Leverages pre-trained Vision-Language Models (VLMs)\nâ€¢ Generates complex and detailed SVGs from simple icons to intricate anime characters\nâ€¢ Parameterizes SVG commands and coordinates into discrete tokens\n<br>\nðŸ“– <b>Summary:</b>\nOmniSVG is a novel framework for generating SVGs using Vision-Language Models. It parameterizes SVG commands into discrete tokens, enabling the creation of complex SVGs from various inputs. The project also introduces MMSVG-2M, a large multimodal SVG dataset, and establishes a standardized evaluation protocol for conditional SVG generation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/OmniSVG/OmniSVG?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cdca307fb33b51808dd2b166746e3ecf1a2f8455b4431fdec456b256b0cbe4e6/OmniSVG/OmniSVG",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 488600439,
        "content": "ðŸ’¡ <b>skops</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSharing and deploying scikit-learn based models securely and with clear documentation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Secure persistence of scikit-learn estimators without using pickle (skops.io)\nâ€¢ Tools to create model cards explaining model functionality and usage (skops.card)\n<br>\nðŸ“– <b>Summary:</b>\nSkops is a Python library designed to facilitate the sharing and deployment of scikit-learn models. It provides secure model persistence via `skops.io`, avoiding the use of pickle, and offers tools in `skops.card` for generating model cards that explain model usage and functionality, promoting transparency and ease of use.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/skops-dev/skops?embed=0\">View Project</a>\nâ€¢ <a href=\"https://skops.readthedocs.io/en/stable/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8d7e0da8f0926f682b5a8ef692297f7218c4bda03869aafac2d8089782b467df/skops-dev/skops",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 441537080,
        "content": "âœ¨ <b>shellfirm</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPreventing accidental or unintended execution of dangerous shell commands.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Intercepts risky shell commands.\nâ€¢ Prompts users with a challenge for verification.\nâ€¢ Provides warnings about potentially dangerous actions.\nâ€¢ Supports Zsh and Bash shells.\nâ€¢ Offers customizable risky patterns (though not explicitly stated, it's implied by 'defined by you')\n<br>\nðŸ“– <b>Summary:</b>\nShellfirm is a security tool that intercepts potentially risky shell commands and prompts users with a verification challenge before execution. It acts as a 'captcha' for the terminal, helping to prevent accidental data loss or system damage. It supports Zsh and Bash, providing a safeguard against common mistakes like `rm -rf *` or `git reset --hard`.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kaplanelad/shellfirm?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b2275fd7fe002d171cc68f20fa577af623b1348631c178546dcb53ca76cf4d38/kaplanelad/shellfirm",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 196274912,
        "content": "âœ¨ <b>IronRDP</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nImplementing a secure RDP client and server in Rust.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Rust implementation of Microsoft RDP\nâ€¢ Focus on security\nâ€¢ Support for Uncompressed raw bitmap, Interleaved Run-Length Encoding (RLE) Bitmap Codec, RDP 6.0 Bitmap Compression, and Microsoft RemoteFX (RFX)\nâ€¢ Asynchronous I/O client example\nâ€¢ Screenshot example\n<br>\nðŸ“– <b>Summary:</b>\nIronRDP is a Rust library providing a secure implementation of the Microsoft Remote Desktop Protocol (RDP). It offers various features including support for multiple video codecs and provides examples for both asynchronous and synchronous client implementations, enabling developers to build robust and secure remote desktop applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Devolutions/IronRDP?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4988f398b626df6f2ed2234a8ffe947e525ef6c2526ab2cf907326c17b386138/Devolutions/IronRDP",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 203456148,
        "content": "ðŸ”¥ <b>bunkerweb</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProtecting web services and applications from cyber threats by acting as a reverse proxy and WAF.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Web Application Firewall (WAF)\nâ€¢ NGINX-based web server\nâ€¢ Integration with Linux, Docker, Swarm, and Kubernetes\nâ€¢ Configurable via web UI or CLI\nâ€¢ Plugin system for extending security features\n<br>\nðŸ“– <b>Summary:</b>\nBunkerWeb is an open-source Web Application Firewall (WAF) that protects web services by integrating seamlessly into existing environments like Docker and Kubernetes. Built on NGINX, it offers a configurable and extensible security solution through a web UI, CLI, and plugin system, ensuring web applications are secure by default.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bunkerity/bunkerweb?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.bunkerweb.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/203456148/d91b56bf-1da8-4023-a1b2-056c20ce3a2d",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    }
]