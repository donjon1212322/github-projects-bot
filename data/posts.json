[
    {
        "project_id": 940335168,
        "content": "ðŸ’¡ <b>wify</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuickly connect to WiFi networks by scanning text containing WiFi credentials, eliminating the need for manual SSID and password entry.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Text Recognition (OCR) for WiFi credentials\nâ€¢ Image Picker for importing WiFi information from gallery\nâ€¢ WiFi Network Scanning\nâ€¢ Fuzzy Matching of extracted credentials with available networks\nâ€¢ WiFi Connection to matched networks\n<br>\nðŸ“– <b>Summary:</b>\nWify is a React Native application designed to simplify WiFi connection. It uses OCR to extract WiFi credentials from images or camera input, matches them with nearby networks, and automatically connects. This eliminates the need to manually search for and type in network names and passwords, especially useful in environments with complex WiFi setups.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yilinjuang/wify?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f3b5382f2208571b3fc4dddf1acba879e4662d31bd764ec78af1cff21ebbc8f3/yilinjuang/wify",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 343756919,
        "content": "ðŸš€ <b>timer</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTracking time spent on websites to improve productivity and understand browsing habits.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Website time tracking\nâ€¢ Browser extension support (Chrome, Edge, Firefox)\nâ€¢ Data visualization and reporting\nâ€¢ Habit analysis\nâ€¢ Page blocking\n<br>\nðŸ“– <b>Summary:</b>\nTime Tracker is a browser extension that monitors the time users spend on various websites. It provides data visualization and reporting features, enabling users to analyze their browsing habits and identify time-wasting activities. The extension supports multiple browsers, including Chrome, Edge, and Firefox, and offers features like page blocking to enhance productivity.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/sheepzh/timer?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.wfhg.cc?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f35449c874aa343076c1ddc8c3fa7c89f19345b230c4a22cd444057cce95fecf/sheepzh/timer",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 676934005,
        "content": "ðŸš€ <b>niri</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA Wayland compositor focused on scrollable tiling window management, providing a stable and customizable desktop environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Scrollable tiling window management\nâ€¢ Dynamic workspaces\nâ€¢ Built-in screenshot UI\nâ€¢ Monitor and window screencasting with blocking\nâ€¢ Touchpad and mouse gestures\n<br>\nðŸ“– <b>Summary:</b>\nNiri is a Wayland compositor that utilizes a scrollable tiling approach, arranging windows in columns on an infinite strip. It features dynamic workspaces, built-in screenshot UI, screencasting capabilities, touchpad/mouse gestures, and extensive customization options, making it a stable and feature-rich option for daily use.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/YaLTeR/niri?embed=0\">View Project</a>\nâ€¢ <a href=\"https://matrix.to/#/#niri:matrix.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/191556b1f7f860eb5b6602fcfc2852a6232f073c6888106c6826bf84b6fd775f/YaLTeR/niri",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 564975433,
        "content": "ðŸ”¥ <b>wa-tunnel</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTunneling internet traffic through Whatsapp, especially useful in situations with restricted network access but unlimited Whatsapp data.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ TCP Tunneling through Whatsapp\nâ€¢ Uses Baileys library for Whatsapp communication\nâ€¢ Sends TCP packets as text or file messages\nâ€¢ Caches TCP socket responses to improve performance\nâ€¢ Brotli compression for data reduction\n<br>\nðŸ“– <b>Summary:</b>\nThe wa-tunnel repository enables TCP tunneling over the Whatsapp network using the Baileys library. It sends TCP packets as text or file messages, caches responses, and uses Brotli compression to optimize performance and reduce data usage. This is particularly useful for bypassing network restrictions where Whatsapp data is unlimited.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aleixrodriala/wa-tunnel?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7af7cca670c06b6bb217410260f08ae64b5e686cf4313929381d65bc7574185a/aleixrodriala/wa-tunnel",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 234798675,
        "content": "âœ¨ <b>bevy</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGame engine development\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Capable 2D and 3D feature set\nâ€¢ Simple and easy to use\nâ€¢ Data-oriented architecture (ECS)\nâ€¢ Modular design\nâ€¢ Fast performance\n<br>\nðŸ“– <b>Summary:</b>\nBevy is a data-driven game engine built in Rust, designed for both 2D and 3D game development. It emphasizes simplicity, modularity, and performance, utilizing an Entity Component System (ECS) architecture. Bevy aims to provide a productive and enjoyable development experience with fast compile times.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bevyengine/bevy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bevyengine.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/234798675/18016580-dab2-11ea-9864-452f7149499c",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 479289739,
        "content": "ðŸ’¡ <b>rerun</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVisualizing streams of multimodal data for robotics, AI, and other applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multimodal data visualization\nâ€¢ SDKs for C++, Python, and Rust\nâ€¢ Live data streaming\nâ€¢ Dataframe API for querying logged data\n<br>\nðŸ“– <b>Summary:</b>\nRerun is a visualization tool and data stack for multimodal data, offering SDKs in C++, Python, and Rust. It allows users to log and visualize data streams like images, point clouds, and text in real-time. The tool also provides a dataframe API for querying logged data, making it suitable for robotics, AI, and other data-intensive applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/rerun-io/rerun?embed=0\">View Project</a>\nâ€¢ <a href=\"https://rerun.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/479289739/0ff52438-b538-432f-b72c-270c1284922f",
        "platform": "telegram",
        "quality_score": 1.2000000000000002
    },
    {
        "project_id": 220588935,
        "content": "ðŸ’¡ <b>nezha</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nServer and website monitoring and operations & maintenance (O&M).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ System status monitoring\nâ€¢ HTTP monitoring (SSL certificate)\nâ€¢ TCP monitoring\nâ€¢ Ping monitoring\nâ€¢ Push alerts\n<br>\nðŸ“– <b>Summary:</b>\nNezha is a self-hosted, lightweight monitoring tool designed for servers and websites. It provides comprehensive monitoring capabilities, including system status, HTTP/TCP services, and ping, along with push alerts and scheduled task execution. Additionally, it offers a web terminal for convenient server management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nezhahq/nezha?embed=0\">View Project</a>\nâ€¢ <a href=\"https://nezha.wiki?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/77f042c5d1ea99ef22317b353f6af95a16e071f3252d641ba28fd3933cb88594/nezhahq/nezha",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 828119367,
        "content": "ðŸš€ <b>repomix</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPacking an entire code repository into a single, AI-friendly file for use with Large Language Models (LLMs).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI-Optimized formatting\nâ€¢ Token Counting\nâ€¢ Simple to Use CLI\nâ€¢ Customizable inclusion/exclusion\nâ€¢ Git-Aware (respects .gitignore)\n<br>\nðŸ“– <b>Summary:</b>\nRepomix is a tool for packing entire code repositories into single, AI-friendly files, optimized for use with LLMs. It offers features like token counting, customizable inclusion/exclusion, Git awareness, security checks via Secretlint, and code compression using Tree-sitter. The tool can be used via a CLI or through a website.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yamadashy/repomix?embed=0\">View Project</a>\nâ€¢ <a href=\"https://repomix.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/76c236cfe47192995e0946be7b523bc2fa40face72992338f7d844566826ce6c/yamadashy/repomix",
        "platform": "telegram",
        "quality_score": 1.2000000000000002
    }
]