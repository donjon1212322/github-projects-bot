[
    {
        "project_id": 40556106,
        "content": "ðŸ”¥ <b>wazuh</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nThreat prevention, detection, and response across various environments (on-premises, virtualized, containerized, and cloud-based).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Intrusion detection\nâ€¢ Log data analysis\nâ€¢ File integrity monitoring\nâ€¢ Vulnerability detection\nâ€¢ Configuration assessment\n<br>\nðŸ“– <b>Summary:</b>\nWazuh is an open-source security platform that provides XDR and SIEM capabilities. It uses agents deployed on monitored systems to collect and analyze data, integrated with the Elastic Stack for visualization. Key features include intrusion detection, log analysis, file integrity monitoring, vulnerability detection, configuration assessment, and incident response, enabling comprehensive security monitoring and threat management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/wazuh/wazuh?embed=0\">View Project</a>\nâ€¢ <a href=\"https://wazuh.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/cc7b1f2d51116f02f0c3ee617db9c9c765473fad9f6bd689871e69214a32c023/wazuh/wazuh",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 962528913,
        "content": "ðŸ”¥ <b>reTermAI</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAI-powered terminal command recommendation and intelligent command matching.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Recommends terminal commands based on history using OpenAI or Gemini\nâ€¢ Supports intelligent matching by keyword or partial input\nâ€¢ Easy installation via pip\nâ€¢ Supports zsh and bash shell history\nâ€¢ API keys managed via .env\n<br>\nðŸ“– <b>Summary:</b>\nreTermAI is a smart command assistant that recommends relevant terminal commands based on your shell history, leveraging AI models like OpenAI and Gemini. It offers intelligent matching by keyword or partial input and supports both zsh and bash shells. The tool is easily installed via pip and manages API keys through a .env file.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/pie0902/reTermAI?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7ef6f2dde6ffcefb395d2dd7df9eba4612a59ae78b3a85ba9b96d7f78d7a3b6c/pie0902/reTermAI",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 802112303,
        "content": "ðŸŒŸ <b>ProcrastiScan</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nHelps users stay focused and productive by identifying and mitigating distractions while browsing or using other applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smart Distraction Recognition using relevance scoring\nâ€¢ Multiple intervention modes (Tab Blocking, Chatbot, Procrastination List, Theme Nudging)\nâ€¢ Dashboard for tracking focus and distractions\n<br>\nðŸ“– <b>Summary:</b>\nProcrastiScan is a productivity tool that analyzes content relevance to help users stay focused. It calculates a relevance score for each tab or application and provides interventions like tab blocking or a chatbot when the user becomes distracted. A dashboard allows users to track their focus levels over time.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Marc-Pk/ProcrastiScan?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5498a76e74e8acbe132ce1bc5dcc9e09d53e8ad123df815b4439ce1a25c6fd2b/Marc-Pk/ProcrastiScan",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 904490600,
        "content": "ðŸŒŸ <b>KrillinAI</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEffortless video localization and enhancement for platforms like YouTube, TikTok, and Bilibili.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ One-Click Start\nâ€¢ Video download (yt-dlp and local file uploading supported)\nâ€¢ Precise Subtitles (Whisper-powered high-accuracy recognition)\n<br>\nðŸ“– <b>Summary:</b>\nKrillin AI is an all-in-one video translation and dubbing tool that simplifies the process of localizing video content. It offers features like one-click workflow initiation, precise subtitle generation using Whisper, smart segmentation with LLMs, professional-grade translation, voice cloning, and automatic video formatting for various platforms. The tool aims to transform raw footage into polished, platform-ready content with minimal effort.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/krillinai/KrillinAI?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ffc89f9112ecf59e1d9a050eeab480cbad97704c31af3271d6938df80b7558e8/krillinai/KrillinAI",
        "platform": "telegram",
        "quality_score": 0.9
    },
    {
        "project_id": 871674431,
        "content": "ðŸ’¡ <b>Free_Games_Tracker</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDiscovering time-limited free game offers and exclusive downloadable content (DLC) across multiple platforms (Windows and Android).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Instant access to active free game offers and promotions in one place.\nâ€¢ Automatic updates via a custom API built on top of GamerPower.\n<br>\nðŸ“– <b>Summary:</b>\nThe FreeGamesApp is a cross-platform application designed to help users discover time-limited free game offers and DLC. It provides instant access to promotions from various platforms through a custom API, offering a clean and minimal interface focused solely on free games and DLC. The application is available for Windows and Android and is an open-source project.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/pyoneerC/Free_Games_Tracker?embed=0\">View Project</a>\nâ€¢ <a href=\"https://pyoneerc1.itch.io/free-games-tracker?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a4f1b3075b34ef3a5fa93ca287dc4da809d8b8edf67ee46557e8251849b322ab/pyoneerC/Free_Games_Tracker",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 223953992,
        "content": "ðŸš€ <b>zphisher</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomated phishing tool for educational purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Latest and updated login pages\nâ€¢ Beginner-friendly interface\nâ€¢ Multiple tunneling options (Localhost, Cloudflared, LocalXpose)\nâ€¢ Mask URL support\nâ€¢ Docker support\n<br>\nðŸ“– <b>Summary:</b>\nZphisher is an automated phishing tool designed for educational purposes, offering a beginner-friendly interface with over 30 templates. It supports multiple tunneling options, URL masking, and Docker deployment, enabling users to simulate phishing attacks and understand their mechanics.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/htr-tech/zphisher?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/223953992/47b43680-8ee1-11ea-8711-7da89b585673",
        "platform": "telegram",
        "quality_score": 0.7000000000000001
    },
    {
        "project_id": 945177403,
        "content": "ðŸ’¡ <b>nutshell</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnhanced Unix shell environment with simplified commands, package management, and AI assistance.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Friendly command aliases\nâ€¢ Built-in package management system\nâ€¢ Dynamic package installation\nâ€¢ Interactive Git commit helper\nâ€¢ AI-powered command assistance\n<br>\nðŸ“– <b>Summary:</b>\nNutshell is an enhanced Unix shell designed to simplify command-line interactions. It offers features like friendly command aliases, a built-in package management system for extending functionality, and AI-powered assistance for command discovery and troubleshooting. Nutshell aims to provide a more user-friendly and efficient shell experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/chandralegend/nutshell?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0a768ab2dbd560ec9413ad4919a32695046b1aa145c16dc64cd0c0ccdce0b771/chandralegend/nutshell",
        "platform": "telegram",
        "quality_score": 1.0
    },
    {
        "project_id": 850267588,
        "content": "ðŸ’¡ <b>xiaozhi-esp32</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding a customizable AI chatbot companion using ESP32 hardware.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Wi-Fi / ML307 Cat.1 4G connectivity\nâ€¢ BOOT key wake-up and interrupt\nâ€¢ Offline voice wake-up (ESP-SR)\nâ€¢ Streaming voice conversation (WebSocket or UDP)\n<br>\nðŸ“– <b>Summary:</b>\nThe XiaoZhi AI Chatbot project enables users to create their own AI companion using ESP32 microcontrollers. It supports features like voice interaction, multi-language processing, voiceprint recognition, and integration with large language models. The project aims to make AI hardware development accessible and allows for customization of the chatbot's personality and functionality.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/78/xiaozhi-esp32?embed=0\">View Project</a>\nâ€¢ <a href=\"https://xiaozhi.me?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c78873e45eea1fe72221e5e125bf29124fadfcb6eb7614fc44195db3b2c4dd71/78/xiaozhi-esp32",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 640317662,
        "content": "âœ¨ <b>vanna</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nChatting with SQL databases using natural language to generate SQL queries.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Text-to-SQL generation\nâ€¢ RAG (Retrieval-Augmented Generation) framework\nâ€¢ Support for multiple LLMs (OpenAI, Anthropic, Gemini, HuggingFace, AWS Bedrock, Ollama, Qianwen, Qianfan, Zhipu)\n<br>\nðŸ“– <b>Summary:</b>\nVanna is an open-source Python RAG framework that enables users to generate SQL queries from natural language questions. It trains a RAG model on your data and then allows you to ask questions, returning SQL queries that can be automatically run on your database. Vanna supports various LLMs, vector stores, and databases, offering flexibility in implementation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vanna-ai/vanna?embed=0\">View Project</a>\nâ€¢ <a href=\"https://vanna.ai/docs/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9f1888f94283ac33db9469520bc84ac85ae64c710fc934e32951a40cc51bcaac/vanna-ai/vanna",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 171987885,
        "content": "ðŸš€ <b>pysimdjson</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFast and efficient JSON parsing in Python applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ SIMD-accelerated JSON parsing\nâ€¢ Fallback parser for systems without SIMD instructions\nâ€¢ Python bindings for simdjson\nâ€¢ Tested on OS X, Linux, and Windows for Python 3.9 to 3.12\n<br>\nðŸ“– <b>Summary:</b>\npysimdjson provides Python bindings for the simdjson library, enabling SIMD-accelerated JSON parsing for improved performance. It includes a fallback parser for systems without SIMD support, ensuring compatibility across different platforms. The library is tested on multiple operating systems and Python versions, making it a reliable solution for fast JSON processing.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/TkTech/pysimdjson?embed=0\">View Project</a>\nâ€¢ <a href=\"https://pysimdjson.tkte.ch?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/171987885/fcb68b00-907f-11eb-8e29-824971097e67",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 825470378,
        "content": "ðŸ”¥ <b>beszel</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nLightweight server monitoring with Docker stats, historical data, and alerts for homelabs and self-hosted environments.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Lightweight server monitoring\nâ€¢ Docker statistics tracking\nâ€¢ Historical data analysis\nâ€¢ Configurable alerts\nâ€¢ Multi-user support\n<br>\nðŸ“– <b>Summary:</b>\nBeszel is a lightweight server monitoring platform designed for homelabs and self-hosted environments. It provides Docker statistics, historical data, and configurable alerts through a user-friendly web interface. Key features include multi-user support, OAuth authentication, automatic backups, and a REST API for custom integrations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/henrygd/beszel?embed=0\">View Project</a>\nâ€¢ <a href=\"https://beszel.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/825470378/2710c6db-f934-4a8b-a2c4-7a0abbcd2ad6",
        "platform": "telegram",
        "quality_score": 0.85
    }
]