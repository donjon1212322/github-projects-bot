[
    {
        "project_id": 800632485,
        "content": "âœ¨ <b>subtrace</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nView incoming and outgoing requests in Docker containers to resolve production issues faster\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Works out-of-the-box\nâ€¢ No code changes needed\nâ€¢ Supports all languages (Python + Node + Go + everything else)\nâ€¢ See full payload, headers, status code, and latency\nâ€¢ Less than 100Âµs performance overhead\n<br>\nðŸ“– <b>Summary:</b>\nSubtrace is a tool that allows developers to see all incoming and outgoing requests within their Dockerized backend servers without requiring code changes.  It supports various programming languages and provides detailed information such as payload, headers, status codes, and latency with minimal performance impact. This helps in faster resolution of production issues.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/subtrace/subtrace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://subtrace.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/99678f0e9243af8787c4d8cca678c097e9ee31f0c705a2211ead0b1b1779e26b/subtrace/subtrace",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 908068887,
        "content": "ðŸŒŸ <b>google_photos_mobile_client</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUploading files to Google Photos without using a physical device or emulator\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uploads files to Google Photos as if from a Pixel XL device\nâ€¢ Provides both Python client and CLI interfaces\nâ€¢ Supports various options like recursive uploads, progress display, and album creation\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a command-line interface and Python client for uploading files to Google Photos, mimicking the behavior of a Pixel XL device.  It offers features such as recursive directory uploads, progress indicators, and the ability to specify authentication data.  The tool is useful for automating file uploads to Google Photos without needing a physical device or emulator.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/xob0t/google_photos_mobile_client?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 828119367,
        "content": "ðŸŒŸ <b>repomix</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPacking an entire codebase into a single, AI-friendly file for use with Large Language Models (LLMs) and other AI tools.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI-Optimized codebase formatting for easy AI processing\nâ€¢ Token counting for each file and the entire repository\nâ€¢ Simple one-command repository packing\nâ€¢ Customizable inclusion/exclusion of files\nâ€¢ .gitignore file support\n<br>\nðŸ“– <b>Summary:</b>\nRepomix is a command-line tool and web application that prepares codebases for AI processing.  It formats code for better AI understanding, provides token counts to manage LLM context limits, and offers customization options.  Security is addressed through Secretlint integration to prevent sensitive data inclusion.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yamadashy/repomix?embed=0\">View Project</a>\nâ€¢ <a href=\"https://repomix.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/55a679e07841cbd004f2dfe92050113cc0661b10cd90ee8d9daddfdcfafcac1d/yamadashy/repomix",
        "platform": "telegram",
        "quality_score": 1.2000000000000002
    },
    {
        "project_id": 916662373,
        "content": "ðŸš€ <b>audiblez</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConverting ebooks to audiobooks\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generates .m4b audiobooks from .epub ebooks using Kokoro's text-to-speech model\nâ€¢ Supports multiple languages (ðŸ‡ºðŸ‡¸ ðŸ‡¬ðŸ‡§ ðŸ‡ªðŸ‡¸ ðŸ‡«ðŸ‡· ðŸ‡®ðŸ‡³ ðŸ‡®ðŸ‡¹ ðŸ‡¯ðŸ‡µ ðŸ‡§ðŸ‡· ðŸ‡¨ðŸ‡³)\nâ€¢ Offers both command-line and GUI interfaces\nâ€¢ Provides CUDA support for GPU acceleration\nâ€¢ Allows adjusting audio speed (0.5x to 2.0x)\n<br>\nðŸ“– <b>Summary:</b>\nAudiblez converts ebooks (.epub) into audiobooks (.m4b) using Kokoro's text-to-speech model.  It offers command-line and GUI interfaces, supports multiple languages and CUDA acceleration, and allows for speed adjustment.  The process involves generating individual chapter WAV files and then combining them into a final M4B file using ffmpeg.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/santinic/audiblez?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0701332fab7d83b4bcbd691b750fbe9f2c2824d6b85da670eb65b472716107ce/santinic/audiblez",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 914092741,
        "content": "ðŸš€ <b>ClatScope</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOSINT (Open-Source Intelligence) investigations and reconnaissance\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ IP geolocation, ISP, and Google Maps link extraction\nâ€¢ Deep account search across 250+ websites\nâ€¢ Phone number validation, carrier identification, and region determination\nâ€¢ DNS record retrieval (A, CNAME, MX, NS) and PTR records\nâ€¢ Email MX record check, format validation, and header parsing\n<br>\nðŸ“– <b>Summary:</b>\nClatScope Info Tool is a versatile OSINT utility for retrieving various information like geolocation, DNS, WHOIS, phone, email, usernames, and more.  It uses multiple APIs and online resources to gather data and provides a command-line and graphical user interface.  The tool is useful for investigators, pentesters, and anyone needing quick reconnaissance.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Clats97/ClatScope?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2ea6ccca6b921256ee47c87f5a8fe4b7ff045d607fab20d3c078970e01447d6d/Clats97/ClatScope",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 249331466,
        "content": "ðŸ’¡ <b>laplace</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nScreen sharing directly via browser without requiring software installations or plugins\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ WebRTC for low latency peer-to-peer connections\nâ€¢ WebSocket implemented in golang for WebRTC signaling\nâ€¢ Screen sharing directly via browser\nâ€¢ No installation or registration required\nâ€¢ Low server cost\n<br>\nðŸ“– <b>Summary:</b>\nLaplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Golang-based WebSocket for signaling.  It offers a simple, installation-free solution for screen sharing with low server costs, ideal for various use cases including game streaming and remote collaboration.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/adamyordan/laplace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://laplace.adamjordan.id/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/52cd90b75cb9281a9c098a5343d15f9b13237140156cd10d5f18dd96dddc752d/adamyordan/laplace",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 853917967,
        "content": "ðŸš€ <b>fast-music-remover</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRemoving background music and noise from audio\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ background music filtering\nâ€¢ noise removal\nâ€¢ audio quality enhancement\nâ€¢ cross-platform support (Linux, macOS, Windows)\nâ€¢ containerized on GHCR\n<br>\nðŸ“– <b>Summary:</b>\nFast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It supports Linux, macOS, and Windows, is containerized for easy use, and includes a web UI. A project launcher simplifies setup and dependency management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/omeryusufyagci/fast-music-remover?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/632ec5ed0b5a385f5342b96e3c9308e5a6157941e881df96c40699cdb42b526f/omeryusufyagci/fast-music-remover",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 49876476,
        "content": "ðŸ”¥ <b>shardingsphere</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData sharding, scaling, and encryption on any database\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed SQL transaction\nâ€¢ query engine for data sharding\nâ€¢ scaling\nâ€¢ encryption\n<br>\nðŸ“– <b>Summary:</b>\nShardingSphere is a distributed SQL transaction and query engine.  It's designed for data sharding, scaling, and encryption across various databases.  This allows for improved performance and manageability of large datasets.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apache/shardingsphere?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f0528409fa18609cedb39ce7e0e74cbbb3f57719fbe1b3f0cad78600e9f3a443/apache/shardingsphere",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 139199684,
        "content": "ðŸš€ <b>prefect</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding and managing data pipelines in Python\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ workflow orchestration\nâ€¢ data pipeline building\nâ€¢ scheduling\nâ€¢ caching\nâ€¢ retries\n<br>\nðŸ“– <b>Summary:</b>\nPrefect is a Python-based workflow orchestration framework designed for creating robust data pipelines.  It offers features like scheduling, caching, and retries to ensure reliable execution, and integrates with a self-hosted server or Prefect Cloud for monitoring and management.  Data teams can automate various data processes with minimal code.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrefectHQ/prefect?embed=0\">View Project</a>\nâ€¢ <a href=\"https://prefect.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a3780e261981c92857b97dc2ae9fbdaf0e911c423888bc0e86acf05fc4c0b846/PrefectHQ/prefect",
        "platform": "telegram",
        "quality_score": 1.05
    }
]