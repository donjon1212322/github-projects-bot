[
    {
        "project_id": 519859998,
        "content": "âœ¨ <b>AFFiNE</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAll-in-one workspace for knowledge management, planning, and content creation, serving as an alternative to Notion and Miro.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Unified canvas for various block types (text, notes, embedded pages, databases, shapes, slides)\nâ€¢ AI-powered assistance for tasks like report writing, slide creation, summarization, and task management\n<br>\nðŸ“– <b>Summary:</b>\nAFFiNE is an open-source workspace that merges documents, whiteboards, and databases into a single, unified canvas. It offers local-first data storage, real-time collaboration, and AI-powered assistance for various tasks. It aims to provide a more flexible and integrated alternative to tools like Notion and Miro.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/toeverything/AFFiNE?embed=0\">View Project</a>\nâ€¢ <a href=\"https://affine.pro?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/519859998/81557da6-35e0-421d-8ad7-ec0c7a4725d2",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 980972336,
        "content": "ðŸš€ <b>partydeck-rs</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSplit-screen gaming on Linux/SteamOS.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Runs up to 4 game instances simultaneously\nâ€¢ Supports native Linux and Windows games (via Proton)\nâ€¢ Automatic game window fitting\nâ€¢ Handler system for easy game setup\nâ€¢ Steam multiplayer API emulation\n<br>\nðŸ“– <b>Summary:</b>\nPartyDeck is a split-screen game launcher for Linux and SteamOS that allows up to four players to play games simultaneously on a single screen. It supports both native Linux games and Windows games through Proton, and features automatic window fitting, controller sandboxing, and profile support for individual player save data. The launcher also emulates the Steam multiplayer API, enabling multiple instances of Steam games.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/wunnr/partydeck-rs?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2b232ce15e1776a0f44a9a0b3de2efc04b5ea2a0f63ad432057ae2e0f50b01d2/wunnr/partydeck-rs",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 964152252,
        "content": "ðŸš€ <b>tariff</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIntroducing artificial delays to Python package imports to simulate the effect of tariffs, presumably for parody or demonstration purposes.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Imposes tariffs on Python package imports\nâ€¢ Allows setting custom tariff rates for different packages\nâ€¢ Slows down imports based on the specified tariff percentage\n<br>\nðŸ“– <b>Summary:</b>\nThe 'tariff' repository is a Python package that allows users to impose artificial tariffs on imported packages. This is achieved by slowing down the import process based on a user-defined percentage. The package is primarily intended as a parody, simulating the impact of tariffs on software dependencies.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/hxu296/tariff?embed=0\">View Project</a>\nâ€¢ <a href=\"https://pypi.org/project/tariff/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/454a7fa7ae31af8af2feeece636750fd264ef5be4ecc78bb27f58e3a5b51f6f2/hxu296/tariff",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 354640201,
        "content": "ðŸ”¥ <b>drawdata</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDrawing datasets within Python notebooks for machine learning education and experimentation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Jupyter widgets for drawing datasets\nâ€¢ Integration with anywidget for compatibility with Jupyter, VSCode, and Colab\n<br>\nðŸ“– <b>Summary:</b>\nThe drawdata repository provides Jupyter widgets that allow users to draw datasets directly within their notebooks. It leverages anywidget for broad compatibility and supports exporting data in various formats, including pandas, polars, and X, y arrays, making it ideal for teaching and experimenting with machine learning algorithms. The library offers both ScatterWidget and BarWidget for diverse data drawing scenarios.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/koaning/drawdata?embed=0\">View Project</a>\nâ€¢ <a href=\"https://koaning.github.io/drawdata/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/3a3cf726ee430f5c93431520bccba4d1148968b0375497ac86b8c52537ba9703/koaning/drawdata",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 602389947,
        "content": "ðŸš€ <b>pygwalker</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSimplifying Jupyter Notebook data analysis and data visualization workflow.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Interactive Data Exploration\nâ€¢ Drag-and-drop interface for easy visualization creation\nâ€¢ Real-time updates as you make changes to the visualization\nâ€¢ Turns pandas DataFrames into interactive visual interfaces\n<br>\nðŸ“– <b>Summary:</b>\nPyGWalker is a Python library that simplifies data analysis and visualization workflows by turning pandas DataFrames into interactive visual interfaces. It offers a drag-and-drop interface for easy visualization creation with real-time updates. The primary use case is to simplify data analysis and visualization within Jupyter Notebook environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Kanaries/pygwalker?embed=0\">View Project</a>\nâ€¢ <a href=\"https://kanaries.net/pygwalker?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/602389947/f12f5f75-9f5e-4306-a443-f19104de881e",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 915054134,
        "content": "ðŸš€ <b>kokoro</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nText-to-speech conversion\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-weight TTS model (82 million parameters)\nâ€¢ Comparable quality to larger models with faster speed and cost-efficiency\nâ€¢ Apache-licensed weights for flexible deployment\nâ€¢ Uses misaki G2P library\n<br>\nðŸ“– <b>Summary:</b>\nKokoro is an open-weight TTS model designed for efficient and high-quality text-to-speech conversion. It offers a balance between model size and performance, making it suitable for various applications. The library uses Apache-licensed weights and the misaki G2P library.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/hexgrad/kokoro?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ba86c3da972de3e02998dd84ccd248ad258436068ca5b518f79c28c94b9f1edd/hexgrad/kokoro",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 592397559,
        "content": "âœ¨ <b>pythontk</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a collection of backend utilities for Python development.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Core utilities\nâ€¢ File utilities\nâ€¢ Image utilities\nâ€¢ Math utilities\nâ€¢ Iteration utilities\n<br>\nðŸ“– <b>Summary:</b>\nPythontk is a Python toolkit providing a variety of backend utilities. It includes modules for core functionalities, file handling, image manipulation, mathematical operations, iteration, and string manipulation. The repository aims to simplify common tasks in Python development by offering reusable utility functions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/m3trik/pythontk?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b8a184e2db3d008ca21289f88ea25111efe2bcadcec84e6f67585a81bd0c5b4e/m3trik/pythontk",
        "platform": "telegram",
        "quality_score": 0.3
    }
]