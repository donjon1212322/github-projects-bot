[
    {
        "project_id": 800632485,
        "content": "ðŸš€ <b>subtrace</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nView incoming and outgoing requests in Docker containers to resolve production issues faster\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Works out-of-the-box\nâ€¢ No code changes needed\nâ€¢ Supports all languages (Python + Node + Go + everything else)\nâ€¢ See full payload, headers, status code, and latency\nâ€¢ Less than 100Âµs performance overhead\n<br>\nðŸ“– <b>Summary:</b>\nSubtrace is a tool to debug Docker containers by viewing network requests.  It supports all major programming languages and requires no code changes.  It provides detailed request information with minimal performance overhead.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/subtrace/subtrace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://subtrace.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7d155d1abb81d514e59f9eb5237b674841baac5b6652ef0e2b8da2730fd43a85/subtrace/subtrace",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 908068887,
        "content": "ðŸ”¥ <b>google_photos_mobile_client</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUploading files to Google Photos without using a physical device or emulator\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uploads files to Google Photos as if from a Pixel XL device\nâ€¢ Provides both Python client and CLI interfaces\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a command-line interface and Python client for uploading files to Google Photos using reverse-engineered API.  It bypasses the need for a physical device or emulator, offering features like progress tracking, recursive uploads, and options for managing storage quota and post-upload file deletion. Authentication is handled using an androidId and app parameters obtained from a rooted Android device or emulator.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/xob0t/google_photos_mobile_client?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 249331466,
        "content": "ðŸŒŸ <b>laplace</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nScreen sharing directly via browser without requiring software installations or plugins\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ WebRTC for low latency peer-to-peer connections\nâ€¢ WebSocket implemented in golang for WebRTC signaling\nâ€¢ Screen sharing directly via browser\nâ€¢ No installation or registration required\nâ€¢ Low server cost because encoding and transmission are done on client browsers\n<br>\nðŸ“– <b>Summary:</b>\nLaplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Golang-based WebSocket for signaling.  It offers a simple, installation-free solution for screen sharing with low server costs, suitable for various use cases such as game streaming and remote collaboration.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/adamyordan/laplace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://laplace.adamjordan.id/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ce26d5c7332a7303970994d5c2b677a86c6abfaaca2cc8e2cc94812c3ee74046/adamyordan/laplace",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 853917967,
        "content": "ðŸ”¥ <b>fast-music-remover</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRemoving background music and noise from audio\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ background music filtering\nâ€¢ noise removal\nâ€¢ audio quality enhancement\nâ€¢ cross-platform support (Linux, macOS, Windows)\nâ€¢ containerized on GHCR\n<br>\nðŸ“– <b>Summary:</b>\nFast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It offers a web UI and is available as a container on GHCR, supporting cross-platform use. Future development includes real-time processing and additional ML models.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/omeryusufyagci/fast-music-remover?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d2f6dde957786f1317781fb6f6d3a21aa98eba5b3d13d18d480ea5f191b8b9e2/omeryusufyagci/fast-music-remover",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 49876476,
        "content": "ðŸ”¥ <b>shardingsphere</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData sharding, scaling, and encryption on any database\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed SQL transaction\nâ€¢ query engine for data sharding\nâ€¢ scaling\nâ€¢ encryption\n<br>\nðŸ“– <b>Summary:</b>\nShardingSphere is a distributed SQL transaction and query engine.  It's designed for data sharding, scaling, and encryption across various databases.  This allows for improved performance and security in database management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apache/shardingsphere?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ad2d3e83c4b99a362156675d394030af08fa5d028e34d9e2fcc5b837f99ab9e7/apache/shardingsphere",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 139199684,
        "content": "ðŸ”¥ <b>prefect</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nbuilding and managing data pipelines in Python\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ workflow orchestration\nâ€¢ data pipeline building\nâ€¢ scheduling\nâ€¢ caching\nâ€¢ retries\n<br>\nðŸ“– <b>Summary:</b>\nPrefect is a Python framework for building data pipelines.  It offers features like scheduling, caching, and retries to create resilient workflows.  These workflows can be monitored via a self-hosted server or Prefect Cloud.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrefectHQ/prefect?embed=0\">View Project</a>\nâ€¢ <a href=\"https://prefect.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/38de807adfe98381b0087a33f30edb1c970041a86974a07cc246dda449466126/PrefectHQ/prefect",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 577623124,
        "content": "ðŸ’¡ <b>VPet</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTo provide a virtual pet simulator that can be integrated into WPF applications or used as a standalone application.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source virtual pet simulator\nâ€¢ Integrates with WPF applications\nâ€¢ Supports modding via Steam Workshop and a dedicated mod maker\nâ€¢ Features numerous animations and interactions\nâ€¢ Provides tools for creating custom pet animations and interactions\n<br>\nðŸ“– <b>Summary:</b>\nVPet-Simulator is an open-source virtual pet simulator that can be integrated into WPF applications.  It features extensive animation and interaction capabilities, and supports modding through Steam Workshop and a dedicated mod maker for creating custom content and extending functionality.  Users can create custom pets, animations, and even add new features via code plugins.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/LorisYounger/VPet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5be308fee9ac5c84cc38e26bd6d90e080d8528389102db907941b6e3a7be45ab/LorisYounger/VPet",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 146327667,
        "content": "ðŸŒŸ <b>vector</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCollecting, transforming, and routing observability data (logs and metrics) to various vendors.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ High-performance observability data pipeline\nâ€¢ Collects, transforms, and routes logs and metrics\nâ€¢ Supports various data sources and destinations\nâ€¢ Built in Rust for reliability\nâ€¢ End-to-end agent and aggregator deployment\n<br>\nðŸ“– <b>Summary:</b>\nVector is a high-performance data pipeline written in Rust that collects, transforms, and routes logs and metrics.  It supports various sources and destinations, enabling users to manage observability data efficiently and reduce costs.  Vector is designed for reliability and offers both agent and aggregator deployment options.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vectordotdev/vector?embed=0\">View Project</a>\nâ€¢ <a href=\"https://vector.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/146327667/79b84380-28db-11eb-9bb0-13be8f3541cc",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 335164964,
        "content": "âœ¨ <b>dataease</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData analysis and business intelligence\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source BI tool\nâ€¢ Supports various data sources (OLTP, OLAP databases, data warehouses, data lakes, data files, APIs)\nâ€¢ Drag-and-drop interface for chart creation\nâ€¢ Data sharing capabilities\nâ€¢ Available as desktop and server versions\n<br>\nðŸ“– <b>Summary:</b>\nDataEase is an open-source BI tool that allows users to analyze data and gain insights into business trends.  It supports a wide range of data sources and offers a user-friendly drag-and-drop interface for creating charts and sharing data.  DataEase is available as both desktop and server versions, providing flexibility for various deployment scenarios.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dataease/dataease?embed=0\">View Project</a>\nâ€¢ <a href=\"https://dataease.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9202c1ff4c6b3479a324a880be6bb0798efc14b0ea737b729e7dd36d59e7e1c5/dataease/dataease",
        "platform": "telegram",
        "quality_score": 0.85
    }
]