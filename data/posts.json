[
    {
        "project_id": 334702754,
        "content": "ðŸŒŸ <b>KeyPass</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecurely store and manage passwords offline.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Offline password management\nâ€¢ Open Source\nâ€¢ Encrypted Backup and Restore\nâ€¢ Dark Mode Support\nâ€¢ Material Design 3\n<br>\nðŸ“– <b>Summary:</b>\nKeyPass is an open-source, offline password manager built with Kotlin. It allows users to securely store, manage, and generate passwords without relying on internet connectivity. Key features include encrypted backups, dark mode support, Material Design 3, biometric authentication, TOTP, and import/export functionality.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/yogeshpaliyal/KeyPass?embed=0\">View Project</a>\nâ€¢ <a href=\"https://github.yogeshpaliyal.com/KeyPass/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4be876bfa5d2fdd3ee3b755f5d0bb6ec8dffca4b6d48e42a0936d10f63b563c3/yogeshpaliyal/KeyPass",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 966383040,
        "content": "ðŸŒŸ <b>sxwm</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA tiling window manager for X11 environments, designed for users who want a minimal, fast, and configurable window management solution.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Tiling and Floating window management\nâ€¢ Workspace support\nâ€¢ Live configuration reload\nâ€¢ Easy configuration via sxwmrc file\nâ€¢ Master-Stack layout\n<br>\nðŸ“– <b>Summary:</b>\nsxwm is a lightweight and configurable tiling window manager for X11. It offers features like tiling and floating layouts, workspace support, live config reload, and mouse support. It's designed to be fast, dependency-free, and easily configurable through a human-friendly `sxwmrc` file.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/uint23/sxwm?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/8f4a825783551cd801e2a775491a05895bff4028f6d7db16d955962616fbbdc9/uint23/sxwm",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 120156076,
        "content": "ðŸŒŸ <b>Cloudreve</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted file management and sharing with multi-cloud support.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Supports multiple cloud storage providers (Local, Remote, Qiniu, Aliyun OSS, Tencent COS, Upyun, OneDrive, S3 compatible API)\nâ€¢ Direct transmission upload/download with speed limiting\n<br>\nðŸ“– <b>Summary:</b>\nCloudreve is a self-hosted file management system that supports multiple cloud storage providers, enabling users to store, share, and manage their files in a centralized location. It offers features like direct transmission upload/download, offline downloading via Aria2, WebDAV support, and customizable themes, providing a comprehensive solution for personal or organizational file management needs.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/cloudreve/Cloudreve?embed=0\">View Project</a>\nâ€¢ <a href=\"https://cloudreve.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ea85e3f730d1f0bf285832d6f358dfb7e8ae29b240d53acbeb6b334dd453de1a/cloudreve/Cloudreve",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 973783344,
        "content": "âœ¨ <b>suitcase-lock-recovery</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRecovering forgotten combinations for 3-digit suitcase locks.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Interactive 3D lock simulation with rotating dials\nâ€¢ Visual feedback for hole alignment\nâ€¢ Step-by-step guided recovery process\nâ€¢ Progress tracking for combinations tried\nâ€¢ Combination generator\n<br>\nðŸ“– <b>Summary:</b>\nThe Suitcase Lock Recovery Tool is a web-based application designed to help travelers recover forgotten combinations for their 3-digit suitcase locks. It uses an interactive 3D simulation and a guided process to exploit the mechanical design of the locks, significantly reducing the number of combinations needed to try.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Prajwalsrinvas/suitcase-lock-recovery?embed=0\">View Project</a>\nâ€¢ <a href=\"https://voyagevault.vercel.app?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/035d89b8d366278638c155fc839253c75b9a328ba90f85bb998a7098ad52d2df/Prajwalsrinvas/suitcase-lock-recovery",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 347277349,
        "content": "ðŸŒŸ <b>sqlglot</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nParsing, transpiling, optimizing, and formatting SQL queries across different dialects.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ SQL Parsing\nâ€¢ SQL Transpilation\nâ€¢ SQL Optimization\nâ€¢ SQL Dialect Conversion (24 dialects)\nâ€¢ Syntax Error Detection\n<br>\nðŸ“– <b>Summary:</b>\nSQLGlot is a Python library for parsing, transpiling, optimizing, and formatting SQL queries. It supports conversion between 24 different SQL dialects and provides features for syntax error detection, custom dialect support, and abstract syntax tree (AST) analysis and manipulation. It enables developers to work with SQL queries in a dialect-agnostic way.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tobymao/sqlglot?embed=0\">View Project</a>\nâ€¢ <a href=\"https://sqlglot.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b27dfd25103d090311c62abd0e22fd8f6f7f19a34b72cac92056d7117bac3a19/tobymao/sqlglot",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 407436572,
        "content": "âœ¨ <b>wowy</b> | Jinja\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding and managing a full-featured e-commerce platform.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Product Management (multi-image support, category management, stock tracking)\nâ€¢ Order Management (shopping cart, order tracking, PDF invoice generation)\nâ€¢ User Management (customer accounts, wishlist, multiple shipping addresses)\nâ€¢ Admin Dashboard (sales analytics, revenue tracking, customer analytics)\n<br>\nðŸ“– <b>Summary:</b>\nWOWY is a Django-based e-commerce platform designed for creating and managing online stores. It offers features such as product and order management, user accounts, an admin dashboard with analytics, payment integration, and a product variant system. The platform aims to provide a seamless shopping experience for customers and efficient administrative tools for store owners.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/manjurulhoque/wowy?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7f4d31029fabb2853c648667d9880503d38dd4bce057c8c129bb1b54585419a0/manjurulhoque/wowy",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 631258918,
        "content": "ðŸ’¡ <b>pandas-ai</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConversational data analysis using LLMs, allowing users to interact with their data using natural language.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Natural language interaction with data\nâ€¢ Integration with LLMs and RAG\nâ€¢ Support for SQL, CSV, and Parquet data sources\nâ€¢ Data visualization capabilities\nâ€¢ Multiple DataFrame support\n<br>\nðŸ“– <b>Summary:</b>\nPandasAI is a Python library that enables conversational data analysis by leveraging LLMs and RAG techniques. It allows users to interact with data from various sources like SQL databases, CSV files, and Parquet files using natural language. The library also supports data visualization and handling multiple DataFrames, making data analysis more accessible and efficient.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/sinaptik-ai/pandas-ai?embed=0\">View Project</a>\nâ€¢ <a href=\"https://getpanda.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/97c3634f3487ea5634e0db91b28404aea2e88b8a49b41ed98f4cc53bc0c410f3/sinaptik-ai/pandas-ai",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 894891699,
        "content": "ðŸŒŸ <b>PdfDing</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted PDF management, viewing, and editing.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Browser-based PDF viewing with remembered position\nâ€¢ Multi-level tagging, starring, and archiving\nâ€¢ PDF editing with comments, highlighting, and drawings\nâ€¢ Highlight and comment management and export\nâ€¢ Clean UI with dark mode and custom themes\n<br>\nðŸ“– <b>Summary:</b>\nPdfDing is a self-hosted PDF manager, viewer, and editor designed for seamless use across multiple devices. It offers features like tagging, starring, archiving, and editing PDFs with comments and highlights. The application provides a clean user interface with dark mode, SSO support, and the ability to share PDFs with external audiences.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mrmn2/PdfDing?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/370439d552796b83ec7193b16df01c6a1f36d807feed7d4edffd927bab8e344a/mrmn2/PdfDing",
        "platform": "telegram",
        "quality_score": 0.7499999999999999
    },
    {
        "project_id": 688232459,
        "content": "ðŸ”¥ <b>VTScanner</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFile scanning for malware detection and analysis.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Directory-based scanning\nâ€¢ Detailed scan reports\nâ€¢ Hash-based checks\nâ€¢ VirusTotal integration\nâ€¢ Time delay functionality for free VirusTotal accounts\n<br>\nðŸ“– <b>Summary:</b>\nVTScanner is a Python-based security tool designed for comprehensive file scanning and malware detection within specified directories. It integrates with the VirusTotal API to provide detailed scan reports, hash-based checks, and interactive exploration of VirusTotal results. The tool offers features for both free and premium VirusTotal API users, including time delay functionality and concurrent scanning support.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/samhaxr/VTScanner?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6b605f23bb9f86210aa14fd606511c30c4f10a26acd223ce6e14ba7cd8dd1951/samhaxr/VTScanner",
        "platform": "telegram",
        "quality_score": 0.3
    },
    {
        "project_id": 967096214,
        "content": "ðŸš€ <b>ml-comotion</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDetecting and tracking 3D poses of multiple people from a single camera in real-time, even in crowded and occluded environments.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Detects and tracks detailed 3D poses of multiple people from a single monocular camera stream.\n<br>\nðŸ“– <b>Summary:</b>\nThe CoMotion repository provides tools and scripts for detecting and tracking detailed 3D human poses from monocular video streams. It uses a combination of per-frame detection and learned pose updates to maintain temporally coherent predictions, even in crowded scenes with occlusions. The repository includes pretrained models, demo scripts, and visualization tools, supporting both video and single-image inputs.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apple/ml-comotion?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0a4e148dd2640a8db4ddddfeed091fdd2be2000fae267e291c06a800ed746a1a/apple/ml-comotion",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 969010919,
        "content": "ðŸ”¥ <b>dia</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating ultra-realistic dialogue from text transcripts, with the ability to control emotion and tone using audio prompts.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generates realistic dialogue from text\nâ€¢ Supports emotion and tone control via audio conditioning\nâ€¢ Produces nonverbal communications (laughter, coughing, etc.)\nâ€¢ Provides pretrained model checkpoints and inference code\n<br>\nðŸ“– <b>Summary:</b>\nDia is a text-to-speech model that generates highly realistic dialogue in a single pass. It allows for conditioning on audio to control emotion and tone, and can produce nonverbal cues. The repository provides access to pretrained model checkpoints and inference code for research purposes, focusing on English language generation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/nari-labs/dia?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/969010919/22e8e92e-9d9a-4966-867c-410500d411c8",
        "platform": "telegram",
        "quality_score": 0.85
    }
]