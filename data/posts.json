[
    {
        "project_id": 1071508564,
        "content": "ðŸ’¡ <b>Human3R</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\n4D human-scene reconstruction from video or image sequences.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Unified model for 4D human-scene reconstruction\nâ€¢ Single-stage inference\nâ€¢ Fast training (one day, one GPU)\nâ€¢ Includes scripts for downloading models and checkpoints\nâ€¢ Provides a demo script for running inference\n<br>\nðŸ“– <b>Summary:</b>\nThe Human3R repository provides a unified model for 4D human-scene reconstruction. It allows for inference in a single stage using one model and can be trained quickly using a single GPU. The model aims to reconstruct humans and their surrounding environment in 4D (3D space over time).\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/fanegg/Human3R?embed=0\">View Project</a>\nâ€¢ <a href=\"https://fanegg.github.io/Human3R/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/1fc1481a815c373c0b1337455fd8e0c2bba2dc7e269fc224510b655310954e6a/fanegg/Human3R",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 57313402,
        "content": "ðŸŒŸ <b>udocker</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nExecuting Docker containers in environments where root privileges are not available or Docker is not installed.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Execution of Docker containers without root privileges\nâ€¢ Support for multiple execution methods (PRoot, Fakechroot, runc, crun, Singularity)\nâ€¢ User-level installation and deployment\nâ€¢ Docker-like command-line interface\n<br>\nðŸ“– <b>Summary:</b>\nudocker is a Python-based tool that allows users to execute Docker containers in user space without requiring root privileges. It's designed for Linux systems where Docker is unavailable, such as batch systems and interactive clusters, enabling non-privileged users to pull and run containers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/indigo-dc/udocker?embed=0\">View Project</a>\nâ€¢ <a href=\"https://indigo-dc.github.io/udocker/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/57313402/1e941100-cefd-11eb-8401-f7c697943eba",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 47023494,
        "content": "ðŸŒŸ <b>qdirstat</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAnalyzing disk space usage and identifying large files and directories for cleanup on Linux, BSD, Unix-like systems, and macOS.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Tree view and treemap visualization of disk usage\nâ€¢ Multi-selection in tree and treemap\nâ€¢ User-defined cleanup actions\nâ€¢ Configurable file categories, treemap colors, exclude rules, and tree columns\n<br>\nðŸ“– <b>Summary:</b>\nQDirStat is a Qt-based graphical application for analyzing disk space usage on Linux, BSD, and other Unix-like systems, as well as macOS. It provides a tree view and treemap visualization of directories and files, allowing users to identify large files and directories for cleanup. It's a Qt-only port of the original KDirStat, without KDE dependencies.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/shundhammer/qdirstat?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/47023494/492cf880-57e6-11ea-8519-34aac78bc810",
        "platform": "telegram",
        "quality_score": 0.7500000000000001
    },
    {
        "project_id": 905697354,
        "content": "ðŸ”¥ <b>WhisperLiveKit</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReal-time speech-to-text transcription in a browser environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time speech transcription\nâ€¢ Fully local processing\nâ€¢ Speaker identification\nâ€¢ Low-latency transcription using SimulStreaming and WhisperStreaming\nâ€¢ Translation to over 100 languages using NLLB\n<br>\nðŸ“– <b>Summary:</b>\nWhisperLiveKit is a real-time, fully local speech-to-text server that transcribes audio directly to a browser. It leverages state-of-the-art research in simultaneous speech processing for low-latency transcription and speaker identification, offering a ready-to-use backend, server, and simple frontend.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/QuentinFuxa/WhisperLiveKit?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/fe7bd1cce47c0bafca5dfda72cafc6573d0f0562e474dd5f67b7f53e0248d2b3/QuentinFuxa/WhisperLiveKit",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 6899875,
        "content": "ðŸ”¥ <b>openproject</b> | Ruby\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProject management and team collaboration.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Project planning and scheduling\nâ€¢ Product roadmap and release planning\nâ€¢ Task management and team collaboration\nâ€¢ Agile and Scrum\nâ€¢ Time tracking, cost reporting, and budgeting\n<br>\nðŸ“– <b>Summary:</b>\nOpenProject is a web-based, open-source project management software designed to help teams manage projects, tasks, and goals. It offers features for project planning, task management, agile development, time tracking, and bug tracking, with integrations like GitHub to enhance collaboration.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/opf/openproject?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.openproject.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/6899875/8080e3ed-fedc-4a77-ba7c-d0cfc3025aca",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 978358198,
        "content": "ðŸš€ <b>compozy</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOrchestrating multi-agent AI systems for production-ready automation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Declarative Workflows\nâ€¢ Developer-Focused CLI with hot-reloading\nâ€¢ Advanced Task Orchestration (parallel, sequential, conditional)\nâ€¢ Extensible Tools (TypeScript/JavaScript)\nâ€¢ Multi-Model Support (OpenAI, Anthropic, Google, etc.)\n<br>\nðŸ“– <b>Summary:</b>\nCompozy is an agentic orchestration framework built in Go that simplifies the creation and management of multi-agent AI systems. It uses declarative YAML to define workflows and offers features like advanced task orchestration, multi-model support, and enterprise-ready capabilities for building scalable and reliable AI applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/compozy/compozy?embed=0\">View Project</a>\nâ€¢ <a href=\"https://compozy.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b6dafc3884581d099fe7ff4d9c4ad343a28c1dab381837468be11289d131ce43/compozy/compozy",
        "platform": "telegram",
        "quality_score": 0.65
    }
]