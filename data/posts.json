[
    {
        "project_id": 912559512,
        "content": "ðŸš€ <b>sim</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding and deploying AI agent workflows.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI agent workflow builder\nâ€¢ Lightweight and intuitive interface\nâ€¢ Low-code/no-code platform\nâ€¢ Self-hosting options (NPM, Docker Compose, Dev Containers)\nâ€¢ Support for local models\n<br>\nðŸ“– <b>Summary:</b>\nSim Studio is an open-source AI agent workflow builder that provides a lightweight and intuitive interface for quickly building and deploying LLMs. It offers various self-hosting options and supports integration with local models, enabling users to create and manage AI agents for diverse applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/simstudioai/sim?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.simstudio.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5ecc51a8eb467b47e88c65bf64054ff18dc84776ae4bef1efc9aacf881815d45/simstudioai/sim",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 783343310,
        "content": "ðŸŒŸ <b>ConvertX</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted online file conversion supporting a wide variety of formats.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Convert files to different formats\nâ€¢ Process multiple files at once\nâ€¢ Password protection\nâ€¢ Multiple accounts\n<br>\nðŸ“– <b>Summary:</b>\nConvertX is a self-hosted online file converter that supports over a thousand different formats. It allows users to convert files to different formats, process multiple files at once, and offers features like password protection and multiple accounts. The application is built using TypeScript, Bun, and Elysia.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/C4illin/ConvertX?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/783343310/5c97fe6b-0ba3-4d51-b04c-704d93920842",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1014961703,
        "content": "ðŸ’¡ <b>nvidia-driver-installer</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomating the installation of NVIDIA drivers on various Linux distributions.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Automated NVIDIA driver installation\nâ€¢ Supports multiple Linux distributions\nâ€¢ Uses package managers (dnf, apt, zypper) for installation\nâ€¢ Provides a highly automated installation experience\n<br>\nðŸ“– <b>Summary:</b>\nThe repository provides a universal NVIDIA driver installation script for multiple Linux distributions. It automates the installation process using package managers, eliminating the need for manual driver downloads and execution. The script aims to simplify and streamline NVIDIA driver installation across different Linux environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/EM-GeekLab/nvidia-driver-installer?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4e84664caf8e4eae7d3917ff988f5a69c55baad981d8a0ab15f1b311d0639391/EM-GeekLab/nvidia-driver-installer",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 630196988,
        "content": "âœ¨ <b>wl-kbptr</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nControl the mouse pointer using the keyboard on Wayland compositors.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Controls mouse pointer with keyboard\nâ€¢ Supports multiple modes: floating, tile, bisect, split, and click\nâ€¢ Floating mode supports auto-detection of areas using OpenCV\n<br>\nðŸ“– <b>Summary:</b>\nThe wl-kbptr utility enables users to control the mouse pointer with the keyboard on Wayland. It offers various modes like floating, tile, bisect, split, and click for precise pointer control. The floating mode can automatically detect target areas using OpenCV, and it supports compositors implementing the wlr-layer-shell-unstable-v1 and wlr-virtual-pointer-unstable-v1 protocols.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/moverest/wl-kbptr?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/438a0e88bde0bd7993bd221d9fdfbcc8dae300be616230fae736714fe038a02e/moverest/wl-kbptr",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 784546140,
        "content": "ðŸš€ <b>reader</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConverting web content and search results into a format easily digestible by Large Language Models (LLMs) for improved performance in tasks like RAG and agent systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Converts URLs to LLM-friendly input\nâ€¢ Web search functionality with LLM-friendly output\nâ€¢ Free, stable, and scalable API\n<br>\nðŸ“– <b>Summary:</b>\nThe 'Reader' repository provides a service to convert any URL into an LLM-friendly input, improving the performance of LLMs in tasks like RAG and agent systems. It offers both a URL-to-text conversion service and a web search service that returns the top 5 results in an LLM-friendly format. The service is provided via a free, stable, and scalable API.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jina-ai/reader?embed=0\">View Project</a>\nâ€¢ <a href=\"https://jina.ai/reader?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/784546140/b70d20c4-e318-441a-ab24-feebf7c58d75",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 322484700,
        "content": "ðŸš€ <b>jj</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVersion control for software projects\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Git-compatible VCS\nâ€¢ Easy to use\nâ€¢ Abstracts user interface and version control algorithms from storage systems\nâ€¢ Mercurial-inspired features (revsets, anonymous branches)\nâ€¢ First-class conflict objects (inspired by Darcs)\n<br>\nðŸ“– <b>Summary:</b>\nJujutsu is a Git-compatible version control system designed for ease of use and powerful history manipulation. It abstracts the user interface from the storage layer, allowing for different backends. It incorporates features from Git, Mercurial, and Darcs to provide a flexible and efficient version control experience.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jj-vcs/jj?embed=0\">View Project</a>\nâ€¢ <a href=\"https://jj-vcs.github.io/jj/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/730497010398521932214750d3a25d01ae4cd1e398f442248abaff3efbc7fbf5/jj-vcs/jj",
        "platform": "telegram",
        "quality_score": 0.85
    }
]