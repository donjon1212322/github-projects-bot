[
    {
        "project_id": 949513917,
        "content": "ðŸ’¡ <b>adb-mcp</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling AI/LLMs to control Adobe Photoshop and Premiere Pro for task automation, conversational interaction, and template creation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Enables AI control of Adobe Photoshop and Premiere Pro via the MCP protocol.\nâ€¢ Provides a conversational interface for interacting with Adobe tools.\n<br>\nðŸ“– <b>Summary:</b>\nThe adb-mcp repository is a proof-of-concept project that allows AI models to control Adobe Photoshop and Premiere Pro through the MCP protocol. It provides a MCP server, a Node-based proxy server, and Adobe UXP plugins to facilitate communication between AI clients and Adobe applications. This enables use cases such as conversational control of Adobe tools, automated task execution, and AI-driven template creation.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/mikechambers/adb-mcp?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/08c2388ce18bb08a4d7f208288eca63f385e1ef2298ed87b79c933d7ddc1715a/mikechambers/adb-mcp",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1007175454,
        "content": "ðŸŒŸ <b>browsernode</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nConnecting AI agents with web browsers to automate tasks and access online information.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Enables AI agents to interact with websites.\nâ€¢ Automates online tasks.\nâ€¢ Compatible with Browser-use APIs.\nâ€¢ Provides both CommonJS and ESM style examples.\nâ€¢ Includes demos for custom functions and use cases.\n<br>\nðŸ“– <b>Summary:</b>\nBrowsernode is a TypeScript library that allows AI agents to control web browsers, enabling automation of online tasks. It is compatible with Browser-use APIs and offers examples for various use cases, including data extraction and document creation. The library supports both CommonJS and ESM module styles.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/leoning60/browsernode?embed=0\">View Project</a>\nâ€¢ <a href=\"https://browsernode.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5143499a0e72aed3862a88fcb7e735bdba1a2929154025f1fa234aca4b2d48d1/leoning60/browsernode",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 1006445678,
        "content": "âœ¨ <b>unhype</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nNeutralizing sensational or exaggerated headlines on web pages to provide a more balanced and factual reading experience.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Unhypes/neutralizes headers on the web\nâ€¢ Configurable content selection via selectors\nâ€¢ LLM integration for content transformation\nâ€¢ Support for multiple LLM providers (Ollama, OpenRouter, Mistral AI)\n<br>\nðŸ“– <b>Summary:</b>\nThe unhype browser extension neutralizes sensational headlines on web pages using LLM technology. It allows users to configure which content is processed and supports multiple LLM providers, including Ollama, OpenRouter, and Mistral AI. The extension aims to provide a more balanced and factual reading experience by removing hype from online content.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/av/unhype?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c573b823f18410ce03bcc800b6215fc88bb09b6faaa6395c022ba4d828aff984/av/unhype",
        "platform": "telegram",
        "quality_score": 0.5499999999999999
    },
    {
        "project_id": 1034865400,
        "content": "ðŸš€ <b>polygon-screenshot-tool</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCapturing screenshots of polygon-defined areas on Windows.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Polygon Selection\nâ€¢ Global Hotkey Activation\nâ€¢ System Tray Integration\nâ€¢ High-DPI Support\nâ€¢ Clipboard Integration\n<br>\nðŸ“– <b>Summary:</b>\nThe Polygon Screenshot Tool is a Windows service that allows users to capture screenshots of irregular shapes defined by drawing a polygon. It runs in the system tray, is activated by a global hotkey, and copies the captured image directly to the clipboard, offering a fast and lightweight solution for capturing specific areas of the screen.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/sultanate-sultan/polygon-screenshot-tool?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0ba03345a0ad66ffb6b7348c3f5ec993bec66c088ca7f6c74b2014b0357f5f97/sultanate-sultan/polygon-screenshot-tool",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 208728772,
        "content": "ðŸš€ <b>milvus</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEfficiently organizing and searching vast amounts of unstructured data (text, images, multi-modal) for AI applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ High-performance vector database\nâ€¢ Scalable vector ANN search\nâ€¢ Cloud-native architecture\nâ€¢ Hardware acceleration (CPU/GPU)\nâ€¢ Fully-distributed and K8s-native\n<br>\nðŸ“– <b>Summary:</b>\nMilvus is a high-performance, cloud-native vector database designed for scalable vector ANN search. It excels at organizing and searching large volumes of unstructured data, supporting various AI applications. Milvus offers features like hardware acceleration, distributed architecture, real-time updates, and a lightweight Python version for quick starts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/milvus-io/milvus?embed=0\">View Project</a>\nâ€¢ <a href=\"https://milvus.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/208728772/998c09ca-cfa6-4c01-ac75-3dfad7f4862b",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 5349565,
        "content": "ðŸš€ <b>presto</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAnalyzing large datasets using SQL queries across distributed systems.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed SQL query engine\nâ€¢ Big data processing\nâ€¢ Supports Java 8+\nâ€¢ Maven build system\nâ€¢ Hive connector\n<br>\nðŸ“– <b>Summary:</b>\nPresto is a distributed SQL query engine designed for big data analytics. It allows users to query data stored in various sources, such as Hive and Hadoop, using standard SQL. The project is built with Java and uses Maven for dependency management and building.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/prestodb/presto?embed=0\">View Project</a>\nâ€¢ <a href=\"http://prestodb.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/5349565/33e38c80-023e-11ea-96e6-40042ef6e9c7",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 28473847,
        "content": "âœ¨ <b>walrus</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSimplifying interaction with Redis in Python by extending redis-py with higher-level abstractions and additional features.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Pythonic container classes for Redis data types\nâ€¢ Autocomplete\nâ€¢ Cache implementation with decorators\nâ€¢ Full-text search\nâ€¢ Graph store\n<br>\nðŸ“– <b>Summary:</b>\nWalrus is a Python library that simplifies working with Redis by extending the popular redis-py client. It provides Pythonic container classes for Redis data types, along with features like autocomplete, caching, full-text search, graph store, and experimental models, making it easier to build applications that leverage Redis.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/coleifer/walrus?embed=0\">View Project</a>\nâ€¢ <a href=\"https://walrus.readthedocs.org/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9ce6e249492c67217acdcd948560f4ab4048af885befcf436dd59ea0f2292f6e/coleifer/walrus",
        "platform": "telegram",
        "quality_score": 0.6
    }
]