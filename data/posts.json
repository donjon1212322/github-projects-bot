[
    {
        "project_id": 847536268,
        "content": "ðŸŒŸ <b>ggh</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nQuickly recall and execute SSH sessions from history or SSH config file.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Recalls SSH sessions\nâ€¢ Searches SSH config file\nâ€¢ Interactive list of previous sessions\nâ€¢ Interactive filtered list of SSH config listings\nâ€¢ Non-interactive list of history and config\n<br>\nðŸ“– <b>Summary:</b>\nGGH is a Go-based utility that helps users quickly recall and execute SSH sessions. It allows users to search their SSH history and SSH config file, providing an interactive list of previous sessions and config listings. GGH acts as a wrapper around SSH, streamlining the process of connecting to remote servers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/byawitz/ggh?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/847536268/2d789280-a752-4a1d-a53c-0e834801e475",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 957782869,
        "content": "ðŸš€ <b>KeyForge3D</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReplicating keys using 3D printing based on a photo.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Key Shape Extraction from photo\nâ€¢ Bitting Analysis\nâ€¢ 3D Model Generation\nâ€¢ STL Export\nâ€¢ User-Friendly GUI\n<br>\nðŸ“– <b>Summary:</b>\nKeyForge3D is an application that allows users to create 3D-printable models of keys from photographs. It extracts the key's shape, analyzes the bitting pattern, generates a 3D model, and exports it as an STL file, making it useful for locksmiths and hobbyists who need to quickly replicate keys.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/makalin/KeyForge3D?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a3b95e1b3b0ed6adc8df1c9f6b5edabb09d3738ba9caca3cc83050f3304d490b/makalin/KeyForge3D",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 958975943,
        "content": "âœ¨ <b>bird-photos-classifier</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOrganizing bird photos by species using AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Identifies bird species in photos using Google's Gemini AI\nâ€¢ Organizes photos into folders based on identified bird species\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a Python script that leverages Google's Gemini AI to identify bird species within photographs. It then automatically organizes these photos into distinct folders, each named after the identified bird species. This tool is particularly useful for bird photographers who need assistance in managing and categorizing their extensive collections of bird photos.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/madhavanmalolan/bird-photos-classifier?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/dff227102155dd00f6f3246be348c6986bccc0f5961a5d3587472f554b8b08e9/madhavanmalolan/bird-photos-classifier",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 836259792,
        "content": "ðŸ’¡ <b>netnscli</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating and managing local network testbeds for testing and experimentation.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Creates local network testbeds\nâ€¢ Manages network namespaces\nâ€¢ Uses YAML configurations\nâ€¢ Generates shell scripts from YAML\n<br>\nðŸ“– <b>Summary:</b>\nNetNSCLI is a Go-based CLI tool that simplifies the creation and management of local network testbeds. It uses YAML configurations to define network namespaces and their interconnections, allowing users to easily create, delete, and manage complex network environments for testing and development purposes. It can also generate shell scripts from YAML configurations for manual setup.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/pinoOgni/netnscli?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/836259792/0ab3f486-43ff-4504-8a8d-c9db409ff9c7",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 15019962,
        "content": "ðŸ’¡ <b>tldr</b> | Markdown\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding concise and practical examples for command-line tools to simplify their usage and make them more accessible to users of all levels.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Community-maintained help pages for command-line tools\nâ€¢ Simpler and more approachable alternative to traditional man pages\n<br>\nðŸ“– <b>Summary:</b>\nThe tldr-pages repository offers a community-driven collection of simplified help pages for command-line tools, serving as a more approachable alternative to traditional man pages. It provides practical examples for common commands across various operating systems, accessible through multiple client options, making command-line usage easier for both beginners and experienced users.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/tldr-pages/tldr?embed=0\">View Project</a>\nâ€¢ <a href=\"https://tldr.sh?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/15019962/aa6a8d00-b4a3-11ea-92f4-5cca1da75be2",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    },
    {
        "project_id": 917864037,
        "content": "ðŸš€ <b>isd</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nInteractive management of systemd units.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Quickly switch between system and user units\nâ€¢ Fuzzy search units\nâ€¢ Auto refresh previews\nâ€¢ Quickly open outputs in a pager or editor\nâ€¢ Auto sudo prefixing if required\n<br>\nðŸ“– <b>Summary:</b>\nThe `isd` repository provides an interactive TUI for managing systemd units, offering features like fuzzy searching, auto-refreshing previews, and customizable keybindings. It simplifies systemd management for both power users and newcomers by providing a more intuitive and efficient way to interact with systemd.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/isd-project/isd?embed=0\">View Project</a>\nâ€¢ <a href=\"https://isd-project.github.io/isd/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7b888b00147055af91a73f886f5a27c38f137129796d012772708742269d1501/isd-project/isd",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 724970183,
        "content": "âœ¨ <b>FlexibleBottomSheet</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating flexible and customizable bottom sheet components in Jetpack Compose Multiplatform applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Segmented sizing\nâ€¢ Non-modal type\nâ€¢ Interaction behind the bottom sheet\nâ€¢ Customizable sheet sizes\nâ€¢ Sheet state monitoring\n<br>\nðŸ“– <b>Summary:</b>\nFlexibleBottomSheet is a Kotlin library that provides an advanced Compose Multiplatform bottom sheet implementation. It offers features like segmented sizing, a non-modal behavior allowing interaction behind the sheet, and extensive customization options for sheet sizes and state management. The library is designed for Android applications using Jetpack Compose and Kotlin Multiplatform.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/skydoves/FlexibleBottomSheet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/724970183/09de9bcc-777e-4ee9-959c-0b2205dc8be6",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 90507660,
        "content": "ðŸš€ <b>java-interview</b> | Batchfile\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPreparing for Java developer interviews\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Java interview questions and answers\nâ€¢ Covers topics like OOP, JVM, Java Core, Collections, Multithreading, Databases, and more\nâ€¢ Includes questions on design patterns, web technologies, and testing\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a comprehensive collection of Java interview questions and answers, covering a wide range of topics relevant to Java development. It serves as a valuable resource for Java developers preparing for job interviews, helping them to review key concepts and practice answering common interview questions.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/enhorse/java-interview?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e0fdcebc909a922705879550e1241902954e67d0a138a890ce67a2cc6bf345fd/enhorse/java-interview",
        "platform": "telegram",
        "quality_score": 0.7000000000000001
    },
    {
        "project_id": 855638312,
        "content": "âœ¨ <b>segmantix</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling granular data access control on the user/role/tenant level in Java applications.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Multi-Tenancy Support\nâ€¢ Role-Based Access Control\nâ€¢ User-Level Permissions\nâ€¢ Instance Group Management\nâ€¢ Wildcard Access\n<br>\nðŸ“– <b>Summary:</b>\nSegmantiX is a Java library that provides robust multi-tenancy and data access control. It offers fine-grained security controls for managing permissions across users, roles, tenants, and instance groups. The library supports features like wildcard access, restricted data access, and operation-specific access, making it suitable for applications requiring secure and isolated environments.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/wizzdi/segmantix?embed=0\">View Project</a>\nâ€¢ <a href=\"https://wizzdi.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/750ba9d102a93a092e5330d4fc21f0f784ba050ad6add94abebbb8b136a08900/wizzdi/segmantix",
        "platform": "telegram",
        "quality_score": 0.6
    },
    {
        "project_id": 5389577,
        "content": "ðŸŒŸ <b>jsfuck</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEsoteric and educational programming using a limited character set.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Write JavaScript code using only six characters: `[]()!+`\nâ€¢ Can be run in Node.js environment\nâ€¢ Educational programming style\n<br>\nðŸ“– <b>Summary:</b>\nJSFuck is an esoteric JavaScript programming style that allows developers to write and execute code using only six characters. It is intended for educational purposes and can be run in environments like Node.js. The project demonstrates the flexibility and underlying mechanics of the JavaScript language.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/aemkei/jsfuck?embed=0\">View Project</a>\nâ€¢ <a href=\"jsfuck.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c2d8f87930bb99d05f0858806a88144a9accf9da523a4697a8b317b3b3081f80/aemkei/jsfuck",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    }
]