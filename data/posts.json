[
    {
        "project_id": 1064663442,
        "content": "ðŸš€ <b>flareprox</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating HTTP proxies with IP rotation and URL redirection using Cloudflare Workers.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ HTTP Support for all methods (GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD)\nâ€¢ Simple URL Redirection\nâ€¢ Global Network via Cloudflare CDN\nâ€¢ Free Tier (100,000 requests per day)\nâ€¢ Easy Deployment\n<br>\nðŸ“– <b>Summary:</b>\nFlareProx is a Python tool that simplifies the creation of HTTP pass-through proxies using Cloudflare Workers. It enables IP rotation and URL redirection, masking the original IP address through Cloudflare's global network, and supports all HTTP methods, offering a free tier of 100,000 requests per day.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/MrTurvey/flareprox?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/05328c5f87a5b68fc8959ea14a6102b514c9c9f65c93e9596c9ebc476f1f67ca/MrTurvey/flareprox",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 693752164,
        "content": "ðŸš€ <b>basalt</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nManaging Obsidian notes and vaults directly from the terminal for quick editing and access without disrupting the terminal workflow.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ TUI for Obsidian note management\nâ€¢ Cross-platform support (Windows, macOS, Linux)\nâ€¢ WYSIWYG markdown editor in the terminal\nâ€¢ Customizable key mappings\nâ€¢ CLI functionality for note operations (find, delete, create)\n<br>\nðŸ“– <b>Summary:</b>\nBasalt is a terminal-based user interface (TUI) application designed for managing Obsidian vaults and notes directly from the command line. It provides a minimalist approach to note management, offering readable markdown rendering and a WYSIWYG experience, aiming to complement Obsidian by enabling quick note editing without leaving the terminal.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/erikjuhani/basalt?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2faff0abf04d8faaba85371637f95e2afe2f09b0bab0602adf2fcd3be4033eb2/erikjuhani/basalt",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 1055435059,
        "content": "ðŸ”¥ <b>EdgeBox</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDeveloping and testing AI agents with 'Computer Use' capabilities in a local, controlled environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Full Desktop Environment (Computer Use)\nâ€¢ Complete Code Interpreter & Shell\nâ€¢ Seamless LLM Agent Integration (via MCP)\nâ€¢ GUI and CLI interface\nâ€¢ Local execution environment\n<br>\nðŸ“– <b>Summary:</b>\nEdgeBox is a local LLM agent sandbox that provides a fully-featured GUI and CLI environment for developing and executing AI agents. It's based on the E2B open-source project and offers complete MCP protocol support, enabling agents to interact with browsers, terminals, and desktop applications locally.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/BIGPPWONG/EdgeBox?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/983fc81b5c7429af2bc398d2f4315a046f18e43d7482c09b936509e4c20af958/BIGPPWONG/EdgeBox",
        "platform": "telegram",
        "quality_score": 0.7999999999999999
    },
    {
        "project_id": 994110247,
        "content": "ðŸš€ <b>takumi</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nHigh-throughput image rendering (e.g., Open Graph images, Twitter images) from React components.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ React components to image rendering\nâ€¢ Node.js bindings\nâ€¢ WebAssembly bindings\nâ€¢ RTL support\nâ€¢ Variable fonts support\n<br>\nðŸ“– <b>Summary:</b>\nTakumi is a Rust-based image rendering engine that provides bindings for Node.js and WebAssembly. It's designed for high-throughput image rendering workloads, such as generating Open Graph and Twitter images, by allowing developers to render React components to images.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/kane50613/takumi?embed=0\">View Project</a>\nâ€¢ <a href=\"https://takumi.kane.tw?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/994110247/53306eb4-2f69-4169-b4f5-5fea92b9f1c4",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 728438436,
        "content": "ðŸ’¡ <b>mesh2motion-app</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAutomatically assigning and exporting animations for 3D models.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Import 3D models (GLB/GLTF format)\nâ€¢ Skeleton type selection\nâ€¢ Skeleton modification and fitting\nâ€¢ Animation testing\nâ€¢ Animation selection and export (GLB/GLTF format)\n<br>\nðŸ“– <b>Summary:</b>\nThe mesh2motion-app repository provides a tool for importing 3D models and automatically assigning and exporting animations. It aims to offer more flexibility than existing tools like Mixamo by supporting various model and skeleton types. The application allows users to import models, select skeleton types, adjust the skeleton to fit the model, test animations, and export the results.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/scottpetrovic/mesh2motion-app?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/0d25122433b4cca88dfcd1f695567e0df9485fd90433613ba8ef0e2262c38fef/scottpetrovic/mesh2motion-app",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 1039227029,
        "content": "âœ¨ <b>doxx</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nViewing, searching, and exporting `.docx` documents from the command line.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Beautiful terminal rendering with formatting, tables, and lists\nâ€¢ Fast search with highlighting\nâ€¢ Smart tables with proper alignment and Unicode borders\nâ€¢ Copy to clipboard\nâ€¢ Export formats (Markdown, CSV, JSON, plain text, ANSI-colored output)\n<br>\nðŸ“– <b>Summary:</b>\ndoxx is a command-line tool written in Rust that allows users to view, search, and export `.docx` files directly in their terminal without requiring Microsoft Word. It supports features like formatted text, tables, lists, search highlighting, and export to various formats like Markdown, CSV, and plain text.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bgreenwell/doxx?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bgreenwell.github.io/doxx/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f9d16aac640c9455198b258cca25a54c337323dbffb05154bde985b197485fc5/bgreenwell/doxx",
        "platform": "telegram",
        "quality_score": 1.1000000000000003
    },
    {
        "project_id": 1006267824,
        "content": "ðŸ’¡ <b>clip-vault</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSecurely managing and accessing clipboard history across multiple platforms.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ End-to-end encryption using SQLCipher\nâ€¢ Cross-platform support (macOS, Windows, Linux)\nâ€¢ Fast search for clipboard items\nâ€¢ Global hotkeys for easy access\n<br>\nðŸ“– <b>Summary:</b>\nClip Vault is a secure, cross-platform clipboard manager built with Rust and Tauri. It automatically captures and encrypts clipboard history, making it searchable and accessible across macOS, Windows, and Linux.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/densumesh/clip-vault?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7d9a5ee4c8cea0453af24429d63ea6c6fa13df2bbcfe0a557ea83a5bf4a68c59/densumesh/clip-vault",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 1001684671,
        "content": "ðŸŒŸ <b>RapidRAW</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRAW image editing and color correction for photographers seeking a fast and intuitive workflow.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ GPU-accelerated image processing\nâ€¢ Non-destructive editing\nâ€¢ RAW image support\nâ€¢ Color grading tools\nâ€¢ Masking capabilities\n<br>\nðŸ“– <b>Summary:</b>\nRapidRAW is a GPU-accelerated RAW image editor designed for performance and a streamlined user experience. It offers non-destructive editing capabilities and aims to be a lightweight alternative to software like Adobe Lightroom, focusing on speed and ease of use for photographers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/CyberTimon/RapidRAW?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e6ceeeced8e099208ca57a0b78f1bf159118a576cc2366c5daa8788e085360e4/CyberTimon/RapidRAW",
        "platform": "telegram",
        "quality_score": 0.85
    }
]