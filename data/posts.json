[
    {
        "project_id": 938279809,
        "content": "ðŸŒŸ <b>desktop_homunculus</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA cross-platform desktop pet application that brings intelligent 3D VRM characters to life on your desktop, allowing for AI-powered conversations, custom animations, and interactions with your workflow.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI-Powered Chat Integration (ChatGPT, VoiceVox)\nâ€¢ Advanced VRM Character System (Multiple Models, VRMA Support)\n<br>\nðŸ“– <b>Summary:</b>\nDesktop Homunculus is a Rust-based application that uses the Bevy game engine to create interactive desktop pets. It features AI-powered chat integration with ChatGPT and VoiceVox, advanced VRM character support, and an extensible MOD system for customization. The application aims to enhance the user experience by providing a personalized and engaging desktop companion.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/not-elm/desktop_homunculus?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/ac5be8dcf3412b65b9a17c67290387bc80b9e37596f49ca4b17e2fcf19525ce6/not-elm/desktop_homunculus",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 1029255337,
        "content": "ðŸ’¡ <b>rallies-cli</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nIntelligent investment research and analysis using real-time financial data and AI.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ AI-powered investment research\nâ€¢ Real-time financial data integration\nâ€¢ ChatGPT-like conversational interface for trading and investment analysis\n<br>\nðŸ“– <b>Summary:</b>\nRallies-cli is an AI-powered investment research tool that combines the conversational abilities of AI with real-time financial data. It allows traders and investors to perform complex queries, analyze market trends, and gain insights that are not readily available with traditional tools like ChatGPT due to their lack of real-time data. The tool provides functionalities for technical analysis, news monitoring, and advanced market analysis.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/ralliesai/rallies-cli?embed=0\">View Project</a>\nâ€¢ <a href=\"https://rallies.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e1d8749ae201bf1f704e0a59b2abe3840ca12f8738fd6346bfd416b5fe733e29/ralliesai/rallies-cli",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 1029413969,
        "content": "ðŸš€ <b>AgentGuard</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nPreventing runaway costs in AI agent development by monitoring token usage and terminating processes when a defined budget is exceeded.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Real-time monitoring of AI API costs\nâ€¢ Automatic process termination when budget limit is reached\nâ€¢ Multiple protection modes (throw, notify, kill)\nâ€¢ Detailed savings reports\n<br>\nðŸ“– <b>Summary:</b>\nAgentGuard is a real-time guardrail for AI agents that monitors token spend and automatically stops execution when a defined cost limit is reached. It helps developers avoid unexpected high costs due to infinite loops or other bugs in their AI workflows by providing immediate feedback and control over API usage.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/dipampaul17/AgentGuard?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/90496f7a047354f79dbbdd4f9c5d322aa22429895c6b7286ff7ab7cc46a6636c/dipampaul17/AgentGuard",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 1020609153,
        "content": "ðŸ”¥ <b>Bella</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA digital companion that provides voice-based interaction, visual expression, and AI-powered dialogue.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Voice Perception (Whisper ASR)\nâ€¢ Visual Expression (video playback with cross-fading)\nâ€¢ User Interface (elegant and responsive)\nâ€¢ AI Core Architecture (modular design)\nâ€¢ Web Service (HTTP server, CORS support)\n<br>\nðŸ“– <b>Summary:</b>\nBella AI is a digital companion built with JavaScript, Node.js, and AI models like Whisper and a local LLM. It offers voice perception, visual expression, and enhanced LLM dialogue, aiming to create a personalized and interactive experience. The project envisions a digital friend that evolves and grows with the user.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Jackywine/Bella?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/b0ea01066dfa980d2e801cac408ae6932060b816a5a5b32827e048789f5e6d2a/Jackywine/Bella",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 873956523,
        "content": "ðŸ”¥ <b>say</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVoice transcription and note-taking within a browser environment.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Browser-based Recording\nâ€¢ ML-Powered Transcription\nâ€¢ Rich Text Editing\nâ€¢ Audio Visualization\nâ€¢ Local Storage\n<br>\nðŸ“– <b>Summary:</b>\nSay is a voice transcription app that converts speech to text using machine learning directly in the browser. It offers features such as browser-based recording, rich text editing, audio visualization, and local storage, all within a modern and responsive user interface. The app is built with React, TypeScript, and utilizes technologies like Transformers.js and Tailwind CSS.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/addyosmani/say?embed=0\">View Project</a>\nâ€¢ <a href=\"https://say.addy.ie?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/047ff638c961c05cc25ea1dcdd8a5a8ab1dc765b25217cb313e09df6d1578429/addyosmani/say",
        "platform": "telegram",
        "quality_score": 0.45
    },
    {
        "project_id": 901023446,
        "content": "ðŸŒŸ <b>mcp-knowledge-graph</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding AI models with persistent memory by storing and retrieving information from a local knowledge graph.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Persistent memory for AI models\nâ€¢ Local knowledge graph storage\nâ€¢ Customizable memory path\nâ€¢ Entities, Relations, and Observations data model\nâ€¢ API for creating, deleting, and reading entities, relations, and observations\n<br>\nðŸ“– <b>Summary:</b>\nThe `mcp-knowledge-graph` repository provides a local knowledge graph memory server for AI models, enabling persistent memory across chats. It utilizes entities, relations, and observations to structure knowledge and offers an API for managing the knowledge graph. This allows AI models to remember user information and context.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/shaneholloman/mcp-knowledge-graph?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/633f6c62ce52644a66260b3775c28f1d8cc597b8da7a0cddfdd37c52140056c6/shaneholloman/mcp-knowledge-graph",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    }
]