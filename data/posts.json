[
    {
        "project_id": 149112365,
        "content": "ðŸ”¥ <b>Videomass</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nProviding a graphical interface to FFmpeg for video and audio conversion and manipulation tasks.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform support\nâ€¢ GUI for FFmpeg\nâ€¢ Multitasking\nâ€¢ Wide range of features for video/audio conversion\nâ€¢ Beginner and advanced user friendly\n<br>\nðŸ“– <b>Summary:</b>\nVideomass is a free, open-source, and cross-platform GUI for FFmpeg. It's designed for both advanced and beginner users, offering a wide range of features for video and audio conversion and manipulation. The application is built with Python and wxPython, supporting Linux, macOS, Windows, and FreeBSD.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/jeanslack/Videomass?embed=0\">View Project</a>\nâ€¢ <a href=\"https://jeanslack.github.io/Videomass/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/f4a1d93871b7833cc60aba227137eb3a1e2bd3f6f830aa01a3b40003a053d429/jeanslack/Videomass",
        "platform": "telegram",
        "quality_score": 0.8499999999999999
    },
    {
        "project_id": 1057588813,
        "content": "ðŸš€ <b>neo_multiseat</b> | PowerShell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling multiple users to work simultaneously on a single Windows PC, suitable for pair programming, family use, or lab setups.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ One script for end-to-end multi-seat configuration\nâ€¢ User account management (create, reset password)\nâ€¢ Automatic .rdp file generation\nâ€¢ Support for multiple concurrent user sessions\nâ€¢ Automatic updates and configuration management\n<br>\nðŸ“– <b>Summary:</b>\nThe neo_multiseat repository provides a PowerShell script to enable multiple users to simultaneously use a single Windows PC via Remote Desktop. It simplifies the process of creating and managing extra seats, offering features like user management, automatic updates, and built-in troubleshooting.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/neo0oen619/neo_multiseat?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/c797dcfd656b59c8f8a364bc68119863f3f4902809a72a89c14625fb09152452/neo0oen619/neo_multiseat",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 985853356,
        "content": "ðŸŒŸ <b>octelium</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUnified Zero Trust Secure Access Platform\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Remote Access VPN\nâ€¢ ZTNA/BeyondCorp Architecture\nâ€¢ Secure Tunnels (ngrok alternative)\nâ€¢ PaaS\nâ€¢ API Gateway\n<br>\nðŸ“– <b>Summary:</b>\nOctelium is a self-hosted, unified zero trust secure access platform written in Go. It offers functionalities including remote access VPN, ZTNA/BeyondCorp architecture, API/AI gateway, PaaS, and homelab infrastructure, providing secure access to resources via WireGuard/QUIC tunnels and context-aware access control.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/octelium/octelium?embed=0\">View Project</a>\nâ€¢ <a href=\"https://octelium.com/docs?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/42f8d74c2b7d4d71f736b3389a5355527cf71dc912ef6eeee472863370b407ff/octelium/octelium",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 1024401073,
        "content": "âœ¨ <b>clime</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding visually appealing and interactive command-line applications in Go.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal Utilities (clear screen, cursor movement, size detection)\nâ€¢ Rich Colors & Formatting (16+ colors, bold, italic, underline, rainbow effects)\nâ€¢ Interactive Spinners (multiple styles with customizable colors and messages)\nâ€¢ Progress Bars (single and multi-bar support with ETA and rate display)\n<br>\nðŸ“– <b>Summary:</b>\nClime is a Go library designed to simplify the creation of visually appealing and interactive command-line interfaces. It offers a range of features including terminal utilities, rich text formatting, interactive spinners, progress bars, data tables, user input prompts, and responsive design to enhance the user experience in terminal applications.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/alperdrsnn/clime?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/078620f394eb7577259877b794dfc60720abcd66b1da5c3de4e183b72f20cf4a/alperdrsnn/clime",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 981177285,
        "content": "ðŸŒŸ <b>presenton</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating presentations with AI, either from scratch or using existing PowerPoint templates, while maintaining control over data and privacy.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Custom Templates & Themes\nâ€¢ AI Template Generation\nâ€¢ Flexible Generation\nâ€¢ Export Ready (PPTX and PDF)\nâ€¢ Built-In MCP Server\n<br>\nðŸ“– <b>Summary:</b>\nPresenton is an open-source AI presentation generator and API that allows users to create presentations locally using models like OpenAI and Gemini, or their own hosted models. It offers features like custom templates, AI template generation from existing PowerPoint files, flexible generation from prompts or documents, and export to PPTX and PDF formats.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/presenton/presenton?embed=0\">View Project</a>\nâ€¢ <a href=\"https://presenton.ai?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9700bc229ddfbbbcb74351305c7ed3a9b7b2356ca2f25c9381306199c944c662/presenton/presenton",
        "platform": "telegram",
        "quality_score": 0.75
    },
    {
        "project_id": 188700274,
        "content": "ðŸ’¡ <b>copyparty</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTurning any device into a file server with easy access and management through a web browser.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Resumable uploads/downloads\nâ€¢ Web browser interface\nâ€¢ HTTP, WebDAV, FTP, TFTP, SMB/CIFS support\nâ€¢ Media indexer\nâ€¢ Thumbnails generation\n<br>\nðŸ“– <b>Summary:</b>\nCopyparty is a portable file server written in Python that supports accelerated resumable uploads and downloads through a web browser. It offers multiple protocols including HTTP, WebDAV, FTP, TFTP, and SMB/CIFS, and includes features like media indexing, thumbnails, and zeroconf, all within a single file and without external dependencies.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/9001/copyparty?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/188700274/42754d5b-fa34-45dd-9030-6ff0c16036be",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    },
    {
        "project_id": 873617127,
        "content": "ðŸš€ <b>flare-gun</b> | Kotlin\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nEnabling offline emergency communication and recovery assistance in areas affected by war or disaster where traditional networks are unavailable.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Offline SOS signaling via Bluetooth Low Energy (BLE)\nâ€¢ Distress signal broadcasting and scanning\nâ€¢ Approximate distance estimation to signal source\nâ€¢ Audible siren generation for location assistance\n<br>\nðŸ“– <b>Summary:</b>\nIgatha is an open-source SOS signaling and recovery application designed for use in war zones and disaster areas. It leverages Bluetooth Low Energy (BLE) and device sensors to enable offline emergency communication when traditional networks are unavailable, facilitating both sending distress signals and aiding in recovery efforts.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/igatha/flare-gun?embed=0\">View Project</a>\nâ€¢ <a href=\"https://igatha.link/github?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/873617127/2a869e32-2e16-488a-9d69-ca799e7a2491",
        "platform": "telegram",
        "quality_score": 0.5
    }
]