[
    {
        "project_id": 919835586,
        "content": "ðŸš€ <b>Hunyuan3D-2</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating high-resolution 3D assets from images and text using diffusion models.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ High-Resolution 3D Asset Generation\nâ€¢ Image-to-3D Conversion\nâ€¢ Text-to-3D Conversion\nâ€¢ Texture Generation\nâ€¢ Diffusion Models for 3D Generation\n<br>\nðŸ“– <b>Summary:</b>\nThe Hunyuan3D-2 repository provides tools and models for generating high-resolution 3D assets. It supports both image-to-3D and text-to-3D conversion, leveraging diffusion models for shape and texture generation. The repository also includes turbo models for faster inference.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Tencent/Hunyuan3D-2?embed=0\">View Project</a>\nâ€¢ <a href=\"https://3d.hunyuan.tencent.com/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7aea39897f0b11251222783e2d4db2a1084dc3c188c6748d012edd7fdc914d26/Tencent/Hunyuan3D-2",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 950065302,
        "content": "ðŸ’¡ <b>bambot</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nBuilding and experimenting with a low-cost humanoid robot.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Hardware designs for a low-cost humanoid robot\nâ€¢ Software for controlling the robot\nâ€¢ Demo video showcasing the robot's capabilities\n<br>\nðŸ“– <b>Summary:</b>\nBambot is an open-source project providing the hardware and software designs for building a low-cost humanoid robot. The project includes hardware schematics, software for controlling the robot, and a demo video. It is intended for hobbyists, researchers, and educators interested in robotics.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/timqian/bambot?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bambot.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5043fe12cfa24a452710e3f4b2b35e1970b8fd1d92dd1eb3708ac88855e5b641/timqian/bambot",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 191318242,
        "content": "ðŸ’¡ <b>googlemaps-scraper</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nExtracting and monitoring Google Maps reviews for a specific Point Of Interest (POI).\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Scrapes Google Maps reviews from a given URL.\nâ€¢ Allows specifying the number of reviews to retrieve.\nâ€¢ Offers options to scrape POI metadata instead of reviews.\nâ€¢ Provides a monitoring functionality for incremental scraping and storage in MongoDB.\nâ€¢ Sort reviews by relevance, date, or rating.\n<br>\nðŸ“– <b>Summary:</b>\nThe googlemaps-scraper repository provides tools to scrape reviews from Google Maps places. It allows users to extract a specified number of the most recent reviews and offers a monitoring feature to incrementally store reviews in MongoDB. The scraper can also extract POI metadata and sort reviews based on different criteria.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gaspa93/googlemaps-scraper?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a54b8f917efd202715b24be90544bbf6d128de54909f5d98cd8fd2db60745aba/gaspa93/googlemaps-scraper",
        "platform": "telegram",
        "quality_score": 0.55
    },
    {
        "project_id": 377310071,
        "content": "ðŸŒŸ <b>photo-video-watermark</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCreating watermarks on photos and videos via a Telegram bot.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Telegram bot integration\nâ€¢ Video conversion\nâ€¢ Watermark addition to photos\nâ€¢ Watermark addition to videos\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a Telegram bot that allows users to add watermarks to both photos and videos. It includes video conversion capabilities and leverages libraries like aiogram, Pillow, and ffmpeg. The bot is designed to be easily accessible and user-friendly through the Telegram interface.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/h1w/photo-video-watermark?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/09c33de50a33824a8b7ebfcb47f94de94223550e024e4e3a7376febd0b4d15c0/h1w/photo-video-watermark",
        "platform": "telegram",
        "quality_score": 0.15
    },
    {
        "project_id": 875351091,
        "content": "ðŸ”¥ <b>jinsp</b> | C\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nVisually inspect JSON data from the terminal.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Terminal-based JSON data inspection\nâ€¢ Miller columns for navigation\nâ€¢ Read-only preview of selected element\nâ€¢ Keyboard and mouse navigation\nâ€¢ Search functionality\n<br>\nðŸ“– <b>Summary:</b>\njinsp is a terminal-based tool for browsing and inspecting JSON data. It uses Miller columns for navigation, providing a visual representation of the JSON tree structure. The tool allows users to navigate the JSON data using keyboard or mouse, preview selected elements, and search for specific keywords.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/simeonkr/jinsp?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7a1c7a2a4b0fbd8be29e2887e6b6f1c71d8c79c4d83a6e66405bc690c2e702b9/simeonkr/jinsp",
        "platform": "telegram",
        "quality_score": 0.25
    },
    {
        "project_id": 507135376,
        "content": "ðŸ”¥ <b>waymore</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nFinding more URLs and information from various web archives and intelligence sources than other existing tools, particularly for bug bounty hunting and reconnaissance.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Finds URLs from Wayback Machine, Common Crawl, Alien Vault OTX, URLScan, VirusTotal, and Intelligence X.\n<br>\nðŸ“– <b>Summary:</b>\nWaymore is a Python tool designed to discover a comprehensive set of URLs from various sources, including the Wayback Machine, Common Crawl, and security intelligence platforms. It distinguishes itself by downloading archived responses from the Wayback Machine, enabling deeper analysis for hidden links and parameters. The tool also manages rate limiting issues, ensuring more complete results compared to other similar tools.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/xnl-h4ck3r/waymore?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/def1228d6a69570c650910be2e15bc69057dd1f618d954129c64750d906198ac/xnl-h4ck3r/waymore",
        "platform": "telegram",
        "quality_score": 0.9000000000000001
    },
    {
        "project_id": 699540469,
        "content": "ðŸ’¡ <b>bitmagnet</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSelf-hosted BitTorrent indexing and searching\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ BitTorrent indexer\nâ€¢ DHT crawler\nâ€¢ Content classifier\nâ€¢ Torrent search engine\nâ€¢ Web UI\n<br>\nðŸ“– <b>Summary:</b>\nBitmagnet is a self-hosted BitTorrent indexer that crawls the DHT network, classifies content, and provides a torrent search engine. It features a web UI and GraphQL API for easy access and integrates with the Servarr stack for automated media management.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/bitmagnet-io/bitmagnet?embed=0\">View Project</a>\nâ€¢ <a href=\"https://bitmagnet.io/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/4ca4a1fca1d84d78fc56d37db2815b6f3889928f7fe417a8c1541735f6f61cce/bitmagnet-io/bitmagnet",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 805155266,
        "content": "ðŸš€ <b>cherry-studio</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nA desktop client for interacting with multiple LLM providers and AI assistants.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Diverse LLM Provider Support (OpenAI, Gemini, Anthropic, Claude, Peplexity, Poe, Ollama, LM Studio)\n<br>\nðŸ“– <b>Summary:</b>\nCherry Studio is a cross-platform desktop application designed to simplify interactions with various LLMs. It supports a wide range of providers, including OpenAI, Gemini, Anthropic, and local models. The application offers features such as pre-configured AI assistants, document processing, and practical tools integration, enhancing the user experience for both casual users and developers.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/CherryHQ/cherry-studio?embed=0\">View Project</a>\nâ€¢ <a href=\"https://cherry-ai.com?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/805155266/692d7ac1-0787-4b91-99b3-a9231ed6151d",
        "platform": "telegram",
        "quality_score": 0.9500000000000001
    }
]