[
    {
        "project_id": 969461377,
        "content": "âœ¨ <b>TikTok-ReverseEngineering</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nReverse engineering the TikTok Virtual Machine (VM) to understand its obfuscation and security mechanisms.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Deobfuscation of webmssdk.js\nâ€¢ Decompilation of TikTok VM instructions\nâ€¢ Script injection with deobfuscated VM\nâ€¢ Signed URL generation\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides tools and techniques for reverse engineering TikTok's custom virtual machine (VM), specifically focusing on deobfuscating `webmssdk.js`, decompiling VM instructions, injecting scripts with the deobfuscated VM, and generating signed URLs. It aims to provide insights into TikTok's obfuscation and security layers by making the code more readable and understandable.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/LukasOgunfeitimi/TikTok-ReverseEngineering?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/5916b9a714bcfdae1f5d1d893c59bbf11231df3adc454d76dfcb18f67e4b4b21/LukasOgunfeitimi/TikTok-ReverseEngineering",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 967893951,
        "content": "ðŸ”¥ <b>dir2txt</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nStructuring codebases for context ingestion in AI and LLM workflows, such as RAG, code-aware copilots, and other AI-powered tools.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generates directory tree view\nâ€¢ Dumps file contents (optionally stripped of comments)\nâ€¢ Respects .gitignore, .dockerignore, and custom ignore files\nâ€¢ Smart binary file detection\nâ€¢ Outputs in text or structured JSON\n<br>\nðŸ“– <b>Summary:</b>\ndir2txt is a blazing-fast CLI tool that exports a directory's structure and contents into a neatly formatted .txt or .json file. It's designed to prepare messy source directories into clean, structured input for language models, making it ideal for AI and LLM workflows like Retrieval-Augmented Generation (RAG) and code-aware copilots.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/shubhamoy/dir2txt?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d8f223fcd7cfb944d72977b77457503b793569e5dd8e9e37f99a10269314df5d/shubhamoy/dir2txt",
        "platform": "telegram",
        "quality_score": 0.7
    },
    {
        "project_id": 957085330,
        "content": "ðŸŒŸ <b>physics-sims</b> | HTML\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nDemonstrating physics concepts through interactive simulations.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Earth's magnetic field simulation\nâ€¢ Electromagnetic solenoid simulation\nâ€¢ General relativity demonstration\nâ€¢ Planetary orbit simulation with Hohmann transfer\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a collection of interactive physics simulations, including demonstrations of Earth's magnetic field, electromagnetic solenoids, general relativity, and planetary orbits with Hohmann transfer. These simulations, generated via LLM prompting, are intended to visually illustrate complex physics concepts in an accessible manner.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/gemsjohn/physics-sims?embed=0\">View Project</a>\nâ€¢ <a href=\"https://www.renderfiction.com/simulations?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/957085330/35b82419-90fe-470c-baf1-fd342c031789",
        "platform": "telegram",
        "quality_score": 0.44999999999999996
    },
    {
        "project_id": 899983311,
        "content": "ðŸ”¥ <b>probly</b> | TypeScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData analysis with spreadsheets, enhanced by AI and Python integration.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Smart Spreadsheet with formula support\nâ€¢ Python Integration using WebAssembly\nâ€¢ Data Visualization\nâ€¢ AI-Powered Analysis\nâ€¢ Document Processing\n<br>\nðŸ“– <b>Summary:</b>\nProbly is a next-generation spreadsheet application that combines traditional spreadsheet functionality with AI-driven analysis and Python computation. It allows users to perform data analysis, create visualizations, and process documents, all within a privacy-focused, browser-based environment. The platform leverages technologies like Next.js, Pyodide, and the OpenAI API to provide a powerful and versatile data analysis tool.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PragmaticMachineLearning/probly?embed=0\">View Project</a>\nâ€¢ <a href=\"https://probly-ai.readthedocs.io/en/latest/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/9ffe4e00444dc0b2ec6c4eeaf624be74225f0dab62f3e72d7ca39e414aec15ae/PragmaticMachineLearning/probly",
        "platform": "telegram",
        "quality_score": 0.6499999999999999
    },
    {
        "project_id": 535010087,
        "content": "âœ¨ <b>arnis</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nGenerating realistic Minecraft worlds based on real-world locations for exploration, recreation, or unique building projects.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Generates Minecraft Java Edition worlds from real-world locations.\nâ€¢ Uses OpenStreetMap data for accurate geography and architecture.\nâ€¢ Processes and sorts geospatial data to create detailed environments.\n<br>\nðŸ“– <b>Summary:</b>\nArnis is a Rust-based tool that generates detailed Minecraft Java Edition worlds from real-world locations using OpenStreetMap data. It allows users to select an area and automatically processes geospatial data to create accurate representations of geography and architecture within Minecraft. The tool provides a GUI for ease of use and supports Minecraft versions 1.21.4 and above.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/louis-e/arnis?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/535010087/eb4bef9b-429b-424f-a274-2b61e121b743",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 536802516,
        "content": "ðŸ”¥ <b>lan-mouse</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nSharing a single mouse and keyboard across multiple computers via a local area network.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Cross-platform mouse and keyboard sharing\nâ€¢ Software KVM switch functionality\nâ€¢ Encryption using DTLS (WebRTC.rs)\nâ€¢ Support for GNOME, KDE Plasma, wlroots-based compositors, Windows, and MacOS\nâ€¢ GTK frontend\n<br>\nðŸ“– <b>Summary:</b>\nLan Mouse is a cross-platform software KVM switch that allows users to control multiple computers with a single mouse and keyboard over a LAN. It focuses on performance, ease of use, and maintainability, offering an open-source alternative to proprietary solutions. The software encrypts network traffic and supports various desktop environments, including GNOME, KDE Plasma, wlroots compositors, Windows, and MacOS.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/feschber/lan-mouse?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/536802516/e428ece5-71e2-44f6-8194-c8f2b3466c2e",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 90902132,
        "content": "ðŸš€ <b>flameshot</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTaking and editing screenshots\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Customizable appearance\nâ€¢ Easy to use\nâ€¢ In-app screenshot editing\nâ€¢ DBus interface\nâ€¢ Upload to Imgur\n<br>\nðŸ“– <b>Summary:</b>\nFlameshot is a powerful and user-friendly screenshot tool. It allows users to easily capture and edit screenshots, offering customizable appearance and in-app editing features. It also provides a DBus interface and the ability to upload screenshots to Imgur.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/flameshot-org/flameshot?embed=0\">View Project</a>\nâ€¢ <a href=\"https://flameshot.org?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/2d8524f82a74e1b246d9ab9f1c7cd52afbda6c898239f100997ac1fce3bd5246/flameshot-org/flameshot",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 937253475,
        "content": "ðŸš€ <b>claude-code</b> | Shell\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nAgentic coding tool that helps developers code faster by executing routine tasks, explaining complex code, and handling git workflows through natural language commands.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Edit files and fix bugs across your codebase\nâ€¢ Answer questions about your code's architecture and logic\n<br>\nðŸ“– <b>Summary:</b>\nClaude Code is an agentic coding tool designed to enhance developer productivity. It operates within the terminal, providing capabilities such as code editing, bug fixing, code explanation, test execution, and Git workflow management, all accessible through natural language commands. This tool aims to streamline development processes and improve collaboration with AI agents.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/anthropics/claude-code?embed=0\">View Project</a>\nâ€¢ <a href=\"https://docs.anthropic.com/s/claude-code?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d4c2b53658073449335f453374bb911a4f4b8558265fcf007e70a28b9853ea3d/anthropics/claude-code",
        "platform": "telegram",
        "quality_score": 1.0000000000000002
    }
]