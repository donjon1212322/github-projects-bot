[
    {
        "project_id": 800632485,
        "content": "ðŸ”¥ <b>subtrace</b> | Go\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nView all incoming and outgoing requests in Docker containers to resolve backend server production issues faster\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Works out-of-the-box\nâ€¢ No code changes needed\nâ€¢ Supports all languages (Python + Node + Go + everything else)\nâ€¢ See full payload, headers, status code, and latency\nâ€¢ Less than 100Âµs performance overhead\n<br>\nðŸ“– <b>Summary:</b>\nSubtrace is a tool to debug Docker containers by viewing network requests.  It supports all major programming languages and requires no code changes.  It provides detailed request information with minimal performance overhead.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/subtrace/subtrace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://subtrace.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/e984b68ac82f42290a7dc889ba75246a202742be8de941b5d4ed4e39777e18bf/subtrace/subtrace",
        "platform": "telegram",
        "quality_score": 0.85
    },
    {
        "project_id": 908068887,
        "content": "ðŸ’¡ <b>google_photos_mobile_client</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nUploading files to Google Photos without using a physical device or emulator\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Uploads files to Google Photos as if from a Pixel XL device\nâ€¢ Provides both Python client and CLI interfaces\nâ€¢ Supports various options like progress display, recursive directory upload, multi-threading, and more\n<br>\nðŸ“– <b>Summary:</b>\nThis repository provides a command-line interface and Python client for uploading files to Google Photos, mimicking a Pixel XL device.  It offers features such as progress tracking, recursive directory uploads, and options for managing storage quota and deleting source files after upload.  The tool requires obtaining authentication data from a rooted Android device or emulator.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/xob0t/google_photos_mobile_client?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client",
        "platform": "telegram",
        "quality_score": 0.65
    },
    {
        "project_id": 914092741,
        "content": "ðŸš€ <b>ClatScope</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nOSINT (Open-Source Intelligence) investigations and reconnaissance\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ IP geolocation, ISP, and Google Maps link extraction\nâ€¢ Deep account search across 250+ websites\nâ€¢ Phone number validation, carrier identification, and region determination\nâ€¢ DNS record retrieval (A, CNAME, MX, NS) and PTR records\nâ€¢ Email MX record checks, format validation, and header parsing\n<br>\nðŸ“– <b>Summary:</b>\nClatScope Info Tool is a versatile OSINT utility for gathering information from various online sources.  It offers features such as IP geolocation, deep account searches, phone number analysis, email verification, and more, making it suitable for investigators and security professionals.  The tool leverages multiple APIs and public resources to provide comprehensive results.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/Clats97/ClatScope?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/a98af2311eca76d15af11d303ce54aaad9334a788d6d3e7bc40002b880541e42/Clats97/ClatScope",
        "platform": "telegram",
        "quality_score": 0.8
    },
    {
        "project_id": 249331466,
        "content": "ðŸš€ <b>laplace</b> | JavaScript\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nScreen sharing directly via browser without requiring software installations or plugins\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ WebRTC for low latency peer-to-peer connections\nâ€¢ WebSocket implemented in golang for WebRTC signaling\nâ€¢ Screen sharing directly via browser\nâ€¢ No installation or registration required\n<br>\nðŸ“– <b>Summary:</b>\nLaplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Go-based WebSocket for signaling.  It avoids the need for installations or registrations, minimizing server costs by performing encoding and transmission on the client side.  This is useful for game streaming, collaborative work, and presentations.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/adamyordan/laplace?embed=0\">View Project</a>\nâ€¢ <a href=\"https://laplace.adamjordan.id/?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/aca4e75c8b55048725c260334a7368453c380fdc447ca8f7d234f8c2a0c983a8/adamyordan/laplace",
        "platform": "telegram",
        "quality_score": 0.5
    },
    {
        "project_id": 853917967,
        "content": "ðŸ”¥ <b>fast-music-remover</b> | C++\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nRemoving background music and noise from audio\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ background music filtering\nâ€¢ noise removal\nâ€¢ audio quality enhancement\nâ€¢ cross-platform support (Linux, macOS, Windows)\nâ€¢ containerized on GHCR\n<br>\nðŸ“– <b>Summary:</b>\nFast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It offers cross-platform support and a web UI, with future plans for real-time processing and additional ML models.  The project is containerized for easy deployment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/omeryusufyagci/fast-music-remover?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/d2f6dde957786f1317781fb6f6d3a21aa98eba5b3d13d18d480ea5f191b8b9e2/omeryusufyagci/fast-music-remover",
        "platform": "telegram",
        "quality_score": 0.95
    },
    {
        "project_id": 49876476,
        "content": "ðŸ”¥ <b>shardingsphere</b> | Java\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nData sharding, scaling, and encryption on any database\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Distributed SQL transaction\nâ€¢ query engine for data sharding\nâ€¢ scaling\nâ€¢ encryption\n<br>\nðŸ“– <b>Summary:</b>\nShardingSphere is a distributed database middleware that provides features for data sharding, scaling, and encryption.  It acts as a query engine, handling distributed SQL transactions across various databases.  This allows for improved performance and manageability of large datasets.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/apache/shardingsphere?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/78e7b2c80f42400cb4a97a7b06c2776004f83d9e18646ea3d6429a728c0caa90/apache/shardingsphere",
        "platform": "telegram",
        "quality_score": 1.1
    },
    {
        "project_id": 139199684,
        "content": "âœ¨ <b>prefect</b> | Python\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nbuilding and managing data pipelines in Python\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ workflow orchestration\nâ€¢ data pipeline building\nâ€¢ scheduling\nâ€¢ caching\nâ€¢ retries\n<br>\nðŸ“– <b>Summary:</b>\nPrefect is a Python framework for building data pipelines.  It offers features like scheduling, caching, and retries to create resilient workflows.  These workflows can be monitored via a self-hosted server or Prefect Cloud.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/PrefectHQ/prefect?embed=0\">View Project</a>\nâ€¢ <a href=\"https://prefect.io?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/7e550298185c6ee66d8b907a0e91d68fc3ea8df13e3517c34f8dac5f20320cf6/PrefectHQ/prefect",
        "platform": "telegram",
        "quality_score": 1.05
    },
    {
        "project_id": 577623124,
        "content": "ðŸš€ <b>VPet</b> | C#\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nTo provide a virtual pet simulator that can be integrated into other WPF applications or used as a standalone desktop application.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ Open-source virtual pet simulator software\nâ€¢ Integratable into any WPF application via NuGet\nâ€¢ Supports various interactions and animations (32 types * 4 states * 3 categories)\nâ€¢ Features a modding system with support for custom animations, items, and functionalities via code plugins\n<br>\nðŸ“– <b>Summary:</b>\nVPet-Simulator is an open-source virtual pet software that can be integrated into WPF applications.  It offers a wide variety of interactions and animations, and supports modding through a dedicated tool and Steam Workshop.  Users can create and share custom pets, animations, and functionalities.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/LorisYounger/VPet?embed=0\">View Project</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://opengraph.githubassets.com/687fda15083eea9c5910a247dd7a35f548f4936a0f4fa710924be80989359b60/LorisYounger/VPet",
        "platform": "telegram",
        "quality_score": 0.8500000000000001
    },
    {
        "project_id": 146327667,
        "content": "ðŸ’¡ <b>vector</b> | Rust\n<br>\nðŸŽ¯ <b>Primary Use Case:</b>\nCollecting, transforming, and routing observability data (logs and metrics) to various vendors.\n<br>\nâœ¨ <b>Key Features:</b>\nâ€¢ High-performance, end-to-end observability data pipeline\nâ€¢ Collects, transforms, and routes logs and metrics\nâ€¢ Built in Rust for reliability\nâ€¢ Unified handling of logs, metrics, and traces\n<br>\nðŸ“– <b>Summary:</b>\nVector is a high-performance data pipeline written in Rust, designed for reliable collection, transformation, and routing of logs and metrics.  It supports various data sources and destinations, enabling users to manage and reduce observability costs while improving data quality and insights.  Vector functions as both an agent and aggregator, offering flexibility in deployment.\n<br>\nðŸ”— <b>Links:</b>\nâ€¢ <a href=\"https://github.com/vectordotdev/vector?embed=0\">View Project</a>\nâ€¢ <a href=\"https://vector.dev?embed=0\">Homepage</a>\n================\n<a href='https://t.me/GitHub_Open_Source'>ðŸ”“ Open Source</a>",
        "media_url": "https://repository-images.githubusercontent.com/146327667/79b84380-28db-11eb-9bb0-13be8f3541cc",
        "platform": "telegram",
        "quality_score": 1.05
    }
]