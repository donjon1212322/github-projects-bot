[
    {
        "id": 743140652,
        "name": "windows",
        "description": "Windows inside a Docker container.",
        "url": "https://github.com/dockur/windows",
        "language": "Shell",
        "stars": 41962,
        "forks": 3077,
        "created_at": "2024-01-14T13:09:40Z",
        "updated_at": "2025-09-02T10:11:48Z",
        "topics": [
            "docker",
            "docker-container",
            "virtualization",
            "windows",
            "windows-virtual-desktop",
            "windows-virtual-machine",
            "windows-virtual-machines",
            "windows-vm"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-27T19:11:40Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/743140652/69c0c16a-9695-484e-861e-9b07c0507f45"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a way to run Windows operating systems inside Docker containers. It includes features for downloading ISO images, KVM acceleration, and a web-based viewer, enabling users to easily create and manage Windows virtual machines.",
        "key_features": [
            "ISO downloader",
            "KVM acceleration",
            "Web-based viewer"
        ],
        "primary_use_case": "Running Windows operating systems inside Docker containers for development, testing, or virtualization purposes.",
        "open_issues": 106,
        "cover_image_prompt": "A shipbuilder inside a high-tech dry dock, carefully fitting a glowing, miniature Windows operating system into a standardized Docker container. The shipbuilder uses advanced tools to ensure a perfect fit, with small UI elements displaying the containerization process. Digital particles flow around the Windows OS as it's placed into the container. The scene is set in a clean, futuristic environment with bright, focused lighting. The composition is symmetrical and balanced with a blue and white color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 37347459,
        "name": "ungoogled-chromium",
        "description": "Google Chromium, sans integration with Google",
        "url": "https://github.com/ungoogled-software/ungoogled-chromium",
        "language": "Python",
        "stars": 23782,
        "forks": 979,
        "created_at": "2015-06-12T22:24:24Z",
        "updated_at": "2025-09-02T09:25:52Z",
        "topics": [
            "chromium",
            "control",
            "google-chromium",
            "inox",
            "iridium",
            "privacy",
            "transparency"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-26T21:27:18Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a008ce11f1157d0eab1ea5eabf9c647ccb444c858f9ff318bbaebba78d62b635/ungoogled-software/ungoogled-chromium"
        ],
        "homepage": "",
        "readme_summary": "The ungoogled-chromium project aims to provide a version of Google Chromium without dependencies on Google web services. It focuses on enhancing privacy, control, and transparency by removing Google-specific code and binaries, and disabling features that compromise user control.",
        "key_features": [
            "Removes dependency on Google web services",
            "Retains the default Chromium experience",
            "Enhances privacy, control, and transparency",
            "Disables functionality specific to Google domains",
            "Blocks internal requests to Google at runtime",
            "Strips binaries from the source code"
        ],
        "primary_use_case": "Providing a Chromium-based web browser without Google integration, focusing on privacy and user control.",
        "open_issues": 152,
        "cover_image_prompt": "A meticulous sculptor chiseling away at a large stone block labeled 'Chromium', carefully removing smaller blocks representing Google services. The sculptor uses precise tools, leaving behind a cleaner, more refined form. Digital particles float around the sculpture, subtly displaying code snippets and privacy settings. A faint UI element showing browser settings is projected onto the sculpture. The scene is set in a bright, modern workshop with natural lighting. The composition is focused and clean, with a blue and white color scheme. The image should be in a 3D isometric illustration style with detailed textures and clear outlines."
    },
    {
        "id": 1038414944,
        "name": "HunyuanVideo-Foley",
        "description": "HunyuanVideo-Foley: Multimodal Diffusion with Representation Alignment for High-Fidelity Foley Audio Generation.",
        "url": "https://github.com/Tencent-Hunyuan/HunyuanVideo-Foley",
        "language": "Python",
        "stars": 273,
        "forks": 22,
        "created_at": "2025-08-15T06:44:09Z",
        "updated_at": "2025-09-02T07:50:12Z",
        "topics": [],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-08-28T11:17:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6ae4a1f368e172f5fecd2ac49dc2831ce73e6dd1b4a3a5dd3fef0dc60fcd2504/Tencent-Hunyuan/HunyuanVideo-Foley"
        ],
        "homepage": "",
        "readme_summary": "The HunyuanVideo-Foley repository introduces a multimodal diffusion model for generating high-fidelity Foley audio synchronized with video content. It aims to provide professional-grade AI sound effect generation for video creators, applicable to various scenarios like short videos, films, and games.",
        "key_features": [
            "Multi-scenario audio-visual synchronization",
            "Multi-modal balance between visual and textual information",
            "48kHz Hi-Fi audio output"
        ],
        "primary_use_case": "Generating synchronized Foley audio for video content creation.",
        "open_issues": 8,
        "cover_image_prompt": "A skilled sound engineer in a high-tech studio, manipulating sound waves to perfectly match the action on a large video screen. The engineer uses a digital mixing board with glowing knobs and sliders, while the video displays a dynamic scene. Visual indicators show the audio being generated in real-time, perfectly synchronized with the video. Small UI elements display waveforms and audio parameters. The repository name, 'HunyuanVideo-Foley,' is subtly displayed on the mixing board. The scene is set in a modern, clean studio with soft, ambient lighting. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 933284834,
        "name": "fzfm",
        "description": "üìÇ fuzzy finder file manager",
        "url": "https://github.com/ashish0kumar/fzfm",
        "language": "Shell",
        "stars": 118,
        "forks": 3,
        "created_at": "2025-02-15T15:43:25Z",
        "updated_at": "2025-09-02T10:08:48Z",
        "topics": [
            "bash",
            "file-manager",
            "fzf",
            "terminal-file-manager"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-08-04T07:26:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a3d39e645a7ca19d69224937d0465432d6b4f0e0c8ab75d531776e0d5a24a87b/ashish0kumar/fzfm"
        ],
        "homepage": "",
        "readme_summary": "The fzfm repository provides a fuzzy finder file manager implemented in shell script. It leverages `fzf` for fast fuzzy searching and offers features like file and directory previews, customizable media opening, and configuration via environment variables, aiming to provide a seamless keyboard-driven file navigation experience in the terminal.",
        "key_features": [
            "Navigate directories seamlessly using only your keyboard",
            "Blazing-fast fuzzy search powered by `fzf`",
            "File preview using `bat` (fallback to `cat`)",
            "Directory preview using `eza` (fallback to `ls`)",
            "Customizable multimedia file opener",
            "Fully configurable via environment variables"
        ],
        "primary_use_case": "Fuzzy finding and managing files and directories in the terminal.",
        "open_issues": 2,
        "cover_image_prompt": "A librarian swiftly organizing books in a vast, digital library using a magical magnifying glass. As the librarian gazes through the glass, files and folders instantly rearrange themselves into perfect order. The magnifying glass emits a soft, blue glow, highlighting the most relevant files. Small UI elements float around the librarian, displaying file paths and preview snippets. The repository name, 'fzfm,' is subtly etched onto the librarian's desk. The scene is set in a futuristic library with warm, inviting lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 792322009,
        "name": "packemon",
        "description": "Packet monster („Å£‚Äò-‚Äô)‚ïÆ=ÕûÕüÕüÕû‚óí  „ÉΩ( '-'„ÉΩ)  TUI tool for sending packets of arbitrary input and monitoring packets on any network interfaces (default: eth0). Windows/macOS/Linux",
        "url": "https://github.com/ddddddO/packemon",
        "language": "Go",
        "stars": 248,
        "forks": 2,
        "created_at": "2024-04-26T12:35:59Z",
        "updated_at": "2025-09-02T08:48:48Z",
        "topics": [
            "ebpf",
            "linux",
            "macos",
            "network",
            "network-programming",
            "networking",
            "packet",
            "packet-analyzer",
            "packet-generator",
            "packet-monitoring",
            "pcap",
            "penetration-testing",
            "pentesting",
            "port-scanner",
            "protocol",
            "security",
            "socket-programming",
            "sockets",
            "system-programming",
            "windows"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-08-31T09:45:00Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/792322009/a910c8f1-0f88-4fe4-804b-f772bf0233b7"
        ],
        "homepage": "",
        "readme_summary": "Pack√©mon is a TUI tool written in Go for generating and monitoring network packets. It allows users to craft and send custom packets to specific network interfaces, as well as capture and analyze network traffic in real-time, supporting Windows, macOS, and Linux.",
        "key_features": [
            "Packet generation with custom payloads",
            "Packet monitoring on specified network interfaces",
            "TUI interface for interactive packet analysis",
            "Cross-platform support (Windows, macOS, Linux)",
            "Packet filtering and detailed packet view"
        ],
        "primary_use_case": "Network packet generation and analysis for security testing, network troubleshooting, and protocol exploration.",
        "open_issues": 46,
        "cover_image_prompt": "A skilled artisan meticulously crafting paper airplanes, each representing a network packet, and launching them into a miniature cityscape filled with glowing servers and data streams. The artisan uses a digital interface to customize each plane's design, while a magnifying glass allows them to examine incoming planes, revealing their internal structure. Small UI elements display packet details and network statistics. The scene is set in a brightly lit workshop with a clean, focused composition. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 438267145,
        "name": "quiet",
        "description": "A private, p2p alternative to Slack and Discord built on Tor & IPFS",
        "url": "https://github.com/TryQuiet/quiet",
        "language": "C",
        "stars": 2205,
        "forks": 104,
        "created_at": "2021-12-14T13:40:02Z",
        "updated_at": "2025-09-02T08:35:51Z",
        "topics": [
            "chat",
            "collaboration",
            "decentralized",
            "discord-alternatives",
            "ipfs",
            "local-first",
            "p2p",
            "privacy",
            "slack-alternative"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-26T20:49:12Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/438267145/6414416f-0916-4a8f-ba1d-0c4e93c1b7c0"
        ],
        "homepage": "https://www.tryquiet.org",
        "readme_summary": "Quiet is a decentralized, peer-to-peer team chat application that aims to provide a private alternative to platforms like Slack and Discord. It leverages Tor for secure communication and OrbitDB for data synchronization directly between users' devices, eliminating the need for a central server. The application is built with TypeScript, Electron, and React Native.",
        "key_features": [
            "Team Chat",
            "End-to-end Encryption",
            "Channels",
            "Decentralized architecture",
            "Tor integration for secure communication",
            "OrbitDB for data synchronization"
        ],
        "primary_use_case": "Private and secure team communication without reliance on central servers.",
        "open_issues": 609,
        "cover_image_prompt": "Imagine a group of travelers huddled around a campfire, each holding a glowing lantern that connects to the others, forming a secure, invisible web. The lanterns represent individual devices, and the light symbolizes encrypted messages flowing directly between them. The campfire is in a serene, secluded forest, emphasizing privacy. Subtle tech elements, like faint UI overlays on the lanterns and digital particles connecting them, hint at the software aspect. The scene is in a 3D isometric illustration style with warm, inviting colors and soft lighting."
    },
    {
        "id": 998990487,
        "name": "enchat",
        "description": "End-to-end encrypted, ephemeral, self-hosted terminal chat ‚Äî no accounts, no history, no cloud.",
        "url": "https://github.com/sudodevdante/enchat",
        "language": "Python",
        "stars": 96,
        "forks": 8,
        "created_at": "2025-06-09T15:10:56Z",
        "updated_at": "2025-09-02T08:39:08Z",
        "topics": [
            "chat",
            "chat-application",
            "cli",
            "e2e",
            "encryption",
            "end2end",
            "privacy",
            "security",
            "self-hosted",
            "selfhosted",
            "terminal",
            "tor",
            "zero-knowledge"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-06-21T22:36:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/15b73a41cc1f8e68133b382bc84b99b62ddecd10f6ab6a542702145fef5b4a92/sudodevdante/enchat"
        ],
        "homepage": "https://enchat.io",
        "readme_summary": "Enchat is a self-hosted terminal chat application that provides end-to-end encrypted, ephemeral communication. It prioritizes privacy by design, offering features like zero-knowledge architecture, perfect forward secrecy, and Tor support to ensure secure conversations without reliance on centralized servers or data tracking.",
        "key_features": [
            "Real-Time Encrypted Chat",
            "Secure Room & File Sharing",
            "Perfect Forward Secrecy (PFS)",
            "Tor Support",
            "Zero-Knowledge Architecture",
            "Cross-Platform Compatibility"
        ],
        "primary_use_case": "Private and secure terminal-based communication.",
        "open_issues": 1,
        "cover_image_prompt": "A medieval scribe sitting at a stone desk within a dimly lit, fortified tower, meticulously writing messages on scrolls. Each scroll is immediately placed into a locked strongbox, symbolizing end-to-end encryption. The tower is surrounded by swirling fog, representing the Tor network, obscuring it from view. A small terminal displaying encrypted text sits subtly on the desk. The scene is illuminated by a single candle, casting long shadows. The image should be in a digital painting style with a focus on detail and atmosphere, using a muted color palette to convey security and privacy."
    },
    {
        "id": 1045247927,
        "name": "actions-up",
        "description": "üåä Interactive CLI tool to update GitHub Actions to latest versions with SHA pinning",
        "url": "https://github.com/azat-io/actions-up",
        "language": "TypeScript",
        "stars": 160,
        "forks": 7,
        "created_at": "2025-08-26T21:52:22Z",
        "updated_at": "2025-09-02T09:58:37Z",
        "topics": [
            "actions",
            "cli",
            "dependencies",
            "github-actions",
            "security",
            "workflow"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-09-02T08:06:05Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1045247927/bec6e866-bf5b-46a6-8b8e-9bd4258de42b"
        ],
        "homepage": "",
        "readme_summary": "Actions Up is a CLI tool written in TypeScript designed to automate the process of updating GitHub Actions dependencies in workflows and composite actions. It enhances security and reproducibility by pinning actions to specific commit SHAs, offering interactive and automated update modes, and detecting potential breaking changes.",
        "key_features": [
            "Auto-discovery of actions in workflows and composite actions",
            "SHA Pinning for enhanced security and reproducibility",
            "Batch updates for efficient dependency management",
            "Interactive selection of actions to update",
            "Breaking changes detection to prevent unexpected issues",
            "Fast and efficient API usage with deduped lookups",
            "CI/CD integration for automated PR checks"
        ],
        "primary_use_case": "Updating GitHub Actions dependencies to the latest versions with SHA pinning for improved security and reproducibility.",
        "open_issues": 1,
        "cover_image_prompt": "A diligent librarian meticulously replacing old, vulnerable books (GitHub Actions using tags) with new, securely bound volumes (SHA-pinned actions) on towering shelves. The librarian uses a magnifying glass to check each book's binding, ensuring its integrity. A small screen displays a workflow file being updated in real-time. Digital particles emanate from the new books, symbolizing enhanced security. The scene is set in a grand, well-lit library with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]