[
    {
        "id": 416713458,
        "name": "gridplayer",
        "description": "Play videos side-by-side",
        "url": "https://github.com/vzhd1701/gridplayer",
        "language": "Python",
        "stars": 1698,
        "forks": 138,
        "created_at": "2021-10-13T11:31:03Z",
        "updated_at": "2025-11-01T09:47:43Z",
        "topics": [
            "libvlc",
            "livestream",
            "player",
            "player-video",
            "pyqt",
            "pyqt5",
            "python",
            "qt",
            "qt5",
            "streaming",
            "streamlink",
            "twitch",
            "video",
            "video-player",
            "vlc",
            "youtube",
            "youtube-dl",
            "yt-dlp"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2023-10-21T10:42:59Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/416713458/b4ee05fd-ac4e-4710-bb0e-a6a1152fc3f6"
        ],
        "homepage": "",
        "readme_summary": "GridPlayer is a VLC-based media player that allows users to play multiple videos simultaneously in a configurable grid layout. It supports various video and audio formats, streaming URLs, and offers features like hardware/software decoding, aspect ratio control, and playlist saving with retained settings.",
        "key_features": [
            "Cross-platform support (Linux, Mac, Windows)",
            "Support for any video and audio format (VLC)",
            "Support for streaming URLs (streamlink + yt-dlp)",
            "Hardware & software video decoding",
            "Control video aspect, playback speed, zoom",
            "Configurable grid layout",
            "Playlist retains settings for each video"
        ],
        "primary_use_case": "Playing multiple videos side-by-side for comparison, monitoring, or entertainment purposes.",
        "open_issues": 128,
        "cover_image_prompt": "Imagine a control room filled with multiple screens, each displaying a different scene from a movie or live stream. A conductor stands in the center, using a baton to synchronize and orchestrate the playback across all screens, creating a harmonious viewing experience. Subtle UI elements are overlaid on the screens, showing playback controls and grid configurations. The room is bathed in soft, ambient light, with digital particles floating around the conductor, representing the flow of video data. The repository name, 'GridPlayer,' is subtly displayed on a screen in the background. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 1084395359,
        "name": "share",
        "description": "E2EE File Transfer",
        "url": "https://github.com/schollz/share",
        "language": "Go",
        "stars": 30,
        "forks": 3,
        "created_at": "2025-10-27T16:12:44Z",
        "updated_at": "2025-11-01T09:03:11Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-11-01T02:05:24Z",
        "media_urls": [
            "https://opengraph.githubassets.com/136fa13daf1ff83896d4131172079f60d1c639d4596a85dd7fd97025b1b0e454/schollz/share"
        ],
        "homepage": "https://share.schollz.com",
        "readme_summary": "The 'share' repository provides a simple way to transfer files between machines using end-to-end encryption. It offers both a web interface and a command-line interface (CLI) for sending and receiving files, ensuring secure peer-to-peer connections through a relay server.",
        "key_features": [
            "End-to-end encryption (E2EE) using ECDH P-256 and AES-GCM",
            "Web interface for file sharing",
            "Command-line interface (CLI) for file transfer",
            "Self-hostable relay server option"
        ],
        "primary_use_case": "Securely transferring files between two or more parties, either through a web browser or via the command line.",
        "open_issues": 1,
        "cover_image_prompt": "A friendly messenger bird carrying a glowing, locked briefcase flies between two towering computers. One computer emits a stream of data particles that the bird collects, while the other computer awaits the bird's arrival to receive the secure package. The briefcase has a small screen displaying an encryption key. The scene is set against a backdrop of interconnected digital networks with soft, ethereal lighting. Small UI elements showing file transfer progress are subtly incorporated. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 574033594,
        "name": "mirotalkc2c",
        "description": "âœ¨WebRTC - C2C - Real-time cam-2-cam video calls & screen sharing, end-to-end encrypted, to embed in any website with a simple iframe.",
        "url": "https://github.com/miroslavpejic85/mirotalkc2c",
        "language": "JavaScript",
        "stars": 415,
        "forks": 83,
        "created_at": "2022-12-04T07:55:24Z",
        "updated_at": "2025-11-01T07:15:02Z",
        "topics": [
            "call",
            "collaboration",
            "e2e",
            "hacktoberfest",
            "hosting",
            "low-latency",
            "messaging",
            "messenger",
            "mirotalk",
            "p2p-chat",
            "peer-to-peer",
            "screen-capture",
            "self-hosted",
            "sharing",
            "talk",
            "video-conference",
            "video-conferencing",
            "webrtc",
            "webrtc-call",
            "webrtc-demo"
        ],
        "quality_score": 1.0,
        "contributors_count": 0,
        "last_commit_date": "2025-10-28T22:39:00Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/574033594/e4de5b17-9152-474f-a25e-37294243bd19"
        ],
        "homepage": "https://c2c.mirotalk.com",
        "readme_summary": "MiroTalk C2C is a WebRTC-based application for real-time cam-2-cam video calls and screen sharing. It offers end-to-end encryption and can be embedded into any website using a simple iframe, providing a self-hosted solution for low-latency, peer-to-peer communication.",
        "key_features": [
            "Real-time cam-2-cam video calls",
            "Screen sharing",
            "End-to-end encryption",
            "Embeddable via iframe",
            "Self-hosted",
            "Low-latency communication",
            "P2P connection"
        ],
        "primary_use_case": "Enabling secure, real-time video communication and screen sharing directly within websites without relying on third-party services.",
        "open_issues": 0,
        "cover_image_prompt": "A pair of doves perched on branches facing each other, representing peer-to-peer communication. A shimmering, encrypted connection visually links the doves. One dove holds a miniature screen displaying a live video feed, while the other dove presents a document, symbolizing screen sharing. The branches are subtly intertwined with fiber optic cables and glowing digital particles, connecting the natural imagery to technology. UI elements float around the doves. The scene is set in a sunlit forest clearing, creating a sense of peace and security. The image should be in a 3D isometric illustration style with soft, pastel colors."
    },
    {
        "id": 1050515012,
        "name": "map-anything",
        "description": "MapAnything: Universal Feed-Forward Metric 3D Reconstruction",
        "url": "https://github.com/facebookresearch/map-anything",
        "language": "Python",
        "stars": 2138,
        "forks": 118,
        "created_at": "2025-09-04T14:37:36Z",
        "updated_at": "2025-11-01T09:33:10Z",
        "topics": [
            "3d-reconstruction",
            "ai",
            "calibration",
            "depth-completion",
            "depth-estimation",
            "image-to-3d",
            "multi-view-stereo",
            "robotics",
            "sfm"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-10-24T17:39:42Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8eed5405bfaae993c76d61430c24b5382ac9ff3c42aae4662092c4f8ef3d396f/facebookresearch/map-anything"
        ],
        "homepage": "",
        "readme_summary": "MapAnything is a transformer model for metric 3D reconstruction. It takes various inputs like images, calibration data, and poses to directly regress the 3D geometry of a scene. The model supports multiple 3D reconstruction tasks, including multi-image structure from motion, multi-view stereo, and monocular depth estimation.",
        "key_features": [
            "Universal feed-forward metric 3D reconstruction",
            "Supports multi-image structure from motion (SFM)",
            "Supports multi-view stereo",
            "Supports monocular metric depth estimation",
            "Supports registration",
            "Supports depth completion",
            "COLMAP & GSplat Support"
        ],
        "primary_use_case": "3D reconstruction from various inputs using a single feed-forward model.",
        "open_issues": 43,
        "cover_image_prompt": "A skilled cartographer meticulously assembling a 3D map of a fantastical island from scattered fragments of images, depth data, and calibration tools. The cartographer uses a magical lens that transforms the diverse inputs into a cohesive, geometrically accurate model of the island, revealing hidden landscapes and structures. Small UI elements display the 'MapAnything' logo and data processing visualizations. The scene is set in a sunlit workshop filled with maps and surveying equipment. The image should be in a 3D isometric illustration style with vibrant colors and intricate details."
    },
    {
        "id": 946945328,
        "name": "Databuddy",
        "description": "Databuddy is a privacy-first analytics platform with a focus on user experience, with it's foundation built on privacy, it ensures complete compliance with most major data privacy laws out of the box",
        "url": "https://github.com/databuddy-analytics/Databuddy",
        "language": "TypeScript",
        "stars": 675,
        "forks": 85,
        "created_at": "2025-03-11T23:23:43Z",
        "updated_at": "2025-11-01T09:29:36Z",
        "topics": [
            "alternative",
            "analytics",
            "europe",
            "gdpr",
            "gdpr-compliant",
            "google-analytics",
            "privacy",
            "web-analytics"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-31T20:54:10Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/946945328/3869d287-abe0-4851-a5ae-3aa5b827cf5e"
        ],
        "homepage": "https://www.databuddy.cc",
        "readme_summary": "Databuddy is a privacy-first analytics platform designed to provide real-time analytics, user tracking, and data visualization capabilities for web applications. It emphasizes GDPR compliance and secure data handling, offering features like real-time dashboards, user behavior tracking, and data encryption.",
        "key_features": [
            "Real-time analytics dashboard",
            "User behavior tracking",
            "Secure authentication",
            "Multi-tenant support",
            "Goal tracking",
            "Conversion analytics",
            "Custom event tracking",
            "GDPR compliance",
            "Data encryption",
            "API access"
        ],
        "primary_use_case": "Privacy-focused web analytics and data management for web applications, ensuring GDPR compliance.",
        "open_issues": 3,
        "cover_image_prompt": "A skilled cartographer meticulously charting the course of a ship across a vast ocean, using a compass that glows with digital data points. The ship represents a website, and the ocean symbolizes user data. The cartographer carefully plots the ship's journey, ensuring it stays within the clearly marked boundaries of a 'Privacy Zone,' represented by a glowing, protective barrier. Small UI elements showing analytics dashboards are subtly overlaid on the map. The scene is set in a brightly lit, futuristic navigation room. The image should be in a clean, 3D isometric illustration style with a color scheme of blues, greens, and whites."
    },
    {
        "id": 262296122,
        "name": "PaddleOCR",
        "description": "Turn any PDF or image document into structured data for your AI. A powerful, lightweight OCR toolkit that bridges the gap between images/PDFs and LLMs. Supports 100+ languages.",
        "url": "https://github.com/PaddlePaddle/PaddleOCR",
        "language": "Python",
        "stars": 62227,
        "forks": 9202,
        "created_at": "2020-05-08T10:38:16Z",
        "updated_at": "2025-11-01T09:59:28Z",
        "topics": [
            "ai4science",
            "chineseocr",
            "document-parsing",
            "document-translation",
            "kie",
            "ocr",
            "paddleocr-vl",
            "pdf-extractor-rag",
            "pdf-parser",
            "pdf2markdown",
            "pp-ocr",
            "pp-structure",
            "rag"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-10-31T15:33:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f95f2a0416c757d739d08e682ee7f47a4f437a174782782a8e204a0a9af10273/PaddlePaddle/PaddleOCR"
        ],
        "homepage": "https://www.paddleocr.ai",
        "readme_summary": "PaddleOCR is a powerful and lightweight OCR toolkit designed to convert images and PDF documents into structured data suitable for AI applications, particularly Large Language Models (LLMs). It supports over 100 languages and offers functionalities like document parsing, translation, and key information extraction (KIE).",
        "key_features": [
            "OCR (Optical Character Recognition)",
            "Document Parsing",
            "PDF to Markdown conversion",
            "Key Information Extraction (KIE)",
            "Document Translation",
            "Support for 100+ languages",
            "PDF Extraction for RAG (Retrieval-Augmented Generation)",
            "PaddleOCR-VL (Visual Language)"
        ],
        "primary_use_case": "Converting images and PDF documents into structured data for AI applications, especially for use with Large Language Models (LLMs).",
        "open_issues": 190,
        "cover_image_prompt": "Imagine a skilled librarian meticulously organizing a chaotic collection of books and documents into a neatly structured digital database. The librarian uses a special magnifying glass that transforms handwritten notes and scanned images into clean, searchable text on a glowing tablet. Digital particles flow from the documents to the tablet, representing the conversion process. Small UI elements on the tablet display code snippets and data visualizations. The scene is set in a modern, well-lit library with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors, subtly incorporating the 'PaddleOCR' name on a book spine."
    },
    {
        "id": 1056341464,
        "name": "RustGPT",
        "description": "An transformer based LLM. Written completely in Rust",
        "url": "https://github.com/tekaratzas/RustGPT",
        "language": "Rust",
        "stars": 2928,
        "forks": 244,
        "created_at": "2025-09-13T22:05:55Z",
        "updated_at": "2025-11-01T07:18:21Z",
        "topics": [],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-10-10T19:47:37Z",
        "media_urls": [
            "https://opengraph.githubassets.com/80449050d5e5ff8f795263639b5404ddbb1fc43edeb28c141dd52d1c4c819c9b/tekaratzas/RustGPT"
        ],
        "homepage": null,
        "readme_summary": "RustGPT is a project that demonstrates building a transformer-based language model from scratch in Rust, without relying on external ML frameworks. It includes pre-training, instruction tuning, interactive chat mode, and full backpropagation, showcasing a modular architecture for educational purposes.",
        "key_features": [
            "Pre-training on factual text completion",
            "Instruction tuning for conversational AI",
            "Interactive chat mode for testing",
            "Full backpropagation with gradient clipping",
            "Modular architecture with clean separation of concerns",
            "Transformer-based architecture",
            "Implemented using `ndarray` for matrix operations"
        ],
        "primary_use_case": "Educational demonstration of building a transformer-based language model from scratch in Rust.",
        "open_issues": 5,
        "cover_image_prompt": "A lone artisan meticulously crafting a complex clockwork brain from raw Rust code, each gear representing a different component of a language model. The brain sits atop a pedestal, glowing softly, as it learns from streams of digital text flowing around it. Small UI elements display training metrics and conversational outputs. The scene is set in a futuristic workshop filled with tools and holographic displays. The image should be in a 3D isometric illustration style with intricate details and a warm, inviting color scheme."
    }
]