[
    {
        "id": 1016047023,
        "name": "PulseTimer",
        "description": "A modern work timer application with customizable work-break intervals, desktop notifications, and clean UI..",
        "url": "https://github.com/Efeckc17/PulseTimer",
        "language": "JavaScript",
        "stars": 5,
        "forks": 0,
        "created_at": "2025-07-08T12:11:08Z",
        "updated_at": "2025-07-16T09:18:12Z",
        "topics": [
            "css",
            "html5",
            "javascript",
            "open-source",
            "pomodoro",
            "pomodoro-app",
            "timer-application",
            "timer-clock",
            "timer-website",
            "web-application"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-07-11T09:29:03Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8186c6086bf8b96bcacf50053f17273b6d8692cb6068941e910bc19935ebd3a6/Efeckc17/PulseTimer"
        ],
        "homepage": "https://timer.toxi360.org",
        "readme_summary": "PulseTimer is a modern work timer application designed to enhance productivity by structuring work and break intervals. It offers customizable work sessions, smart break management, a user-friendly interface, a notification system, and session tracking to help users maintain a healthy work-life balance.",
        "key_features": [
            "Customizable Work Sessions",
            "Smart Break Management",
            "User-Friendly Interface",
            "Notification System",
            "Session Tracking"
        ],
        "primary_use_case": "Boosting productivity through structured work and break sessions.",
        "open_issues": 0,
        "cover_image_prompt": "A conductor orchestrating a diverse group of musicians, each representing a different task or work interval. The conductor's baton is a sleek timer, visually dividing the performance into focused segments and break periods. UI elements float subtly in the background, displaying session names and progress bars. The stage is bathed in warm, focused lighting during work intervals, shifting to cool, relaxing hues during breaks. Small digital particles represent tasks being completed and refreshed. The composition is clean and balanced, with a focus on the conductor and the flow of the music. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1016562358,
        "name": "steganan",
        "description": "Steganography in floating point data with NaN payloads",
        "url": "https://github.com/kjordahl/steganan",
        "language": "Python",
        "stars": 15,
        "forks": 1,
        "created_at": "2025-07-09T07:39:08Z",
        "updated_at": "2025-07-16T10:03:21Z",
        "topics": [],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-16T00:16:24Z",
        "media_urls": [
            "https://opengraph.githubassets.com/60caad59cb7de5cb32155c9a6ceec0d1f92f4ca1c41af750a17c7b1dab3dac5b/kjordahl/steganan"
        ],
        "homepage": null,
        "readme_summary": "The steganan repository provides tools for steganography, specifically for encoding and decoding data within the NaN (Not a Number) values of floating-point numbers. It allows users to hide information within datasets or arrays by manipulating these often-unused bits, offering a method for concealing data within numerical information.",
        "key_features": [
            "Steganography in floating point data",
            "Encoding data into NaN values",
            "Decoding data from NaN values",
            "Hiding data in existing floating point arrays"
        ],
        "primary_use_case": "Hiding data within floating point numbers by leveraging NaN values.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled cartographer meticulously concealing a detailed map within a seemingly blank parchment using an intricate quill. The parchment rests on a high-tech workbench amidst glowing screens displaying floating-point numbers and subtle NaN patterns. The cartographer wears a magnifying glass, revealing hidden data layers within the parchment's texture. Digital particles subtly emanate from the quill, representing encoded information. The scene is set in a futuristic workshop with soft, diffused lighting. The image should be in a detailed digital painting style with clear outlines and a focus on intricate details."
    },
    {
        "id": 298332340,
        "name": "landscapist",
        "description": "ðŸŒ» A pluggable, highly optimized Jetpack Compose and Kotlin Multiplatform image loading library that fetches and displays network images with Glide, Coil, and Fresco.",
        "url": "https://github.com/skydoves/landscapist",
        "language": "Kotlin",
        "stars": 2327,
        "forks": 124,
        "created_at": "2020-09-24T16:18:03Z",
        "updated_at": "2025-07-16T09:41:47Z",
        "topics": [
            "android",
            "compose",
            "compose-coil",
            "compose-fresco",
            "compose-glide",
            "image",
            "image-loading",
            "jetpack-compose",
            "kotlin",
            "landscapist",
            "library",
            "network",
            "skydoves"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T13:37:22Z",
        "media_urls": [
            "https://opengraph.githubassets.com/54fd64d3291f46a122588be1a3ab799050dd7f558593feeaaae0f7acd4736acd/skydoves/landscapist"
        ],
        "homepage": "https://skydoves.github.io/landscapist/",
        "readme_summary": "Landscapist is a Kotlin library that simplifies and optimizes image loading in Jetpack Compose and Kotlin Multiplatform projects. It provides a pluggable architecture supporting Glide, Coil, and Fresco, along with features like image state tracing, custom composables, animations, and image plugins for configurable behaviors, all while improving performance with Baseline Profiles.",
        "key_features": [
            "Pluggable image loading with Glide, Coil, and Fresco",
            "Jetpack Compose support",
            "Kotlin Multiplatform support",
            "Image loading state tracing",
            "Custom composable implementations",
            "Animations (crossfade, blur, circular reveal)",
            "Image plugins for configurable behaviors",
            "Baseline Profiles for performance improvement"
        ],
        "primary_use_case": "Loading and displaying network images in Jetpack Compose and Kotlin Multiplatform applications with optimized performance and pluggable image loading libraries.",
        "open_issues": 7,
        "cover_image_prompt": "A skilled artisan meticulously crafting a vibrant mosaic from various image fragments (Glide, Coil, Fresco) sourced from the internet, each piece fitting perfectly into a larger canvas representing a mobile app screen. The artisan uses specialized tools that subtly resemble code editors and UI design interfaces. Digital particles representing data flow around the artisan, highlighting the optimized image loading process. The repository name, 'Landscapist,' is subtly etched onto the artisan's workbench. The scene is set in a bright, modern studio with a focus on precision and artistry. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 19415064,
        "name": "computer-science",
        "description": "ðŸŽ“ Path to a free self-taught education in Computer Science!",
        "url": "https://github.com/ossu/computer-science",
        "language": "HTML",
        "stars": 188267,
        "forks": 23477,
        "created_at": "2014-05-04T00:18:39Z",
        "updated_at": "2025-07-16T10:05:32Z",
        "topics": [
            "awesome-list",
            "computer-science",
            "courses",
            "curriculum"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-05T02:45:40Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f70efa49c938aebb61280ddea6646ae9b9175942cec797e0f6595ee7efc6c434/ossu/computer-science"
        ],
        "homepage": "",
        "readme_summary": "The computer-science repository offers a comprehensive, self-directed computer science education using freely available online materials. It mirrors an undergraduate CS curriculum, featuring courses from top universities and a structured learning path from introductory to advanced topics, culminating in a final project. The goal is to provide a well-rounded grounding in fundamental computing concepts for self-motivated learners.",
        "key_features": [
            "Complete computer science education using online materials",
            "Curriculum designed according to undergraduate CS degree requirements",
            "Courses from top universities (Harvard, Princeton, MIT)",
            "Free or nearly free course material",
            "Structured curriculum: Intro CS, Core CS, Advanced CS, Final Project"
        ],
        "primary_use_case": "Provides a free, self-taught education in computer science using online resources.",
        "open_issues": 13,
        "cover_image_prompt": "A grand library where knowledge is freely accessible. A student sits at a desk, illuminated by a soft glow, constructing a towering structure of knowledge from building blocks labeled with computer science concepts like 'Algorithms,' 'Data Structures,' and 'Networking.' Each block is sourced from open books and online courses that float around the student. A subtle UI element in the background displays a course curriculum. The scene is set in a warm, inviting atmosphere with a focus on learning and growth. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]