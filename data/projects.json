[
    {
        "id": 800632485,
        "name": "subtrace",
        "description": "Wireshark for Docker containers",
        "url": "https://github.com/subtrace/subtrace",
        "language": "Go",
        "stars": 1503,
        "forks": 28,
        "created_at": "2024-05-14T17:44:49Z",
        "updated_at": "2025-02-21T19:02:18Z",
        "topics": [
            "backend",
            "devtools",
            "monitoring",
            "observability"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-02-20T03:22:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e984b68ac82f42290a7dc889ba75246a202742be8de941b5d4ed4e39777e18bf/subtrace/subtrace"
        ],
        "homepage": "https://subtrace.dev",
        "readme_summary": "Subtrace is a tool to debug Docker containers by viewing network requests.  It supports all major programming languages and requires no code changes.  It provides detailed request information with minimal performance overhead.",
        "key_features": [
            "Works out-of-the-box",
            "No code changes needed",
            "Supports all languages (Python + Node + Go + everything else)",
            "See full payload, headers, status code, and latency",
            "Less than 100µs performance overhead",
            "Built on Clickhouse"
        ],
        "primary_use_case": "View all incoming and outgoing requests in Docker containers to resolve backend server production issues faster",
        "open_issues": 10
    },
    {
        "id": 908068887,
        "name": "google_photos_mobile_client",
        "description": "Reverse engineered Google Photos mobile API client.",
        "url": "https://github.com/xob0t/google_photos_mobile_client",
        "language": "Python",
        "stars": 31,
        "forks": 5,
        "created_at": "2024-12-25T03:29:35Z",
        "updated_at": "2025-02-21T10:00:02Z",
        "topics": [
            "android",
            "google-photos",
            "httptoolkit",
            "pyhton",
            "reverse-engineering",
            "unlimited-storage",
            "unofficial"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-02-18T20:23:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a command-line interface and Python client for uploading files to Google Photos, mimicking a Pixel XL device.  It offers features such as progress tracking, recursive directory uploads, and options for managing storage quota and deleting source files after upload.  The tool requires obtaining authentication data from a rooted Android device or emulator.",
        "key_features": [
            "Uploads files to Google Photos as if from a Pixel XL device",
            "Provides both Python client and CLI interfaces",
            "Supports various options like progress display, recursive directory upload, multi-threading, and more",
            "Allows specifying album for uploaded media",
            "Offers options for handling storage quota and file deletion after upload"
        ],
        "primary_use_case": "Uploading files to Google Photos without using a physical device or emulator",
        "open_issues": 2
    },
    {
        "id": 914092741,
        "name": "ClatScope",
        "description": "ClatScope Info Tool – The best and most versatile OSINT utility for retrieving geolocation, DNS, WHOIS, phone, email, data breach information and much more (60 features). Perfect for investigators, pentesters, or anyone looking for an effective reconnaissance / OSINT tool. CLI version is always released before the GUI version.",
        "url": "https://github.com/Clats97/ClatScope",
        "language": "Python",
        "stars": 449,
        "forks": 56,
        "created_at": "2025-01-08T23:54:32Z",
        "updated_at": "2025-02-21T18:55:50Z",
        "topics": [
            "intelligence",
            "investigation",
            "osint",
            "osint-python",
            "osint-reconnaissance",
            "osint-resources",
            "osint-tool",
            "trending",
            "trending-repositories"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-02-16T10:15:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a98af2311eca76d15af11d303ce54aaad9334a788d6d3e7bc40002b880541e42/Clats97/ClatScope"
        ],
        "homepage": "",
        "readme_summary": "ClatScope Info Tool is a versatile OSINT utility for gathering information from various online sources.  It offers features such as IP geolocation, deep account searches, phone number analysis, email verification, and more, making it suitable for investigators and security professionals.  The tool leverages multiple APIs and public resources to provide comprehensive results.",
        "key_features": [
            "IP geolocation, ISP, and Google Maps link extraction",
            "Deep account search across 250+ websites",
            "Phone number validation, carrier identification, and region determination",
            "DNS record retrieval (A, CNAME, MX, NS) and PTR records",
            "Email MX record checks, format validation, and header parsing",
            "Email breach check using Have I Been Pwned",
            "Email header analysis and data extraction",
            "Public person details lookup",
            "WHOIS lookup for domain registration details",
            "Password strength check",
            "Username search across various websites",
            "Reverse phone search using Google",
            "Robots.txt and Sitemap.xml file retrieval",
            "SSL certificate information retrieval",
            "DNSBL search for blacklist information",
            "Website metadata retrieval"
        ],
        "primary_use_case": "OSINT (Open-Source Intelligence) investigations and reconnaissance",
        "open_issues": 0
    },
    {
        "id": 249331466,
        "name": "laplace",
        "description": "Laplace is an open-source project to enable screen sharing directly via browser. Based on WebRTC for low latency peer-to-peer connections, and WebSocket implemented in golang for signaling.",
        "url": "https://github.com/adamyordan/laplace",
        "language": "JavaScript",
        "stars": 309,
        "forks": 31,
        "created_at": "2020-03-23T03:58:55Z",
        "updated_at": "2025-02-21T19:01:37Z",
        "topics": [
            "peer-to-peer",
            "screencast",
            "screensharing",
            "webrtc",
            "webrtc-signaling",
            "websocket"
        ],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2020-03-28T07:57:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/aca4e75c8b55048725c260334a7368453c380fdc447ca8f7d234f8c2a0c983a8/adamyordan/laplace"
        ],
        "homepage": "https://laplace.adamjordan.id/",
        "readme_summary": "Laplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Go-based WebSocket for signaling.  It avoids the need for installations or registrations, minimizing server costs by performing encoding and transmission on the client side.  This is useful for game streaming, collaborative work, and presentations.",
        "key_features": [
            "WebRTC for low latency peer-to-peer connections",
            "WebSocket implemented in golang for WebRTC signaling",
            "Screen sharing directly via browser",
            "No installation or registration required",
            "Low server cost because encoding and transmission are done on client browsers"
        ],
        "primary_use_case": "Screen sharing directly via browser without requiring software installations or plugins",
        "open_issues": 5
    },
    {
        "id": 853917967,
        "name": "fast-music-remover",
        "description": "A C++ based, lightweight music and noise remover for YouTube and other internet media, using DeepFilterNet for audio enhancement.",
        "url": "https://github.com/omeryusufyagci/fast-music-remover",
        "language": "C++",
        "stars": 547,
        "forks": 39,
        "created_at": "2024-09-07T22:35:11Z",
        "updated_at": "2025-02-21T13:30:42Z",
        "topics": [
            "audio-cleaner",
            "audio-enhancement",
            "audio-extractor",
            "audio-processing",
            "cpp",
            "deepfilternet",
            "ffmpeg",
            "flask",
            "machine-learning",
            "media-editor",
            "media-processing",
            "music-remover",
            "noise-removal",
            "processing",
            "realtime",
            "speech-extractor",
            "vocal-extractor",
            "youtube",
            "yt-dlp"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2024-12-27T11:42:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d2f6dde957786f1317781fb6f6d3a21aa98eba5b3d13d18d480ea5f191b8b9e2/omeryusufyagci/fast-music-remover"
        ],
        "homepage": "",
        "readme_summary": "Fast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It offers cross-platform support and a web UI, with future plans for real-time processing and additional ML models.  The project is containerized for easy deployment.",
        "key_features": [
            "background music filtering",
            "noise removal",
            "audio quality enhancement",
            "cross-platform support (Linux, macOS, Windows)",
            "containerized on GHCR",
            "web UI",
            "project launcher to manage dependency installation, project configuration, and starting the web application",
            "future support for more ML models and DSP modules",
            "future support for real-time processing"
        ],
        "primary_use_case": "Removing background music and noise from audio",
        "open_issues": 22
    },
    {
        "id": 49876476,
        "name": "shardingsphere",
        "description": "Empowering Data Intelligence with Distributed SQL for Sharding, Scalability, and Security Across All Databases.",
        "url": "https://github.com/apache/shardingsphere",
        "language": "Java",
        "stars": 20068,
        "forks": 6792,
        "created_at": "2016-01-18T12:49:26Z",
        "updated_at": "2025-02-21T17:18:11Z",
        "topics": [
            "bigdata",
            "data-encryption",
            "data-pipeline",
            "database",
            "database-cluster",
            "database-gateway",
            "database-middleware",
            "distributed-database",
            "distributed-sql-database",
            "distributed-transaction",
            "encrypt",
            "mysql",
            "postgresql",
            "read-write-splitting",
            "shard",
            "sql"
        ],
        "quality_score": 1.1,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T17:18:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/78e7b2c80f42400cb4a97a7b06c2776004f83d9e18646ea3d6429a728c0caa90/apache/shardingsphere"
        ],
        "homepage": "",
        "readme_summary": "ShardingSphere is a distributed database middleware that provides features for data sharding, scaling, and encryption.  It acts as a query engine, handling distributed SQL transactions across various databases.  This allows for improved performance and manageability of large datasets.",
        "key_features": [
            "Distributed SQL transaction",
            "query engine for data sharding",
            "scaling",
            "encryption"
        ],
        "primary_use_case": "Data sharding, scaling, and encryption on any database",
        "open_issues": 477
    },
    {
        "id": 139199684,
        "name": "prefect",
        "description": "Prefect is a workflow orchestration framework for building resilient data pipelines in Python.",
        "url": "https://github.com/PrefectHQ/prefect",
        "language": "Python",
        "stars": 18341,
        "forks": 1710,
        "created_at": "2018-06-29T21:59:26Z",
        "updated_at": "2025-02-21T18:36:47Z",
        "topics": [
            "automation",
            "data",
            "data-engineering",
            "data-ops",
            "data-science",
            "infrastructure",
            "ml-ops",
            "observability",
            "orchestration",
            "pipeline",
            "prefect",
            "python",
            "workflow",
            "workflow-engine"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T18:36:38Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7e550298185c6ee66d8b907a0e91d68fc3ea8df13e3517c34f8dac5f20320cf6/PrefectHQ/prefect"
        ],
        "homepage": "https://prefect.io",
        "readme_summary": "Prefect is a Python framework for building data pipelines.  It offers features like scheduling, caching, and retries to create resilient workflows.  These workflows can be monitored via a self-hosted server or Prefect Cloud.",
        "key_features": [
            "workflow orchestration",
            "data pipeline building",
            "scheduling",
            "caching",
            "retries",
            "event-based automations",
            "monitoring",
            "self-hosted server",
            "Prefect Cloud integration"
        ],
        "primary_use_case": "building and managing data pipelines in Python",
        "open_issues": 957
    },
    {
        "id": 577623124,
        "name": "VPet",
        "description": "虚拟桌宠模拟器 一个开源的桌宠软件, 可以内置到任何WPF应用程序",
        "url": "https://github.com/LorisYounger/VPet",
        "language": "C#",
        "stars": 5092,
        "forks": 508,
        "created_at": "2022-12-13T06:37:41Z",
        "updated_at": "2025-02-21T15:25:36Z",
        "topics": [
            "desktop-pet",
            "wpf"
        ],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T09:56:32Z",
        "media_urls": [
            "https://opengraph.githubassets.com/687fda15083eea9c5910a247dd7a35f548f4936a0f4fa710924be80989359b60/LorisYounger/VPet"
        ],
        "homepage": "",
        "readme_summary": "VPet-Simulator is an open-source virtual pet software that can be integrated into WPF applications.  It offers a wide variety of interactions and animations, and supports modding through a dedicated tool and Steam Workshop.  Users can create and share custom pets, animations, and functionalities.",
        "key_features": [
            "Open-source virtual pet simulator software",
            "Integratable into any WPF application via NuGet",
            "Supports various interactions and animations (32 types * 4 states * 3 categories)",
            "Features a modding system with support for custom animations, items, and functionalities via code plugins",
            "Includes a dedicated MOD maker tool",
            "Supports Steam Workshop for sharing custom content"
        ],
        "primary_use_case": "To provide a virtual pet simulator that can be integrated into other WPF applications or used as a standalone desktop application.",
        "open_issues": 22
    },
    {
        "id": 146327667,
        "name": "vector",
        "description": "A high-performance observability data pipeline.",
        "url": "https://github.com/vectordotdev/vector",
        "language": "Rust",
        "stars": 18818,
        "forks": 1668,
        "created_at": "2018-08-27T16:57:34Z",
        "updated_at": "2025-02-21T18:18:59Z",
        "topics": [
            "events",
            "forwarder",
            "logs",
            "metrics",
            "observability",
            "parser",
            "pipeline",
            "router",
            "rust",
            "stream-processing",
            "vector"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T17:17:46Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/146327667/79b84380-28db-11eb-9bb0-13be8f3541cc"
        ],
        "homepage": "https://vector.dev",
        "readme_summary": "Vector is a high-performance data pipeline written in Rust, designed for reliable collection, transformation, and routing of logs and metrics.  It supports various data sources and destinations, enabling users to manage and reduce observability costs while improving data quality and insights.  Vector functions as both an agent and aggregator, offering flexibility in deployment.",
        "key_features": [
            "High-performance, end-to-end observability data pipeline",
            "Collects, transforms, and routes logs and metrics",
            "Built in Rust for reliability",
            "Unified handling of logs, metrics, and traces",
            "Agent and aggregator deployment modes",
            "Supports various sources and sinks"
        ],
        "primary_use_case": "Collecting, transforming, and routing observability data (logs and metrics) to various vendors.",
        "open_issues": 1829
    }
]