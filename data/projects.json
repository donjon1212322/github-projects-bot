[
    {
        "id": 903700733,
        "name": "gitdiagram",
        "description": "Free, simple, fast interactive diagrams for any GitHub repository",
        "url": "https://github.com/ahmedkhaleel2004/gitdiagram",
        "language": "TypeScript",
        "stars": 14555,
        "forks": 1080,
        "created_at": "2024-12-15T10:32:03Z",
        "updated_at": "2025-10-22T10:10:36Z",
        "topics": [
            "ai",
            "code",
            "github",
            "system-design"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-05-26T08:22:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/50211dbd90ef5730df27f880d6854ca234465c690586ffc44e2a1af286714ad9/ahmedkhaleel2004/gitdiagram"
        ],
        "homepage": "https://gitdiagram.com",
        "readme_summary": "GitDiagram transforms GitHub repositories into interactive diagrams for visualization. It allows users to quickly understand the structure of a repository, navigate to source files, and customize the generated diagrams. The tool leverages AI to generate diagrams and provides an API for integration.",
        "key_features": [
            "Instant Visualization",
            "Interactivity",
            "Fast Generation",
            "Customization",
            "API Access"
        ],
        "primary_use_case": "Visualizing and understanding the structure of GitHub repositories.",
        "open_issues": 25,
        "cover_image_prompt": "A cartographer standing over a large, intricate map representing a GitHub repository. The map is filled with interconnected nodes and pathways, symbolizing files and directories. The cartographer uses a magnifying glass to examine specific sections, revealing code snippets and file details. A digital interface overlays the map, showing real-time updates and interactive elements. The scene is set in a brightly lit study with a futuristic feel. Small screens display the GitDiagram logo and repository statistics. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 29745084,
        "name": "leantime",
        "description": "Leantime is a goals focused project management system for non-project managers. Building with ADHD, Autism, and dyslexia in mind.",
        "url": "https://github.com/Leantime/leantime",
        "language": "PHP",
        "stars": 8467,
        "forks": 817,
        "created_at": "2015-01-23T17:52:06Z",
        "updated_at": "2025-10-22T09:20:02Z",
        "topics": [
            "agile",
            "asana",
            "calendar",
            "clickup",
            "gantt",
            "hacktoberfest",
            "jira",
            "kanban",
            "lean",
            "leantime",
            "notion",
            "php",
            "project-management",
            "projects",
            "retrospective",
            "scrum",
            "sql",
            "strategy",
            "timesheets",
            "trello"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-10-13T15:38:21Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/29745084/2aa39f24-6897-42a5-8987-b5594933c010"
        ],
        "homepage": "https://leantime.io",
        "readme_summary": "Leantime is an open-source project management system designed for non-project managers. It combines strategy, planning, and execution with a focus on ease of use, incorporating features like Kanban boards, Gantt charts, and goal tracking. It aims to be a simpler alternative to tools like Jira and ClickUp.",
        "key_features": [
            "Task management (Kanban, Gantt, table, list, calendar views)",
            "Project planning (dashboards, reports, status updates, goal tracking)",
            "Information/Knowledge management (Wikis, Idea Boards, Retrospectives)",
            "Administration (easy installation, user roles, 2FA, LDAP/OIDC integration, plugin/API extensibility)"
        ],
        "primary_use_case": "Project management for teams, especially those without dedicated project managers, focusing on strategy, planning, and execution.",
        "open_issues": 246,
        "cover_image_prompt": "A skilled architect overseeing the construction of a grand building, representing a project. The architect uses a simplified blueprint (Kanban board) to guide a diverse team of builders (users) working together seamlessly. The building's foundation represents the project's strategy, the walls represent planning, and the final structure embodies successful execution. Subtle UI elements like progress bars and task lists are integrated into the building's facade. The scene is set in a bright, collaborative workspace with natural lighting. The image should be in a 3D isometric illustration style with clean lines and a focus on clarity."
    },
    {
        "id": 589261862,
        "name": "f2",
        "description": "High-speed downloader for multiple platforms",
        "url": "https://github.com/Johnserf-Seed/f2",
        "language": "Python",
        "stars": 2044,
        "forks": 310,
        "created_at": "2023-01-15T16:00:01Z",
        "updated_at": "2025-10-22T09:23:23Z",
        "topics": [
            "api",
            "bark",
            "bilibili",
            "douyin",
            "downloader",
            "pypi",
            "tiktok",
            "tools",
            "twitter",
            "weibo"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-10-12T14:18:46Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/589261862/4efe6272-e3d2-4f51-a19a-f491a89172ee"
        ],
        "homepage": "http://f2.wiki/",
        "readme_summary": "F2 is a Python library designed for high-speed downloading and processing data from various platforms like DouYin, TikTok, Twitter, and WeiBo. It provides tools for downloading content and handling API data, with the goal of being easily adaptable to support additional platforms.",
        "key_features": [
            "Multi-platform downloading (DouYin, TikTok, Twitter, WeiBo)",
            "API data processing",
            "Bark app support",
            "Live stream downloading",
            "Live stream comment forwarding",
            "Configurable via configuration files and CLI",
            "Batch processing capabilities"
        ],
        "primary_use_case": "Downloading content and processing API data from social media platforms.",
        "open_issues": 68,
        "cover_image_prompt": "A skilled chef expertly preparing a dish using ingredients sourced from around the world, each representing a different social media platform (Douyin, TikTok, Twitter, Weibo). The chef carefully selects and combines these ingredients, representing the downloading and processing of data. A digital screen subtly displays API code and data streams, while the finished dish is presented on a server rack, symbolizing the processed output. The scene is set in a modern, well-lit kitchen. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 1024863854,
        "name": "dataset-viewer",
        "description": "A sleek dataset viewer built entirely by AI Agent. Supports streaming large files from WebDAV, S3, SSH, Local or Hugging Face.",
        "url": "https://github.com/stardustai/dataset-viewer",
        "language": "TypeScript",
        "stars": 558,
        "forks": 37,
        "created_at": "2025-07-23T11:08:36Z",
        "updated_at": "2025-10-22T09:14:21Z",
        "topics": [
            "ai",
            "file-streaming",
            "huggingface",
            "s3",
            "smb",
            "ssh",
            "tauri",
            "text",
            "vibe-coding",
            "viewer",
            "webdav"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-10-21T06:38:44Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a55a943b77f3c01d453fc105ce10a67791422c5914b5f40cab2f0eea851e76f0/stardustai/dataset-viewer"
        ],
        "homepage": "https://stardustai.github.io/dataset-viewer",
        "readme_summary": "The Dataset Viewer is a high-performance tool built with Tauri, React, and TypeScript for viewing and searching massive datasets. It supports streaming large files (100GB+) from various sources like WebDAV, S3, SSH, and Hugging Face, and offers features like millisecond search and direct archive preview.",
        "key_features": [
            "Instant Large File Opening",
            "Real-time Search",
            "Direct Archive Preview",
            "Multi-Protocol Support (WebDAV, SSH/SFTP, SMB/CIFS, S3, Local Files, HuggingFace Hub)",
            "Multi-Format Support (Parquet, Excel, CSV, JSON, code files with syntax highlighting)",
            "Modern Interface (Dark/light themes, responsive design, multi-language support)"
        ],
        "primary_use_case": "Viewing, searching, and analyzing large datasets from various sources and formats.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a librarian standing in a vast, futuristic library filled with glowing data streams instead of books. The librarian uses a special magnifying glass that instantly displays the contents of each data stream, regardless of its size or format. Around the librarian, holographic screens show snippets of code, data visualizations, and file previews. The library is organized by glowing network cables representing different data sources like S3, WebDAV, and Hugging Face. The scene is brightly lit with a cool color scheme. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 92111509,
        "name": "Trilium",
        "description": "Build your personal knowledge base with Trilium Notes",
        "url": "https://github.com/TriliumNext/Trilium",
        "language": "TypeScript",
        "stars": 32305,
        "forks": 2144,
        "created_at": "2017-05-23T00:30:20Z",
        "updated_at": "2025-10-22T10:13:10Z",
        "topics": [
            "electron",
            "electron-app",
            "knowledge-base",
            "knowledge-graph",
            "knowledge-management",
            "knowledge-management-graph",
            "local-first",
            "note-managment",
            "note-taker",
            "note-taking",
            "notebook",
            "notes",
            "notes-app",
            "personal-knowledge-base",
            "personal-wiki",
            "scriptable",
            "self-hosted",
            "self-hosting",
            "wiki"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-22T05:00:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/dd34caa1aacaf850559b801459159b0be0571e9c2b3b0bbc3ac138776f2ad7c9/TriliumNext/Trilium"
        ],
        "homepage": "https://triliumnotes.org",
        "readme_summary": "Trilium Notes is a free, open-source, cross-platform note-taking application designed for building large personal knowledge bases. It allows users to organize notes in a hierarchical tree structure, supports rich text editing with features like tables, images, and code syntax highlighting, and offers functionalities such as note versioning, full-text search, and note cloning.",
        "key_features": [
            "Hierarchical note arrangement",
            "Rich WYSIWYG note editor",
            "Source code note editing with syntax highlighting",
            "Fast note navigation and full-text search",
            "Note versioning",
            "Note cloning"
        ],
        "primary_use_case": "Building and managing a personal knowledge base.",
        "open_issues": 856,
        "cover_image_prompt": "Imagine a wise librarian meticulously organizing glowing orbs of knowledge within a vast, branching tree. Each orb represents a note, connected by shimmering threads of association. The librarian carefully places, clones, and links these orbs, creating a vibrant, interconnected knowledge network. Subtle UI elements float nearby, displaying code snippets and search results. The scene is set in a serene, futuristic library with soft, ethereal lighting. The composition is wide and balanced, emphasizing the interconnectedness of knowledge. The image should be in a 3D isometric illustration style with rich details and a calming color scheme."
    }
]