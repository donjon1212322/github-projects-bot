[
    {
        "id": 941488000,
        "name": "duck",
        "description": "Disk usage analysis tool with an interactive command line interface",
        "url": "https://github.com/darusc/duck",
        "language": "C",
        "stars": 22,
        "forks": 2,
        "created_at": "2025-03-02T12:16:00Z",
        "updated_at": "2025-03-18T08:57:25Z",
        "topics": [
            "cli",
            "disk-usage",
            "disk-usage-analyzer",
            "disk-usage-visualizer",
            "interactive-cli",
            "tui"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-03-16T08:40:08Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f1d98e5085c471302a5f9e96ce42628f4895a12b2e69390eb948c901cec40062/darusc/duck"
        ],
        "homepage": "",
        "readme_summary": "Duck is a cross-platform, terminal-based disk usage analysis tool and file explorer. It provides an interactive command-line interface for visualizing disk space, navigating directories, and identifying large files. It supports filtering files by extension and sorting by size, name, or item count.",
        "key_features": [
            "Interactive command line interface",
            "Disk usage analysis",
            "File explorer",
            "Cross-platform support",
            "Terminal-based UI",
            "Directory navigation",
            "Sorting (size, alphabetic, items)",
            "Exclusion/inclusion of files by extension"
        ],
        "primary_use_case": "Analyzing disk space usage and navigating directories from the terminal.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a diligent librarian meticulously organizing a vast library where each book represents a file or directory on a hard drive. The librarian uses a special magnifying glass that reveals the size and type of each book, allowing them to quickly identify the largest and most important volumes. Digital particles float around the librarian, representing data being analyzed. A small screen in the background displays a simplified file system tree. The scene is set in a brightly lit, modern library with a clean and organized aesthetic. The image should be in a 3D isometric illustration style with clear details and a vibrant color scheme."
    },
    {
        "id": 948951594,
        "name": "rust-stakeholder",
        "description": "Generate impressive-looking terminal output to look busy when stakeholders walk by",
        "url": "https://github.com/giacomo-b/rust-stakeholder",
        "language": "Rust",
        "stars": 1484,
        "forks": 31,
        "created_at": "2025-03-15T10:36:48Z",
        "updated_at": "2025-03-18T10:10:45Z",
        "topics": [],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-17T16:32:01Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2a44bfbf16ba1819999ceb4a1846ab47008d81d17497d7f8b15707fa31f0090a/giacomo-b/rust-stakeholder"
        ],
        "homepage": "",
        "readme_summary": "The rust-stakeholder is a satirical CLI tool designed to generate meaningless but impressive terminal output. It aims to help developers *look* productive by simulating various development activities, generating jargon, and displaying fake progress bars, ultimately creating the illusion of high productivity for stakeholders.",
        "key_features": [
            "Dazzling development simulations",
            "Meaningless jargon generator",
            "Convincing progress bars",
            "Fake network activity",
            "Artificial crisis mode",
            "Imaginary team activity",
            "Domain chameleon"
        ],
        "primary_use_case": "Generating impressive-looking terminal output to appear busy and competent to stakeholders.",
        "open_issues": 3,
        "cover_image_prompt": "A stage magician in a brightly lit theater, dramatically pulling back a curtain to reveal a complex array of blinking lights, progress bars, and scrolling text on a large screen. The magician wears a suit covered in circuit patterns and holds a wand that emits streams of digital code. The audience, composed of business executives in suits, looks on in awe and admiration. Small UI elements and code snippets are subtly incorporated into the screen's display. The scene is set in a grand, ornate theater with dramatic lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 130011760,
        "name": "glom",
        "description": "☄️ Python's nested data operator (and CLI), for all your declarative restructuring needs. Got data? Glom it! ☄️",
        "url": "https://github.com/mahmoud/glom",
        "language": "Python",
        "stars": 1963,
        "forks": 66,
        "created_at": "2018-04-18T06:03:24Z",
        "updated_at": "2025-03-18T09:32:43Z",
        "topics": [
            "apis",
            "cli",
            "data",
            "data-transformation",
            "declarative",
            "dictionaries",
            "nested-structures",
            "python",
            "recursion",
            "utilities"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-01-12T07:12:14Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/130011760/54c5f580-eebd-11e9-9d09-eb032795f913"
        ],
        "homepage": "https://glom.readthedocs.io",
        "readme_summary": "Glom is a Python library and CLI tool designed for restructuring and accessing data within nested structures. It provides path-based access, declarative transformations, and debugging features, simplifying complex data manipulation. Glom aims to make working with real-world, nested data more manageable and less error-prone.",
        "key_features": [
            "Path-based access for nested data structures",
            "Readable, meaningful error messages",
            "Declarative data transformation using Pythonic specifications",
            "Built-in data exploration and debugging features",
            "Command-line interface"
        ],
        "primary_use_case": "Restructuring and accessing nested data structures in Python.",
        "open_issues": 96,
        "cover_image_prompt": "A skilled cartographer meticulously charting a vast, tangled jungle of interconnected vines, each representing a nested data structure. The cartographer uses a specialized lens, labeled 'glom', to clearly map pathways through the dense foliage, extracting valuable resources represented by glowing gems. A small UI element displays a simplified, structured map derived from the jungle's complexity. The scene is set in a sunlit clearing with a sense of discovery and order. The composition is focused and clean with a vibrant green and gold color scheme. The image should be in a 3D isometric illustration style with rich details and clear labeling."
    },
    {
        "id": 761150311,
        "name": "unstract",
        "description": "No-code LLM Platform to launch APIs and ETL Pipelines to structure unstructured documents",
        "url": "https://github.com/Zipstack/unstract",
        "language": "Python",
        "stars": 4911,
        "forks": 418,
        "created_at": "2024-02-21T10:34:33Z",
        "updated_at": "2025-03-18T08:42:45Z",
        "topics": [
            "etl-pipeline",
            "llm-platform",
            "unstructured-data"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-18T07:15:47Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/761150311/9bd8d8f4-848f-4aeb-8fd1-6d917ba89943"
        ],
        "homepage": "https://unstract.com",
        "readme_summary": "Unstract is a no-code LLM platform designed to structure unstructured documents. It provides tools to launch APIs and ETL pipelines, enabling users to automate complex business processes involving documents. The platform features a Prompt Studio for efficient prompt engineering and a Workflow Studio for building automated workflows with human-in-the-loop capabilities.",
        "key_features": [
            "No-code LLM platform",
            "API deployment for unstructured data",
            "ETL Pipelines for unstructured data",
            "Prompt Studio for prompt engineering",
            "Workflow Studio for automation with human-in-the-loop"
        ],
        "primary_use_case": "Structuring unstructured documents using LLMs and ETL pipelines to launch APIs and automate business processes.",
        "open_issues": 19,
        "cover_image_prompt": "A skilled architect overseeing the construction of a magnificent data refinery. Unstructured documents, represented as raw ore, are fed into the refinery's input. Inside, LLMs and ETL pipelines, depicted as intricate machinery, extract valuable insights and structure the data into gleaming gems. The refined data flows out as structured APIs and organized data streams. UI elements showing the Unstract platform are subtly integrated into the refinery's control panels. The scene is set in a futuristic industrial landscape with bright, optimistic lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 901680517,
        "name": "CAG",
        "description": "Cache-Augmented Generation: A Simple, Efficient Alternative to RAG",
        "url": "https://github.com/hhhuang/CAG",
        "language": "Python",
        "stars": 1103,
        "forks": 161,
        "created_at": "2024-12-11T05:43:57Z",
        "updated_at": "2025-03-18T08:40:43Z",
        "topics": [
            "cag",
            "llm",
            "rag"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-02-16T22:18:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/05d33b49cd1e8265d84bcdad1098b2f4c035f7796eae739867bee58b16c46e50/hhhuang/CAG"
        ],
        "homepage": "",
        "readme_summary": "The CAG repository provides an alternative to RAG by preloading all relevant resources into the LLM's context and caching runtime parameters, eliminating real-time retrieval and reducing latency. It is suitable for scenarios where the knowledge base fits within the model's context window, offering a simplified design and improved reliability compared to traditional RAG.",
        "key_features": [
            "Eliminates real-time retrieval for faster inference",
            "Minimizes retrieval errors while maintaining context relevance",
            "Streamlined design compared to RAG",
            "Preloads relevant resources into the model's context",
            "Caches runtime parameters"
        ],
        "primary_use_case": "Accelerating language model inference by preloading knowledge into the context and caching runtime parameters, offering a faster and simpler alternative to Retrieval-Augmented Generation (RAG) for tasks where the knowledge base fits within the model's context window.",
        "open_issues": 7,
        "cover_image_prompt": "Imagine a librarian in a vast, futuristic library. The librarian, representing Cache-Augmented Generation (CAG), stands before two towering stacks of books. One stack, labeled \"RAG,\" is disorganized and requires constant searching with a magnifying glass. The other stack, labeled \"CAG,\" is neatly organized with glowing labels, allowing the librarian to quickly retrieve information. A small screen displays the repository name, 'CAG,' subtly integrated into the library's architecture. The scene is bathed in soft, digital light, creating a sense of efficiency and order. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 388874900,
        "name": "punktf",
        "description": "⚡ A cross-platform multi-target dotfiles manager",
        "url": "https://github.com/Shemnei/punktf",
        "language": "Rust",
        "stars": 279,
        "forks": 8,
        "created_at": "2021-07-23T17:18:38Z",
        "updated_at": "2025-03-18T02:09:48Z",
        "topics": [
            "archlinux",
            "cli",
            "dotfile",
            "dotfiles",
            "dotfiles-manager",
            "hacktoberfest",
            "linux",
            "rust"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2024-10-22T22:29:22Z",
        "media_urls": [
            "https://opengraph.githubassets.com/21b5443b99d561fbf12542b03d77e1ed11d44f68615177b90e304e2663207371/Shemnei/punktf"
        ],
        "homepage": "https://shemnei.github.io/punktf/",
        "readme_summary": "The `punktf` repository provides a cross-platform dotfiles manager that allows users to maintain consistent configurations across different operating systems and environments. It supports conditional compilation, pre- and post-hooks for customization, and multiple profiles for managing target-specific settings, simplifying dotfiles management for diverse setups.",
        "key_features": [
            "Cross-platform dotfiles management",
            "Conditional compilation using handlebar-like instructions",
            "Pre- and post-hooks for customization",
            "Multiple profiles for different targets"
        ],
        "primary_use_case": "Managing dotfiles across multiple machines and operating systems with different configurations.",
        "open_issues": 7,
        "cover_image_prompt": "A skilled tailor meticulously fitting a suit onto a diverse group of mannequins, each representing a different operating system (Windows, Linux, macOS). The tailor uses a magical measuring tape that glows with digital code, ensuring a perfect fit for each platform. Small screens display configuration files and system settings, subtly connecting the tailoring process to software. The scene is set in a bright, modern atelier with a clean, focused composition. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 832342301,
        "name": "scooter",
        "description": "Interactive find and replace in the terminal",
        "url": "https://github.com/thomasschafer/scooter",
        "language": "Rust",
        "stars": 593,
        "forks": 11,
        "created_at": "2024-07-22T20:36:05Z",
        "updated_at": "2025-03-18T08:23:23Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-03-18T08:23:19Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a602907bc3c1a50eaedc3d66be951686c6c1b4cacef5b2febc6bbe51d01ca8fa/thomasschafer/scooter"
        ],
        "homepage": "",
        "readme_summary": "Scooter is a terminal UI application for interactively finding and replacing text within files. It supports both fixed string and regular expression searches, allows for capture groups in replacements, and respects `.gitignore` and `.ignore` files. It also provides features for opening files in an editor at the relevant line and for including/excluding files based on glob patterns.",
        "key_features": [
            "Interactive find and replace in the terminal",
            "Supports fixed string and regular expression search",
            "Respects .gitignore and .ignore files",
            "Capture groups in regex replacements",
            "Opens selected file at relevant line in editor (defined by EDITOR env variable)",
            "Glob patterns for including/excluding files"
        ],
        "primary_use_case": "Interactive find and replace of text within files in a terminal environment.",
        "open_issues": 6,
        "cover_image_prompt": "A meticulous tailor in a brightly lit workshop, carefully altering a garment on a mannequin. The tailor uses a magnifying glass to examine the fabric, representing the search function, and precisely adjusts seams with glowing thread, symbolizing the interactive replacement. UI elements float around the scene, showing search and replace fields. The repository name, \"scooter\", is subtly stitched into the fabric. The scene is in a 3D isometric illustration style with clean lines and vibrant colors, conveying precision and control."
    },
    {
        "id": 479657569,
        "name": "linkwarden",
        "description": "⚡️⚡️⚡️Self-hosted collaborative bookmark manager to collect, organize, and preserve webpages, articles, and documents.",
        "url": "https://github.com/linkwarden/linkwarden",
        "language": "TypeScript",
        "stars": 10753,
        "forks": 404,
        "created_at": "2022-04-09T07:53:01Z",
        "updated_at": "2025-03-18T08:39:15Z",
        "topics": [
            "bookmark-manager",
            "collaboration",
            "nextjs",
            "self-hosted",
            "typescript"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-01-19T15:51:50Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/479657569/9051af22-c443-4f52-826a-2a4dcf98839b"
        ],
        "homepage": "https://linkwarden.app",
        "readme_summary": "Linkwarden is a self-hosted collaborative bookmark manager designed to collect, organize, and preserve webpages. It automatically captures screenshots and PDFs of saved links, ensuring accessibility even if the original content disappears. The platform supports collaboration, allowing users to share links, organize them into collections, and customize member permissions.",
        "key_features": [
            "Auto capture screenshot, PDF, single html file, and readable view of webpages",
            "Wayback Machine integration",
            "Local AI Tagging",
            "Collection organization with tags",
            "Collaboration features",
            "Sharing links publicly",
            "Full text search",
            "Dark/Light mode support",
            "Browser extension",
            "Bookmark import/export",
            "SSO integration",
            "PWA installable",
            "API keys",
            "Image and PDF Uploads"
        ],
        "primary_use_case": "Collecting, organizing, and preserving webpages, articles, and documents in a collaborative, self-hosted environment.",
        "open_issues": 286,
        "cover_image_prompt": "Imagine a diligent librarian meticulously preserving digital books within a glowing, futuristic archive. The librarian carefully places webpages, represented as shimmering books, onto shelves that automatically capture screenshots and create PDF versions. Digital particles swirl around the archive, subtly displaying code snippets and data visualizations related to link preservation. A large screen in the background shows a user-friendly interface for organizing and sharing the archived links. The scene is bathed in soft, inviting light, creating a sense of order and accessibility. The image should be in a 3D isometric illustration style with clean lines and vibrant colors, emphasizing the importance of preserving digital knowledge."
    },
    {
        "id": 226883777,
        "name": "Lemuroid",
        "description": "All in one emulator on Android!",
        "url": "https://github.com/Swordfish90/Lemuroid",
        "language": "Kotlin",
        "stars": 2949,
        "forks": 187,
        "created_at": "2019-12-09T13:55:34Z",
        "updated_at": "2025-03-18T04:52:50Z",
        "topics": [
            "android",
            "android-app",
            "emulator",
            "game-boy",
            "genesis",
            "hacktoberfest",
            "kotlin",
            "kotlin-android",
            "libretro",
            "libretro-frontend",
            "n64",
            "nes",
            "nintendo",
            "nintendo-ds",
            "playstation",
            "psp",
            "sega",
            "sega-master-system",
            "snes"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-01-27T16:43:11Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d7ed6c150cf29e0b214181ae2ade70eb4e996f41e2eeac692ebfb64cabd65b3e/Swordfish90/Lemuroid"
        ],
        "homepage": "",
        "readme_summary": "Lemuroid is an open-source Android emulator based on Libretro, designed for ease of use and good Android integration. It supports a wide range of classic gaming systems, from Atari to PlayStation Portable, and offers features like automatic save states, ROM scanning, optimized touch controls, and gamepad support, providing a comprehensive retro gaming experience on Android devices.",
        "key_features": [
            "Android TV support",
            "Automatic save and restore game states",
            "ROMs scanning and indexing",
            "Optimized touch controls",
            "Quick save/load",
            "Support for Zipped ROMs",
            "Display simulation (LCD/CRT)",
            "Gamepad support",
            "Local multiplayer",
            "Tilt input",
            "Customizable touch controls",
            "Cloud save sync",
            "HD mode"
        ],
        "primary_use_case": "All-in-one emulator for playing retro games on Android devices.",
        "open_issues": 473,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously assembling intricate gears representing various game consoles (NES, SNES, Game Boy, etc.) into a single, elegant Android device. The device glows with a soft, inviting light, displaying snippets of classic game screens. Digital particles flow from the gears, forming a seamless connection within the Android device. The clockmaker's workbench is adorned with subtle UI elements and code snippets related to emulation. The scene is set in a cozy, well-lit workshop with a vintage aesthetic. The image should be in a 3D isometric illustration style with rich details and warm colors, evoking nostalgia and technological harmony."
    }
]