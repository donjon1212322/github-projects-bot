[
    {
        "id": 979651004,
        "name": "coinvert",
        "description": "A powerful, modern currency converter with real-time rates and a focus on privacy.",
        "url": "https://github.com/Rabbit-Town-Software/coinvert",
        "language": "Kotlin",
        "stars": 5,
        "forks": 0,
        "created_at": "2025-05-07T21:14:24Z",
        "updated_at": "2025-06-13T05:41:00Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-06-04T14:18:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9c1b7f0e480ccd3281715c95fb1fe1bd5ecd5af026bc3648c22ab82b86deb848/Rabbit-Town-Software/coinvert"
        ],
        "homepage": "https://rabbittownsoftware.com",
        "readme_summary": "CoinVert is a currency converter that supports over 200 currencies, including cryptocurrencies, providing real-time exchange rate updates. It emphasizes user privacy by avoiding ads, tracking, and data collection, while also offering offline functionality with cached rates. The application aims to provide a modern and intuitive user interface for seamless currency conversions.",
        "key_features": [
            "Real-time exchange rate updates",
            "Support for 200+ global currencies and cryptocurrencies",
            "Offline mode with cached rates",
            "Privacy-focused: no ads, no tracking",
            "Modern, intuitive UI"
        ],
        "primary_use_case": "Currency conversion with real-time rates and a focus on user privacy.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled artisan meticulously crafting coins from raw data streams, each coin representing a different global currency. The artisan uses a magnifying glass to ensure each coin is perfectly formed and accurately reflects the real-time exchange rate displayed on a nearby holographic screen. The workshop is clean and modern, with subtle digital elements like glowing code snippets embedded in the workbench. The scene is bathed in soft, diffused light, creating a sense of precision and trustworthiness. The image should be in a 3D isometric illustration style with vibrant colors and rich details, emphasizing the conversion process and the accuracy of the currency values."
    },
    {
        "id": 424069513,
        "name": "OSX-PROXMOX",
        "description": "Voil√†, install macOS on ANY Computer! This is really and magic easiest way! PVE 7.XX ~ 8.XX Support and macOS High Sierra ~ macOS Sequoia Support.",
        "url": "https://github.com/luchina-gabriel/OSX-PROXMOX",
        "language": "Shell",
        "stars": 4624,
        "forks": 413,
        "created_at": "2021-11-03T02:42:26Z",
        "updated_at": "2025-06-13T09:50:37Z",
        "topics": [
            "apple",
            "hackintosh",
            "macos",
            "opencore",
            "proxmox",
            "virtualization"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-05-02T13:20:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/750497ab4a9276f3a37e05264057c8992548fae6aeffaacc868843189f317f2f/luchina-gabriel/OSX-PROXMOX"
        ],
        "homepage": "https://osx-proxmox.com",
        "readme_summary": "The OSX-PROXMOX repository provides a streamlined method for installing macOS on Proxmox VE, supporting both AMD and Intel hardware. It simplifies the virtualization process, enabling users to run various macOS versions from High Sierra to Sequoia on Proxmox. The repository also offers cloud support and integrates OpenCore for enhanced compatibility and security.",
        "key_features": [
            "macOS installation on Proxmox VE",
            "Supports AMD and Intel hardware",
            "Supports multiple macOS versions (High Sierra to Sequoia)",
            "Supports Proxmox VE versions 7.x to 8.4.x",
            "Cloud support (Vultr)",
            "OpenCore integration"
        ],
        "primary_use_case": "Installing and running macOS as a virtual machine on Proxmox VE for development, testing, and educational purposes.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled mechanic in a high-tech garage, expertly tuning a classic car (representing macOS) with a sophisticated diagnostic tool (representing Proxmox). The car is connected to a virtual reality rig, displaying various macOS versions running smoothly. The mechanic is surrounded by floating holographic displays showing code snippets and system configurations. Subtle digital particles flow around the car, enhancing its performance. The scene is brightly lit with a clean, organized aesthetic. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, emphasizing the ease and power of running macOS on Proxmox."
    },
    {
        "id": 977113202,
        "name": "oci2git",
        "description": "Introspecting Docker images as easy as using Git",
        "url": "https://github.com/Virviil/oci2git",
        "language": "Rust",
        "stars": 332,
        "forks": 8,
        "created_at": "2025-05-03T13:03:21Z",
        "updated_at": "2025-06-13T08:55:40Z",
        "topics": [],
        "quality_score": 0.8499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-09T20:56:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/efae848a66e3214a24bd27b35822470f65a358c3d7c12f933deb0af9ef449002/Virviil/oci2git"
        ],
        "homepage": "",
        "readme_summary": "OCI2Git converts container images into Git repositories, representing each layer as a commit. This enables users to leverage Git's powerful features like diffing and blame to analyze image layers, track file origins, and understand the evolution of files within the container.",
        "key_features": [
            "Analyze Docker images and extract layer information",
            "Create a Git repository where each image layer is represented as a commit",
            "Support for empty layers as empty commits",
            "Complete metadata extraction to Markdown format",
            "Extensible architecture for supporting different container engines"
        ],
        "primary_use_case": "Layer diffing and origin tracking within container images using Git's capabilities.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine an archaeologist carefully brushing away dirt from a series of ancient clay tablets, each tablet representing a layer of a container image. As the archaeologist brushes, the inscriptions on the tablets transform into Git commits, revealing the history and structure of the image. A holographic display nearby shows a simplified Git graph, subtly incorporating the 'OCI2Git' logo. The scene is set in a brightly lit, modern museum exhibit with a clean, focused composition. The image should be in a 3D isometric illustration style with clear details and a warm color scheme."
    },
    {
        "id": 57418962,
        "name": "community",
        "description": "Modern Confluence alternative designed for internal & external docs, built with Go + EmberJS",
        "url": "https://github.com/documize/community",
        "language": "JavaScript",
        "stars": 2244,
        "forks": 222,
        "created_at": "2016-04-29T23:35:07Z",
        "updated_at": "2025-06-13T06:53:11Z",
        "topics": [
            "collaboration",
            "confluence",
            "dashboards",
            "docs",
            "document-conversion",
            "document-management",
            "documentation",
            "documentation-tool",
            "emberjs",
            "enterprise",
            "go",
            "keycloak",
            "knowledge",
            "knowledge-base",
            "knowledge-management",
            "knowledgebase",
            "reporting",
            "selfhosted",
            "wiki"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2024-12-31T18:09:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/35322469188385c768b145f2ba2e493f629350f3cda9a51ea4aad51cde053b91/documize/community"
        ],
        "homepage": "https://www.documize.com/community",
        "readme_summary": "Documize Community is an open-source, self-hosted knowledge management solution designed for both technical and non-technical users. It aims to unify customer-facing and internal documentation, offering organization through labels, spaces, and categories. It supports multiple databases and authentication methods, along with multi-language support.",
        "key_features": [
            "Open source knowledge management solution",
            "Self-hosted",
            "Enterprise-grade",
            "Built for technical and non-technical users",
            "Unifies customer-facing and internal documentation",
            "Organization through labels, spaces, and categories",
            "Supports multiple databases (PostgreSQL, MSSQL, MySQL)",
            "Authentication via LDAP, Active Directory, Keycloak, CAS",
            "Multi-language support"
        ],
        "primary_use_case": "Knowledge management and documentation",
        "open_issues": 0,
        "cover_image_prompt": "A skilled librarian meticulously organizing a chaotic collection of documents into a structured knowledge base. The librarian uses a magical lens that transforms scattered papers into neatly categorized digital files, displayed on glowing screens integrated into the shelves. The library is filled with diverse users accessing information on tablets and laptops. Subtle UI elements and data visualizations float around the scene, connecting the physical organization to the digital realm. The scene is set in a bright, modern library with warm lighting. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 989258782,
        "name": "Sentry",
        "description": "A powerful macOS security monitoring application that detects unauthorized access attempts and records video evidence for you.",
        "url": "https://github.com/Lakr233/Sentry",
        "language": "Swift",
        "stars": 265,
        "forks": 19,
        "created_at": "2025-05-23T18:58:19Z",
        "updated_at": "2025-06-13T07:51:46Z",
        "topics": [],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-05-26T05:39:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/237489688a1c83269b644cd640f7fc586e953150b3c72014c774d0896cfc98e7/Lakr233/Sentry"
        ],
        "homepage": "",
        "readme_summary": "Sentry is a macOS application designed to monitor your device for unauthorized access. It tracks lid status, network connectivity, and power connection, automatically recording video and providing alerts via sound and push notifications when suspicious activity is detected. This allows users to protect their devices and gather evidence in case of unauthorized access.",
        "key_features": [
            "Comprehensive Monitoring (lid status, network connectivity, power connection)",
            "Automatic Recording (video clips)",
            "Multi-Alert System (sound alarms, push notifications via Bark)",
            "Real-time Detection (instant monitoring of device state changes)"
        ],
        "primary_use_case": "macOS security monitoring to detect unauthorized access attempts and record video evidence.",
        "open_issues": 0,
        "cover_image_prompt": "A vigilant security guard stands watch outside a cozy coffee shop, holding a magnifying glass up to a laptop left unattended on a table. The laptop emits a faint red glow, indicating a potential security breach. The guard's magnifying glass reveals tiny digital eyes peering out from the laptop's screen. A small UI element hovers near the laptop, displaying the Sentry logo. The scene is bathed in warm, inviting light, contrasting with the underlying security threat. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and a focus on clarity."
    },
    {
        "id": 599320067,
        "name": "langflow",
        "description": "Langflow is a powerful tool for building and deploying AI-powered agents and workflows.",
        "url": "https://github.com/langflow-ai/langflow",
        "language": "Python",
        "stars": 72913,
        "forks": 6807,
        "created_at": "2023-02-08T22:28:03Z",
        "updated_at": "2025-06-13T10:11:10Z",
        "topics": [
            "agents",
            "chatgpt",
            "generative-ai",
            "large-language-models",
            "multiagent",
            "react-flow"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-13T01:56:57Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/599320067/a9637c6a-7347-4a7a-8bf3-7bbdae6974b6"
        ],
        "homepage": "http://www.langflow.org",
        "readme_summary": "Langflow is a tool for visually building and deploying AI agents and workflows. It offers a visual interface, code access for customization, and the ability to deploy agents as API endpoints. Langflow supports major LLMs and vector databases, providing a comprehensive platform for AI development.",
        "key_features": [
            "Visual Builder for rapid iteration",
            "Code access for Python customization",
            "Playground for step-by-step flow testing",
            "Multi-agent orchestration",
            "API deployment or JSON export",
            "Observability integrations",
            "Enterprise-ready security and scalability"
        ],
        "primary_use_case": "Building and deploying AI-powered agents and workflows.",
        "open_issues": 418,
        "cover_image_prompt": "Imagine an architect at a digital blueprint table, effortlessly assembling glowing components representing AI tools (LLMs, vector databases, etc.) into a flowing, interconnected structure. Each component snaps into place with a satisfying glow, forming a complex yet elegant AI workflow. A holographic screen displays the live API endpoint generated from the workflow, ready for deployment. The scene is set in a bright, modern design studio with a clean, minimalist aesthetic. Subtle code snippets and data visualizations float in the background, adding a touch of technical detail. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    }
]