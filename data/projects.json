[
    {
        "id": 1059035975,
        "name": "commonforms",
        "description": "CommonForms — open models to auto-detect PDF form fields",
        "url": "https://github.com/jbarrow/commonforms",
        "language": "Python",
        "stars": 10,
        "forks": 0,
        "created_at": "2025-09-17T22:50:29Z",
        "updated_at": "2025-10-03T09:37:46Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-10-02T00:03:33Z",
        "media_urls": [
            "https://opengraph.githubassets.com/4dd952fbbeaf7caf653ea600d9d7a62bafa6e81a0a38c0ac268acd942c797ea9/jbarrow/commonforms"
        ],
        "homepage": "",
        "readme_summary": "The CommonForms repository provides a Python package with a CLI and API to automatically convert PDFs into fillable forms by detecting form fields. It includes pre-trained FFDNet models and dataset preprocessing code for the CommonForms dataset.",
        "key_features": [
            "PDF to fillable form conversion",
            "CLI and API usage",
            "FFDNet model integration",
            "Dataset preprocessing code"
        ],
        "primary_use_case": "Automating the conversion of static PDFs into interactive, fillable forms.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled cartographer meticulously transforming ancient, unreadable maps into modern, interactive forms on a glowing digital table. The cartographer uses specialized tools that highlight key areas on the old maps, converting them into fillable fields on the new forms. Small screens display snippets of Python code and the 'CommonForms' logo. The scene is set in a bright, futuristic workshop with a focus on precision and clarity. Digital particles float around the table, representing the flow of data. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 1037019540,
        "name": "JAMS",
        "description": "JAMS Auto-Mute Sometimes",
        "url": "https://github.com/nevimmu/JAMS",
        "language": "Python",
        "stars": 18,
        "forks": 0,
        "created_at": "2025-08-13T00:11:58Z",
        "updated_at": "2025-10-03T07:44:09Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-23T14:57:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/39c1d9192647b6471fe38cdcf87c1e3059c4b1c7b0b9de695d7354bd2c2e3a79/nevimmu/JAMS"
        ],
        "homepage": "",
        "readme_summary": "The JAMS repository provides a tool that automatically pauses music playback when a user is watching a video in their browser. It aims to prevent audio overlap and provide a seamless user experience.",
        "key_features": [
            "Automatic music pausing during video playback",
            "Command-line interface for setup and execution"
        ],
        "primary_use_case": "Automatically pausing music when a video starts playing in the browser.",
        "open_issues": 0,
        "cover_image_prompt": "A conductor holding a baton, silencing an orchestra as a movie screen illuminates behind them. The screen displays a vibrant video scene. The orchestra represents background music, and the conductor's baton symbolizes JAMS muting the music. Small UI elements float around the conductor, showing volume controls and browser windows. The scene is set in a grand theater with dramatic lighting. The composition is focused on the conductor and the screen, with a clear color scheme of blues and golds. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 719980575,
        "name": "awesome-low-level-design",
        "description": "Learn Low Level Design (LLD) and prepare for interviews using free resources.",
        "url": "https://github.com/ashishps1/awesome-low-level-design",
        "language": "Java",
        "stars": 18473,
        "forks": 4559,
        "created_at": "2023-11-17T10:15:12Z",
        "updated_at": "2025-10-03T09:56:05Z",
        "topics": [
            "awesome",
            "design-patterns",
            "interview",
            "interview-practice",
            "interview-questions",
            "lld",
            "low-level-design",
            "machine-coding",
            "object-oriented-programming",
            "oops",
            "solid-principles",
            "uml"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-09-09T18:17:43Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3cad9bf27f23ee47954931481bf952b51f3a736fe31dc9dee2607de1ea1ed6e6/ashishps1/awesome-low-level-design"
        ],
        "homepage": "https://blog.algomaster.io",
        "readme_summary": "This repository provides resources for learning Low Level Design (LLD) and Object-Oriented Design (OOD). It aims to help users prepare for technical interviews by offering materials on fundamental concepts, design patterns, and UML diagrams, primarily through links to external articles and resources.",
        "key_features": [
            "Fundamental OOP Concepts",
            "DRY, YAGNI, and KISS Principles",
            "SOLID Principles",
            "Creational Design Patterns (Singleton, Factory Method, Abstract Factory, Builder, Prototype)",
            "Structural Design Patterns (Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy)",
            "Behavioral Design Patterns (Iterator, Observer, Strategy, Command, State, Template Method, Visitor, Mediator, Memento, Chain of Responsibility)",
            "UML Diagrams (Class, Use Case, Sequence, Activity)"
        ],
        "primary_use_case": "Learning Low Level Design and preparing for technical interviews.",
        "open_issues": 32,
        "cover_image_prompt": "Imagine a grand architect at their drafting table, meticulously crafting blueprints for a towering skyscraper. Each blueprint represents a different design pattern: creational, structural, and behavioral, symbolized by distinct architectural styles. The architect consults a large book of UML diagrams, using it as a guide. Subtle UI elements float around the architect, displaying code snippets and class structures. The scene is set in a sunlit studio, creating a sense of focused creativity. The repository name is subtly etched on the architect's drafting tools. The image should be in a detailed 3D isometric illustration style with warm, inviting colors."
    },
    {
        "id": 918974884,
        "name": "tinyauth",
        "description": "The simplest way to protect your apps with a login screen.",
        "url": "https://github.com/steveiliop56/tinyauth",
        "language": "Go",
        "stars": 5551,
        "forks": 168,
        "created_at": "2025-01-19T11:40:09Z",
        "updated_at": "2025-10-03T09:43:28Z",
        "topics": [
            "2fa",
            "authentication",
            "caddy",
            "golang",
            "middleware",
            "nginx",
            "selfhosted",
            "sso",
            "totp",
            "traefik-middleware",
            "typescipt"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-09-25T19:35:44Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/918974884/24287e83-5d39-4ee5-baba-b4ff5c8b5ba7"
        ],
        "homepage": "https://tinyauth.app",
        "readme_summary": "Tinyauth is a Go-based authentication middleware designed to easily add a login screen or OAuth to Docker applications. It supports popular reverse proxies like Traefik, Nginx, and Caddy, providing a simple way to secure applications with features like 2FA and SSO.",
        "key_features": [
            "Authentication middleware",
            "Login screen",
            "OAuth support (Google, Github, any provider)",
            "Support for Traefik, Nginx, and Caddy",
            "2FA (Two-Factor Authentication)",
            "SSO (Single Sign-On)",
            "Self-hosted"
        ],
        "primary_use_case": "Securing Docker applications with a simple login screen or OAuth authentication.",
        "open_issues": 4,
        "cover_image_prompt": "A gatekeeper stands before a digital fortress, carefully examining each user avatar before granting access. The gatekeeper holds a glowing key that unlocks the login screen, allowing authorized users to pass through. Rejected avatars are gently redirected. Small screens display authentication logs and security protocols. The scene is set in a futuristic cityscape with a clean, minimalist design. Subtle digital particles flow around the gate, representing data streams. The composition is balanced and focused, with a clear hierarchy of elements. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    },
    {
        "id": 82530909,
        "name": "monolith",
        "description": "⬛️ CLI tool and library for saving complete web pages as a single HTML file",
        "url": "https://github.com/Y2Z/monolith",
        "language": "Rust",
        "stars": 14273,
        "forks": 426,
        "created_at": "2017-02-20T07:47:35Z",
        "updated_at": "2025-10-03T08:18:30Z",
        "topics": [
            "come-and-take-it",
            "e-hoarding",
            "its-mine",
            "make-the-internet-great-again",
            "no-more-404",
            "procrastination",
            "save-the-internet",
            "tab-rehab"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-06-15T15:12:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2ace6e5bbdbe9a8da3d065c523ca2046625771b550e4111faa5aefce694847f3/Y2Z/monolith"
        ],
        "homepage": "https://crates.io/crates/monolith",
        "readme_summary": "Monolith is a CLI tool and library that saves complete web pages as single HTML files. It embeds all assets (CSS, images, JavaScript) as data URLs, creating a self-contained HTML5 document that can be stored and shared easily, even without an internet connection.",
        "key_features": [
            "Saves complete web pages as single HTML files",
            "Embeds CSS, images, and JavaScript assets",
            "Creates self-contained HTML5 documents",
            "Works offline",
            "Multiple installation methods (Cargo, Homebrew, Chocolatey, Scoop, Winget, MacPorts, Snapcraft, Guix, NixPkgs, Flox, Pacman, aports, XBPS, FreeBSD packages, FreeBSD ports, pkgsrc, containers, source)"
        ],
        "primary_use_case": "Saving web pages for offline access and archival purposes.",
        "open_issues": 58,
        "cover_image_prompt": "Imagine a librarian carefully placing entire websites, represented as glowing books, onto shelves in a vast digital library. Each book radiates light, showcasing embedded images and styles. The librarian uses a special tool that compresses entire websites into single, easily manageable volumes. Subtle UI elements float nearby, displaying code snippets and file sizes. The library is bathed in warm, inviting light, with the repository name subtly etched onto a bookshelf. The composition is clean and focused, with a clear visual hierarchy. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 22486533,
        "name": "shattered-pixel-dungeon",
        "description": "Shattered Pixel Dungeon is an open-source traditional roguelike dungeon crawler with randomized levels and enemies, and hundreds of items to collect and use. It's based on the source code of Pixel Dungeon, by Watabou.",
        "url": "https://github.com/00-Evan/shattered-pixel-dungeon",
        "language": "Java",
        "stars": 5538,
        "forks": 1305,
        "created_at": "2014-07-31T21:56:31Z",
        "updated_at": "2025-10-03T07:50:58Z",
        "topics": [
            "android",
            "game",
            "game-development",
            "ios",
            "java",
            "libgdx"
        ],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-09-29T17:31:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7207e0deff8627915a0bf63152d17c43c3cc37773da4f331693cf6db8833e493/00-Evan/shattered-pixel-dungeon"
        ],
        "homepage": "https://shatteredpixel.com/shatteredpd/",
        "readme_summary": "Shattered Pixel Dungeon is an open-source roguelike game based on the source code of Pixel Dungeon. It features randomized levels, enemies, and items, and is available on Android, iOS, and Desktop platforms. The repository provides the game's source code for others to learn from and potentially adapt for their own projects.",
        "key_features": [
            "Open-source roguelike game",
            "Randomized levels and enemies",
            "Hundreds of items to collect and use",
            "Cross-platform support (Android, iOS, Desktop)",
            "Based on Pixel Dungeon"
        ],
        "primary_use_case": "Providing the source code of Shattered Pixel Dungeon for educational purposes and for others to create their own versions of the game.",
        "open_issues": 1,
        "cover_image_prompt": "A lone adventurer meticulously crafting a unique dungeon level from scattered tiles, each representing code snippets and game assets. The adventurer uses a magical hammer that transforms raw code into playable game elements. A blueprint of the dungeon is subtly visible in the background, overlaid with lines of Java code. The scene is set in a whimsical workshop filled with glowing crystals representing different game features. Small UI elements display the game running on various devices. The composition is focused and inviting, with a warm color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]