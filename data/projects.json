[
    {
        "id": 1071508564,
        "name": "Human3R",
        "description": "An unified model for 4D human-scene reconstruction",
        "url": "https://github.com/fanegg/Human3R",
        "language": "Python",
        "stars": 294,
        "forks": 16,
        "created_at": "2025-10-07T12:52:33Z",
        "updated_at": "2025-10-13T10:12:55Z",
        "topics": [
            "3d-reconstruction",
            "4d-reconstruction",
            "human",
            "human-pose-estimation",
            "post-training"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-10-08T06:53:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1fc1481a815c373c0b1337455fd8e0c2bba2dc7e269fc224510b655310954e6a/fanegg/Human3R"
        ],
        "homepage": "https://fanegg.github.io/Human3R/",
        "readme_summary": "The Human3R repository provides a unified model for 4D human-scene reconstruction. It allows for inference in a single stage using one model and can be trained quickly using a single GPU. The model aims to reconstruct humans and their surrounding environment in 4D (3D space over time).",
        "key_features": [
            "Unified model for 4D human-scene reconstruction",
            "Single-stage inference",
            "Fast training (one day, one GPU)",
            "Includes scripts for downloading models and checkpoints",
            "Provides a demo script for running inference",
            "Includes instructions for evaluation and training"
        ],
        "primary_use_case": "4D human-scene reconstruction from video or image sequences.",
        "open_issues": 5,
        "cover_image_prompt": "Imagine a skilled sculptor meticulously crafting a life-sized clay figure that seamlessly blends into a dynamic, evolving landscape. The sculptor uses advanced tools that project glowing digital lines onto the figure, capturing its movements and interactions with the environment in real-time. Small screens display the reconstructed 4D model, showcasing the figure's pose and the surrounding scene from various angles. The repository name, 'Human3R,' is subtly etched into the sculptor's workbench. The scene is bathed in soft, ambient light, creating a sense of artistry and technological precision. The image should be in a detailed 3D isometric illustration style with vibrant colors."
    },
    {
        "id": 57313402,
        "name": "udocker",
        "description": "A basic user tool to execute simple docker containers in batch or interactive systems without root privileges.",
        "url": "https://github.com/indigo-dc/udocker",
        "language": "Python",
        "stars": 1595,
        "forks": 153,
        "created_at": "2016-04-28T15:40:49Z",
        "updated_at": "2025-10-13T07:44:48Z",
        "topics": [
            "batch",
            "chroot",
            "containers",
            "deep-hybrid-datacloud",
            "docker",
            "docker-containers",
            "emulation",
            "eosc-hub",
            "fakechroot",
            "grid",
            "hpc",
            "indigo",
            "proot",
            "root-privileges",
            "runc",
            "user"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2024-08-28T14:01:10Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/57313402/1e941100-cefd-11eb-8401-f7c697943eba"
        ],
        "homepage": "https://indigo-dc.github.io/udocker/",
        "readme_summary": "udocker is a Python-based tool that allows users to execute Docker containers in user space without requiring root privileges. It's designed for Linux systems where Docker is unavailable, such as batch systems and interactive clusters, enabling non-privileged users to pull and run containers.",
        "key_features": [
            "Execution of Docker containers without root privileges",
            "Support for multiple execution methods (PRoot, Fakechroot, runc, crun, Singularity)",
            "User-level installation and deployment",
            "Docker-like command-line interface",
            "Support for a subset of Docker commands (search, pull, import, export, load, save, login, logout, create, run)",
            "Loading of Docker and OCI containers",
            "Support for NVIDIA GPGPU applications"
        ],
        "primary_use_case": "Executing Docker containers in environments where root privileges are not available or Docker is not installed.",
        "open_issues": 28,
        "cover_image_prompt": "A skilled craftsman meticulously assembling miniature houses inside clear, protective bubbles. Each house represents a Docker container, and the craftsman uses specialized tools to carefully construct them without disturbing the surrounding environment. The bubbles float gently above a Linux landscape. Subtle UI elements display container configurations and resource allocations. The repository name, 'udocker,' is subtly etched onto the craftsman's workbench. The scene is set in a bright, airy workshop with natural lighting. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 47023494,
        "name": "qdirstat",
        "description": "QDirStat - Qt-based directory statistics (KDirStat without any KDE - from the original KDirStat author)",
        "url": "https://github.com/shundhammer/qdirstat",
        "language": "C++",
        "stars": 2128,
        "forks": 137,
        "created_at": "2015-11-28T12:56:05Z",
        "updated_at": "2025-10-13T08:53:14Z",
        "topics": [
            "cleanup",
            "disk-space-analyzer",
            "gui",
            "linux",
            "qt",
            "treemap"
        ],
        "quality_score": 0.7500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-07-26T21:52:21Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/47023494/492cf880-57e6-11ea-8519-34aac78bc810"
        ],
        "homepage": null,
        "readme_summary": "QDirStat is a Qt-based graphical application for analyzing disk space usage on Linux, BSD, and other Unix-like systems, as well as macOS. It provides a tree view and treemap visualization of directories and files, allowing users to identify large files and directories for cleanup. It's a Qt-only port of the original KDirStat, without KDE dependencies.",
        "key_features": [
            "Tree view and treemap visualization of disk usage",
            "Multi-selection in tree and treemap",
            "User-defined cleanup actions",
            "Configurable file categories, treemap colors, exclude rules, and tree columns",
            "Package manager support (package view, unpackaged files view)",
            "Disk usage per file type",
            "File size histogram view",
            "File Age View",
            "Free, used and reserved disk size for each mounted filesystem"
        ],
        "primary_use_case": "Analyzing disk space usage and identifying large files and directories for cleanup on Linux, BSD, Unix-like systems, and macOS.",
        "open_issues": 1,
        "cover_image_prompt": "A meticulous cartographer standing before a vast, colorful landscape representing a computer's hard drive. The landscape is divided into regions (directories) and plots (files), with the size of each plot corresponding to the file size and color indicating file type. The cartographer uses a magnifying glass to examine specific areas, making notes on a digital tablet. Small UI elements displaying file sizes and directory structures float subtly in the air. The scene is set in a bright, airy office with a large window overlooking a cityscape. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 905697354,
        "name": "WhisperLiveKit",
        "description": "Real-time & local speech-to-text server.",
        "url": "https://github.com/QuentinFuxa/WhisperLiveKit",
        "language": "Python",
        "stars": 7788,
        "forks": 704,
        "created_at": "2024-12-19T10:49:09Z",
        "updated_at": "2025-10-13T09:52:22Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-10-06T17:59:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/fe7bd1cce47c0bafca5dfda72cafc6573d0f0562e474dd5f67b7f53e0248d2b3/QuentinFuxa/WhisperLiveKit"
        ],
        "homepage": "",
        "readme_summary": "WhisperLiveKit is a real-time, fully local speech-to-text server that transcribes audio directly to a browser. It leverages state-of-the-art research in simultaneous speech processing for low-latency transcription and speaker identification, offering a ready-to-use backend, server, and simple frontend.",
        "key_features": [
            "Real-time speech transcription",
            "Fully local processing",
            "Speaker identification",
            "Low-latency transcription using SimulStreaming and WhisperStreaming",
            "Translation to over 100 languages using NLLB",
            "Voice Activity Detection",
            "Support for multiple concurrent users"
        ],
        "primary_use_case": "Real-time speech-to-text transcription in a browser environment.",
        "open_issues": 76,
        "cover_image_prompt": "A skilled calligrapher meticulously transcribing spoken words into text in real-time. The calligrapher listens to a stream of audio flowing from a vintage microphone and writes the words onto a digital scroll that updates instantly. Subtle UI elements float around the calligrapher, showing waveforms and language options. The scene is set in a cozy, modern study filled with glowing screens displaying snippets of code related to speech processing. The repository name, 'WhisperLiveKit,' is subtly etched onto the calligrapher's pen. The composition is clean and focused with warm lighting and a blue and green color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 6899875,
        "name": "openproject",
        "description": "OpenProject is the leading open source project management software.",
        "url": "https://github.com/opf/openproject",
        "language": "Ruby",
        "stars": 12816,
        "forks": 2862,
        "created_at": "2012-11-28T09:59:11Z",
        "updated_at": "2025-10-13T09:57:02Z",
        "topics": [
            "angular",
            "bcf",
            "boards",
            "bug-tracker",
            "gantt",
            "gantt-chart",
            "ifc",
            "issue-tracker",
            "kanban",
            "openproject",
            "project-management",
            "project-planning",
            "roadmap",
            "ruby",
            "scrum",
            "timeline",
            "workflows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-13T09:56:47Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/6899875/8080e3ed-fedc-4a77-ba7c-d0cfc3025aca"
        ],
        "homepage": "https://www.openproject.org",
        "readme_summary": "OpenProject is a web-based, open-source project management software designed to help teams manage projects, tasks, and goals. It offers features for project planning, task management, agile development, time tracking, and bug tracking, with integrations like GitHub to enhance collaboration.",
        "key_features": [
            "Project planning and scheduling",
            "Product roadmap and release planning",
            "Task management and team collaboration",
            "Agile and Scrum",
            "Time tracking, cost reporting, and budgeting",
            "Bug tracking",
            "Wikis",
            "Forums",
            "Meeting agendas and meeting minutes"
        ],
        "primary_use_case": "Project management and team collaboration.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled architect meticulously overseeing the construction of a grand building, each brick representing a project task. The architect uses a glowing blueprint that visualizes timelines, resource allocation, and team responsibilities. Digital overlays on the blueprint show real-time progress and dependencies. The building site is filled with workers collaborating seamlessly, guided by the architect's plan. Small UI elements displaying project metrics float subtly around the scene. The composition is clean and focused, with a blue and orange color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 978358198,
        "name": "compozy",
        "description": "Next-level Agentic Orchestration Framework",
        "url": "https://github.com/compozy/compozy",
        "language": "Go",
        "stars": 315,
        "forks": 7,
        "created_at": "2025-05-05T21:32:01Z",
        "updated_at": "2025-10-13T07:08:04Z",
        "topics": [
            "agentic",
            "agentic-ai",
            "agents",
            "ai",
            "artificial-intelligence",
            "orchestration",
            "platform"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-10-12T01:14:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b6dafc3884581d099fe7ff4d9c4ad343a28c1dab381837468be11289d131ce43/compozy/compozy"
        ],
        "homepage": "https://compozy.com",
        "readme_summary": "Compozy is an agentic orchestration framework built in Go that simplifies the creation and management of multi-agent AI systems. It uses declarative YAML to define workflows and offers features like advanced task orchestration, multi-model support, and enterprise-ready capabilities for building scalable and reliable AI applications.",
        "key_features": [
            "Declarative Workflows",
            "Developer-Focused CLI with hot-reloading",
            "Advanced Task Orchestration (parallel, sequential, conditional)",
            "Extensible Tools (TypeScript/JavaScript)",
            "Multi-Model Support (OpenAI, Anthropic, Google, etc.)",
            "Enterprise-Ready (Temporal)",
            "High Performance (Go)"
        ],
        "primary_use_case": "Orchestrating multi-agent AI systems for production-ready automation.",
        "open_issues": 44,
        "cover_image_prompt": "An orchestra conductor stands on a stage, directing a group of AI agents represented as musical instruments. Each instrument plays a different task in a complex symphony of automation. The conductor uses a YAML sheet as their score, translating the declarative instructions into harmonious actions. Screens displaying real-time data and workflow visualizations subtly surround the stage. The repository name, 'Compozy,' is subtly displayed on the conductor's podium. The scene is bathed in warm, inviting light. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]