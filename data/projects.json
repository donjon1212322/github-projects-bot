[
    {
        "id": 987258416,
        "name": "terminal-bg",
        "description": null,
        "url": "https://github.com/DaarcyDev/terminal-bg",
        "language": "Python",
        "stars": 8,
        "forks": 0,
        "created_at": "2025-05-20T20:09:32Z",
        "updated_at": "2025-05-23T09:51:50Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-05-21T16:35:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/387ad079989700eecf97170a6533fde54cee7bf991d03dbe8540096c79416511/DaarcyDev/terminal-bg"
        ],
        "homepage": null,
        "readme_summary": "Terminal-bg is a Python script that allows users to set their terminal as a transparent, live desktop background. It uses GTK, VTE, and GtkLayerShell to display CLI programs as animated wallpapers. The application supports configurable appearance, automatic config creation, custom scripts, and multi-monitor setups.",
        "key_features": [
            "Transparent terminal background",
            "Configurable appearance (opacity, RGBA)",
            "Automatic config creation",
            "Custom script & monitor support",
            "Lightweight & responsive",
            "Multi-monitor friendly"
        ],
        "primary_use_case": "Turns your terminal into a transparent, live desktop background.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a chameleon seamlessly blending into a vibrant computer desktop, its skin displaying a live terminal interface filled with animated code. The chameleon rests on a sleek, modern desk surrounded by subtle UI elements and glowing digital particles that enhance the illusion of a dynamic, living wallpaper. The desktop background subtly displays the repository name, 'Terminal-bg'. The scene is bathed in soft, ambient light, creating a visually striking and intuitive representation of the software's functionality. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 766341786,
        "name": "puter",
        "description": "üåê The Internet OS! Free, Open-Source, and Self-Hostable.",
        "url": "https://github.com/HeyPuter/puter",
        "language": "JavaScript",
        "stars": 32345,
        "forks": 2394,
        "created_at": "2024-03-03T01:44:32Z",
        "updated_at": "2025-05-23T10:03:20Z",
        "topics": [
            "cloud",
            "cloud-os",
            "cloud-storage",
            "desktop",
            "desktop-environment",
            "dropbox",
            "good-first-issue",
            "gui",
            "javascript",
            "nas",
            "open-source",
            "operating-system",
            "os",
            "osjs",
            "puter",
            "remote-desktop",
            "storage",
            "web-desktop",
            "web-os",
            "webtop"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-22T19:42:43Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/766341786/ad2dfdf3-eb84-4407-8f7a-63fcda75e346"
        ],
        "homepage": "https://puter.com",
        "readme_summary": "Puter is an open-source internet operating system designed for personal cloud management, web application development, and remote desktop access. It serves as a self-hostable alternative to services like Dropbox and Google Drive, offering a platform for users to keep their files, apps, and games accessible from anywhere. The project also fosters a community for learning about web development and cloud computing.",
        "key_features": [
            "Privacy-first personal cloud",
            "Platform for building web apps and games",
            "Alternative to Dropbox/Google Drive",
            "Remote desktop environment",
            "Open-source learning community"
        ],
        "primary_use_case": "A free, open-source, and self-hostable internet operating system for managing files, apps, and games in a personal cloud.",
        "open_issues": 184,
        "cover_image_prompt": "Imagine a futuristic air traffic controller managing a bustling network of interconnected clouds, each representing a user's files, apps, and games. The controller, with a holographic interface, seamlessly directs data streams between these clouds, ensuring smooth access from any device represented by stylized icons hovering around the central control tower. Subtle code snippets float in the background, and the 'Puter' logo is subtly integrated into the control panel. The scene is bathed in soft, ethereal light, creating a sense of effortless organization and accessibility. The image should be in a 3D isometric illustration style with vibrant colors and clean, modern design."
    },
    {
        "id": 796284842,
        "name": "Sink",
        "description": "‚ö° A Simple / Speedy / Secure Link Shortener with Analytics, 100% run on Cloudflare.",
        "url": "https://github.com/ccbikai/Sink",
        "language": "Vue",
        "stars": 4544,
        "forks": 2708,
        "created_at": "2024-05-05T13:53:54Z",
        "updated_at": "2025-05-23T09:51:25Z",
        "topics": [
            "analytics",
            "bitly-alternative",
            "cloudflare",
            "hacktoberfest",
            "link-shortener",
            "nuxt",
            "nuxthub",
            "shadcn-ui",
            "tailwindcss",
            "url-shortener",
            "web-analytics"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-05-23T04:14:36Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/796284842/312fb0e7-fc3f-4993-81db-bdd889d8e6b2"
        ],
        "homepage": "https://Sink.Cool",
        "readme_summary": "Sink is a link shortener that provides analytics and customizable slugs. It is designed to be deployed on Cloudflare, taking advantage of serverless architecture. The platform offers features like AI-powered slug generation and link expiration, making it a comprehensive solution for managing and tracking shortened URLs.",
        "key_features": [
            "URL Shortening",
            "Analytics",
            "Serverless Deployment",
            "Customizable Slug",
            "AI Slug Generation",
            "Link Expiration"
        ],
        "primary_use_case": "Link shortening with built-in analytics, designed for serverless deployment on Cloudflare.",
        "open_issues": 16,
        "cover_image_prompt": "A skilled clockmaker meticulously crafting a miniature hourglass where website URLs flow in as grains of sand at the top, and perfectly shortened links emerge at the bottom. The hourglass is encased in a transparent, futuristic analytics dashboard displaying real-time statistics and user engagement metrics. Subtle digital particles swirl around the hourglass, representing data transfer and processing. The scene is set in a brightly lit, clean workshop with a focus on precision and efficiency. The image should be in 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 14712850,
        "name": "syncthing",
        "description": "Open Source Continuous File Synchronization",
        "url": "https://github.com/syncthing/syncthing",
        "language": "Go",
        "stars": 70444,
        "forks": 4528,
        "created_at": "2013-11-26T09:48:21Z",
        "updated_at": "2025-05-23T10:05:02Z",
        "topics": [
            "go",
            "p2p",
            "peer-to-peer",
            "synchronization"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-21T06:52:29Z",
        "media_urls": [
            "https://opengraph.githubassets.com/952647034d53cbee1afba686a83d94bdb36f0a4c14bd120cf01e926e5fecb5af/syncthing/syncthing"
        ],
        "homepage": "https://syncthing.net/",
        "readme_summary": "Syncthing is a continuous file synchronization program that synchronizes files between two or more computers. It prioritizes data safety and security, ease of use, and automatic operation, making it suitable for individuals needing reliable file synchronization across multiple devices.",
        "key_features": [
            "Continuous file synchronization",
            "Safe from data loss",
            "Secure against attackers",
            "Easy to use",
            "Automatic",
            "Universally available",
            "Peer-to-peer synchronization"
        ],
        "primary_use_case": "Synchronizing files between two or more computers.",
        "open_issues": 370,
        "cover_image_prompt": "A diligent librarian meticulously organizing digital books between two towering, interconnected bookshelves. The librarian carefully copies books from one shelf to the other, ensuring each book is an exact duplicate. Glowing strands of data connect the shelves, symbolizing seamless synchronization. Small UI elements float near the librarian, displaying file transfer progress and version numbers. The scene is set in a bright, modern library with a clean, organized aesthetic. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 917903047,
        "name": "story-flicks",
        "description": "‰ΩøÁî®AIÂ§ßÊ®°ÂûãÔºå‰∏ÄÈîÆÁîüÊàêÈ´òÊ∏ÖÊïÖ‰∫ãÁü≠ËßÜÈ¢ë„ÄÇGenerate high-definition story short videos with one click using AI large models.",
        "url": "https://github.com/alecm20/story-flicks",
        "language": "Python",
        "stars": 1759,
        "forks": 304,
        "created_at": "2025-01-16T21:25:54Z",
        "updated_at": "2025-05-23T06:42:48Z",
        "topics": [
            "ai-video",
            "ai-video-generator",
            "chatgpt",
            "moviepy",
            "openai",
            "python",
            "shortvideo",
            "story-generation"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-03-12T15:33:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/533aac38d42921371c4948582cea50cda390704e81a6e98140031d9310193cd8/alecm20/story-flicks"
        ],
        "homepage": "",
        "readme_summary": "Story-flicks is a Python-based project that leverages AI large language models to generate high-definition story short videos. It takes a story theme as input and automatically creates a video complete with AI-generated images, story content, audio, and subtitles. The project supports multiple AI providers, offering flexibility in model selection.",
        "key_features": [
            "AI-powered story generation",
            "Automatic video creation from story themes",
            "AI-generated images",
            "Audio integration",
            "Subtitle generation",
            "Support for multiple AI providers (OpenAI, Aliyun, DeepSeek, Ollama, SiliconFlow)"
        ],
        "primary_use_case": "Generating high-definition story short videos from a given theme using AI large models.",
        "open_issues": 17,
        "cover_image_prompt": "Imagine a skilled storyteller sitting at a digital loom, weaving vibrant threads of text into captivating short videos. The loom is powered by a glowing AI core, seamlessly integrating AI-generated images, synchronized audio, and perfectly timed subtitles. Finished videos emerge from the loom, ready to enchant viewers. The scene is set in a cozy, modern studio bathed in warm, inviting light. Subtle UI elements and data visualizations float in the background, hinting at the underlying technology. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 937958453,
        "name": "mcp-send-email",
        "description": "Send emails directly from Cursor with this email sending MCP server",
        "url": "https://github.com/resend/mcp-send-email",
        "language": "TypeScript",
        "stars": 347,
        "forks": 43,
        "created_at": "2025-02-24T07:36:06Z",
        "updated_at": "2025-05-23T08:24:33Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-04-25T11:43:29Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3cf822eb8050831f342863f1a97f3b92b546b5368a231f5bdf6e2e4a99612c35/resend/mcp-send-email"
        ],
        "homepage": "",
        "readme_summary": "The mcp-send-email repository provides an MCP server that enables sending emails directly from Cursor or Claude Desktop using Resend's API. It allows users to send plain text and HTML emails, schedule emails, add CC and BCC recipients, configure reply-to addresses, and customize the sender email. This eliminates the need to copy and paste email content, streamlining the email sending process.",
        "key_features": [
            "Send plain text and HTML emails",
            "Schedule emails for future delivery",
            "Add CC and BCC recipients",
            "Configure reply-to addresses",
            "Customizable sender email"
        ],
        "primary_use_case": "Sending emails directly from Cursor or Claude Desktop using Resend's API, allowing users to compose and send emails without copying and pasting content.",
        "open_issues": 3,
        "cover_image_prompt": "Imagine a diligent postal worker in a futuristic office, sorting digital letters. The worker uses a special tool that transforms text messages into beautifully designed emails, complete with personalized attachments and delivery schedules. Completed emails are sent via glowing tubes to their recipients. UI elements on the worker's desk show email previews and delivery confirmations. The repository name, 'mcp-send-email,' is subtly displayed on the office wall. The scene is in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 199951138,
        "name": "mind-elixir-core",
        "description": "‚öó Mind Elixir is a JavaScript, framework-agnostic mind map core.",
        "url": "https://github.com/SSShooter/mind-elixir-core",
        "language": "TypeScript",
        "stars": 2610,
        "forks": 338,
        "created_at": "2019-08-01T01:04:36Z",
        "updated_at": "2025-05-23T06:41:14Z",
        "topics": [
            "graph",
            "mind-map",
            "mind-mapping",
            "mindmap",
            "tool",
            "visualization"
        ],
        "quality_score": 0.8499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-25T04:51:53Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/199951138/5d7ecb7e-efb0-418e-982c-131895e1def8"
        ],
        "homepage": "https://docs.mind-elixir.com/",
        "readme_summary": "Mind Elixir Core is a framework-agnostic JavaScript library for creating mind maps. It offers features like drag-and-drop node editing, export to various formats, and customizable styling, making it suitable for integrating mind-mapping functionality into web applications.",
        "key_features": [
            "Lightweight",
            "High performance",
            "Framework agnostic",
            "Pluginable",
            "Build-in drag and drop / node edit plugin",
            "Export as SVG / PNG / Html",
            "Summarize nodes",
            "Bulk operations supported",
            "Undo / Redo",
            "Efficient shortcuts",
            "Easily Styling your node with CSS variables"
        ],
        "primary_use_case": "Creating and manipulating mind maps in JavaScript applications.",
        "open_issues": 18,
        "cover_image_prompt": "A skilled cartographer meticulously crafting a detailed mind map on a large, glowing digital tablet. The cartographer uses a stylus to connect various ideas represented as floating islands, each labeled with keywords. The tablet displays a clean, intuitive interface with customizable node styles and drag-and-drop functionality. Small UI elements showing code snippets and data structures subtly connect the map to software development. The scene is set in a bright, modern studio with natural light. The image should be in 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 933894892,
        "name": "TheoremExplainAgent",
        "description": "Official Repo for \"TheoremExplainAgent: Towards Multimodal Explanations for LLM Theorem Understanding\" [ACL 2025]",
        "url": "https://github.com/TIGER-AI-Lab/TheoremExplainAgent",
        "language": "Python",
        "stars": 1259,
        "forks": 156,
        "created_at": "2025-02-16T23:12:20Z",
        "updated_at": "2025-05-23T09:28:43Z",
        "topics": [
            "llm-agents",
            "manim",
            "manim-animations",
            "manim-video",
            "rag"
        ],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-05-15T16:26:28Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7af17a403f4a91a399dd21e5bbb7a6cec77b477b3808fe129cecf99fe2b05a23/TIGER-AI-Lab/TheoremExplainAgent"
        ],
        "homepage": "https://tiger-ai-lab.github.io/TheoremExplainAgent/",
        "readme_summary": "TheoremExplainAgent (TEA) is an AI system designed to generate Manim videos that visually explain mathematical theorems. It aims to provide a deeper understanding of theorems by uncovering reasoning flaws that might be hidden in text-based explanations. The system utilizes LLM agents and multimodal explanations to create engaging and informative video content.",
        "key_features": [
            "Generates Manim videos to explain theorems visually",
            "Identifies reasoning flaws in theorems",
            "Uses LLM agents for theorem understanding",
            "Provides multimodal explanations"
        ],
        "primary_use_case": "Generating visual explanations of mathematical theorems using LLM agents and Manim animations.",
        "open_issues": 13,
        "cover_image_prompt": "Imagine a grand library where ancient theorem scrolls are brought to life by a team of animated characters. Each character represents a different mathematical concept, and they work together to create vibrant, engaging Manim videos that explain the theorems. The library is filled with screens showing code snippets and data visualizations, subtly connecting the animated explanations to the underlying technology. The scene is bathed in warm, inviting light, creating an atmosphere of discovery and understanding. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]