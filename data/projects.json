[
    {
        "id": 985773393,
        "name": "DeepScript",
        "description": "Convert any text into your own handwriting",
        "url": "https://github.com/dovbyk/DeepScript",
        "language": "TypeScript",
        "stars": 11,
        "forks": 0,
        "created_at": "2025-05-18T13:55:14Z",
        "updated_at": "2025-07-12T09:35:01Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-09T16:09:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/01c98c56d3fb0c07e1355b01dd1e8f0cc8fb9168c53a6e8b3a1968ee91358309/dovbyk/DeepScript"
        ],
        "homepage": "https://deepscript.vercel.app",
        "readme_summary": "DeepScript is a tool that converts digital text into custom handwritten formats. Users can select from existing fonts or upload their own handwriting samples. The application uses the Gemini API to segment and rename characters, ultimately generating a font file that can be used to produce handwritten text.",
        "key_features": [
            "Converts digital text to custom handwritten format",
            "Allows users to select existing fonts",
            "Enables users to upload their own handwriting samples",
            "Segments and renames characters using Gemini API",
            "Generates font files from uploaded samples"
        ],
        "primary_use_case": "Converting digital text into personalized handwriting.",
        "open_issues": 0,
        "cover_image_prompt": "An artist's hand holding a digital pen, transforming plain text on a tablet into beautifully handwritten script on a piece of parchment. The parchment rests on a desk scattered with ink bottles and calligraphy tools. A subtle UI element on the tablet displays the DeepScript logo and font selection options. Digital particles flow from the pen to the parchment, enhancing the handwritten effect. The scene is set in a cozy, sunlit study. The image should be in digital painting style with clean lines and clear details, using a warm color palette."
    },
    {
        "id": 998008388,
        "name": "prompt-forge",
        "description": "AI prompt engineering workbench for crafting, testing, and systematically evaluating prompts with powerful analysis tools.",
        "url": "https://github.com/insaaniManav/prompt-forge",
        "language": "Go",
        "stars": 413,
        "forks": 44,
        "created_at": "2025-06-07T17:09:42Z",
        "updated_at": "2025-07-12T09:02:14Z",
        "topics": [],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-08T14:27:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c7b0416ddda47cb80c35924a1895812508a7ed0b920960dac91df050b5c09880/insaaniManav/prompt-forge"
        ],
        "homepage": null,
        "readme_summary": "PromptForge is an AI prompt engineering workbench designed to help users create, analyze, and systematically test prompts. It offers features such as AI-powered prompt generation, advanced prompt analysis, systematic evaluation with comprehensive test suites, performance analytics, and version control. The tool supports multi-model comparison and aims to bring engineering discipline to prompt development.",
        "key_features": [
            "AI-Powered Prompt Generation",
            "Advanced Prompt Analysis",
            "Systematic Evaluation",
            "Performance Analytics",
            "Version Control",
            "Multi-model comparison"
        ],
        "primary_use_case": "AI prompt engineering for crafting, testing, and systematically evaluating prompts.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled blacksmith meticulously forging AI prompts on an anvil, using advanced tools and techniques. The blacksmith is surrounded by glowing screens displaying prompt code and analysis metrics. Sparks fly as the prompts are refined, each one becoming sharper and more effective. The scene is set in a futuristic workshop with warm lighting. Small digital elements like data visualizations and UI elements subtly connect the metaphor to software. The composition is focused and detailed with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 469828818,
        "name": "hanko",
        "description": "Privacy-first Authentication and User Management system with flexible APIs and UI web components. Open source alternative to Auth0, Cognito, Clerk, Descope, Stytch.",
        "url": "https://github.com/teamhanko/hanko",
        "language": "Go",
        "stars": 8243,
        "forks": 962,
        "created_at": "2022-03-14T17:03:46Z",
        "updated_at": "2025-07-12T09:42:50Z",
        "topics": [
            "2fa",
            "authentication",
            "ciam",
            "fido2",
            "jwt",
            "mfa",
            "oauth",
            "passkeys",
            "passwordless",
            "saml",
            "sign-in-with-apple",
            "sign-in-with-google",
            "sso",
            "user-management",
            "webauthn"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-10T14:51:25Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e4cb1f0d4f8fd3b4b6f72f368454763600411228138968b4b43e3880f33ce22c/teamhanko/hanko"
        ],
        "homepage": "https://www.hanko.io",
        "readme_summary": "Hanko is an open-source authentication and user management system designed for easy integration and privacy. It supports modern authentication methods like passkeys, MFA, and social logins, and offers flexible configuration options. Hanko provides web components and a robust API for building custom frontends.",
        "key_features": [
            "Passwordless authentication (passkeys)",
            "Multi-factor authentication (MFA)",
            "Social logins (OAuth)",
            "SAML SSO",
            "User management",
            "Web components (Hanko Elements)",
            "API-first design"
        ],
        "primary_use_case": "Authentication and user management for web applications.",
        "open_issues": 42,
        "cover_image_prompt": "A skilled locksmith crafting intricate, personalized keys for diverse doors, each representing a user's unique identity. The locksmith's workbench is surrounded by glowing digital blueprints and subtle UI elements displaying authentication flows. Each key fits perfectly into its corresponding lock, granting secure access. The scene is set in a brightly lit, futuristic workshop with a clean, organized layout. Small screens display snippets of code and API calls related to user authentication. The composition is focused and balanced, with a vibrant color scheme. The image should be in a 3D isometric illustration style with rich details and a sense of secure access."
    },
    {
        "id": 3082311,
        "name": "cloudpub",
        "description": "NAT traversal client",
        "url": "https://github.com/ermak-dev/cloudpub",
        "language": "Rust",
        "stars": 42,
        "forks": 0,
        "created_at": "2012-01-01T10:33:23Z",
        "updated_at": "2025-07-12T08:01:34Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-07-06T09:53:56Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2d1700447f33bb71904855efa897226aebc1dd356a565391f3cb4c984ff27ab5/ermak-dev/cloudpub"
        ],
        "homepage": "https://cloudpub.ru",
        "readme_summary": "CloudPub is an open-source reverse proxy tool designed to overcome NAT limitations. It allows users to expose services running on their local network to the internet, similar to Ngrok. The tool functions as a combination of a proxy server, gateway, and tunnel, providing public access to local resources.",
        "key_features": [
            "NAT traversal",
            "Reverse proxy",
            "Provides public access to local resources",
            "Open-source alternative to Ngrok"
        ],
        "primary_use_case": "Providing public access to services running behind NAT, such as web applications, databases, and game servers.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled locksmith, representing CloudPub, expertly picks the lock on a large, ornate gate labeled 'NAT'. Beyond the gate, a vibrant city representing the internet is visible. The locksmith holds a set of specialized tools that glow with digital energy. A small UI element hovers nearby, displaying connection status and data flow. The scene is set in a sunlit courtyard with subtle tech elements like glowing cables and data streams. The composition is clean and focused with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 496605552,
        "name": "dufs",
        "description": "A file server that supports static serving, uploading, searching, accessing control, webdav...",
        "url": "https://github.com/sigoden/dufs",
        "language": "Rust",
        "stars": 8334,
        "forks": 423,
        "created_at": "2022-05-26T12:09:04Z",
        "updated_at": "2025-07-12T06:17:42Z",
        "topics": [
            "cloud-disk",
            "command-line",
            "file-sharing",
            "file-upload-server",
            "rust",
            "static-server",
            "webdav",
            "webdav-server"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-05-12T00:03:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/fdb8ca90cdaa997355e45ed2816bb03f675bec46d4883298dd1897c6d818b792/sigoden/dufs"
        ],
        "homepage": "",
        "readme_summary": "Dufs is a utility file server written in Rust that allows users to easily serve files over HTTP. It supports a variety of features including static file serving, file uploading via drag and drop, folder downloads as zip files, access control, HTTPS, and WebDAV. It can be used to quickly share files, create simple web interfaces for file management, or serve as a basic WebDAV server.",
        "key_features": [
            "Static file serving",
            "File uploading (drag & drop)",
            "Folder download as zip",
            "File creation/editing/searching",
            "Resumable uploads/downloads",
            "Access control",
            "HTTPS support",
            "WebDAV support"
        ],
        "primary_use_case": "Serving files over HTTP with features like uploading, access control, and WebDAV support.",
        "open_issues": 3,
        "cover_image_prompt": "A diligent librarian meticulously organizing files within a vast, digital library. The librarian uses a glowing interface to sort documents, upload new content, and create accessible pathways for users. Each file cabinet is labeled with tags like 'WebDAV,' 'HTTPS,' and 'Access Control.' A subtle network of interconnected cables weaves through the library, symbolizing the server's connectivity. The scene is set in a bright, modern library with a clean, organized layout. Small UI elements display file paths and server configurations. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 68460326,
        "name": "OpenMQTTGateway",
        "description": "MQTT gateway for ESP8266 or ESP32 with bidirectional 433mhz/315mhz/868mhz, Infrared communications, BLE, Bluetooth, beacons detection, mi flora, mi jia, LYWSD02, LYWSD03MMC, Mi Scale, TPMS, BBQ thermometer compatibility & LoRa.",
        "url": "https://github.com/1technophile/OpenMQTTGateway",
        "language": "C++",
        "stars": 3805,
        "forks": 834,
        "created_at": "2016-09-17T15:25:25Z",
        "updated_at": "2025-07-12T04:23:53Z",
        "topics": [
            "arduino",
            "arduino-uno",
            "ble",
            "ble-beacons",
            "bridge",
            "esp32",
            "esp8266",
            "gateway",
            "home-assistant",
            "home-automation",
            "lora",
            "miflora",
            "mqtt",
            "nodemcu",
            "openhab2",
            "platformio",
            "rcswitch",
            "wemos-d1",
            "xiaomi"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-07T20:54:52Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/68460326/57a27200-94eb-11e9-8b3b-6384dde28eee"
        ],
        "homepage": "https://docs.openmqttgateway.com",
        "readme_summary": "OpenMQTTGateway is a firmware designed to unify various IoT technologies and protocols into a single, manageable system. It acts as an MQTT gateway for ESP8266 and ESP32, supporting a wide range of communication protocols and devices, including 433mhz, Infrared, BLE, Bluetooth, and LoRa. By consolidating these technologies under the MQTT protocol, it simplifies home automation and reduces the need for multiple dedicated bridges.",
        "key_features": [
            "MQTT gateway for ESP8266/ESP32",
            "Bidirectional 433mhz/315mhz/868mhz communication",
            "Infrared communications",
            "BLE and Bluetooth support",
            "Beacon detection",
            "Compatibility with various sensors (Mi Flora, Mi Jia, LYWSD02/03MMC, Mi Scale, TPMS, BBQ thermometer)",
            "LoRa support",
            "Unifies various technologies and protocols"
        ],
        "primary_use_case": "Unifying various IoT technologies and protocols under the MQTT protocol, reducing the need for multiple bridges.",
        "open_issues": 57,
        "cover_image_prompt": "A central control panel with glowing antennas extending outwards, each connecting to various household devices like lights, thermostats, and sensors. The panel acts as a translator, converting signals from different languages into a unified stream represented by glowing MQTT symbols. Small screens on the panel display data flowing in and out, with the OpenMQTTGateway logo subtly integrated into the interface. The scene is set in a modern smart home with soft, ambient lighting. The illustration should be in a clean, flat design style with clear iconography and a vibrant color scheme."
    }
]