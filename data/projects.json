[
    {
        "id": 26600712,
        "name": "gloomy-dungeons-2",
        "description": "Gloomy Dungeons II - a continuation of old-school 3d-shooter.",
        "url": "https://github.com/restorer/gloomy-dungeons-2",
        "language": "Java",
        "stars": 96,
        "forks": 42,
        "created_at": "2014-11-13T18:07:03Z",
        "updated_at": "2025-05-27T08:04:40Z",
        "topics": [
            "android",
            "engine3d",
            "game",
            "wolf",
            "wolf3d"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2020-07-02T17:43:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/32ebeb3b7a94a9abb6c2c636d52c896c4c4a2cd5ec8923d7786c156fb14d50a4/restorer/gloomy-dungeons-2"
        ],
        "homepage": "http://mobile.zame-dev.org/gloomy-ii/",
        "readme_summary": "Gloomy Dungeons II is a continuation of an old-school 3D shooter, built using a modified Wolfenstein-like engine in Java for Android. It features improvements such as simple lighting effects, varied floor and ceiling textures, extruded ceilings and doors, and a rocket launcher. The game is open-source, with the exception of the music.",
        "key_features": [
            "Simple lighting effects",
            "Different floor and ceiling textures in each cell",
            "Extruded ceiling and doors",
            "Rocket launcher"
        ],
        "primary_use_case": "Creating a first-person shooter game with a Wolfenstein 3D-like engine on Android.",
        "open_issues": 1,
        "cover_image_prompt": "A lone knight, clad in pixelated armor, navigates a dark, blocky dungeon, his sword emitting a faint, flickering light that reveals simple textures on the walls and floor. Above him, extruded ceilings loom, hinting at hidden dangers. He's about to fire a rocket launcher at a shadowy figure lurking in the distance. A small, cracked screen in the corner displays lines of Java code. The scene is set in a low-resolution, retro-style environment with a limited color palette. The image should be in a digital painting style with clear outlines and dramatic lighting, reminiscent of early 3D games."
    },
    {
        "id": 684744357,
        "name": "Canta",
        "description": "Uninstall any Android app without root (with power of Shizuku). Debloat your device as you wish, no PC required.",
        "url": "https://github.com/samolego/Canta",
        "language": "Kotlin",
        "stars": 2273,
        "forks": 50,
        "created_at": "2023-08-29T19:07:03Z",
        "updated_at": "2025-05-27T06:27:34Z",
        "topics": [
            "android",
            "app-manager",
            "shizuku"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-05T08:11:24Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/684744357/f27c72ed-e812-41e1-9b84-78de8a980c2b"
        ],
        "homepage": "https://samolego.github.io/Canta/",
        "readme_summary": "Canta is an Android application that allows users to uninstall other applications without needing root privileges, leveraging Shizuku. It enables users to debloat their devices directly from the device itself, eliminating the need for a PC connection.",
        "key_features": [
            "Uninstall Android apps without root access",
            "Powered by Shizuku",
            "Debloat device without PC"
        ],
        "primary_use_case": "Uninstalling or debloating Android applications without requiring root access.",
        "open_issues": 21,
        "cover_image_prompt": "A skilled surgeon, representing the user, carefully removes unwanted apps (bloatware) from an Android phone lying on an operating table. The phone glows with a soft light, and digital interfaces showing app details float subtly around the scene. The surgeon uses Shizuku-powered tools, visualized as advanced, glowing instruments. The operating room is clean and modern, with a minimalist design. Small UI elements displaying app uninstall progress are visible on nearby screens. The composition is focused and clear, with a cool color scheme. The image should be in a 3D isometric illustration style with rich details and a sense of precision."
    },
    {
        "id": 952822080,
        "name": "vibe-draw",
        "description": "ðŸŽ¨ Turn your roughest sketches into stunning 3D worlds by vibe drawing",
        "url": "https://github.com/martin226/vibe-draw",
        "language": "TypeScript",
        "stars": 1821,
        "forks": 265,
        "created_at": "2025-03-22T00:20:20Z",
        "updated_at": "2025-05-27T10:07:53Z",
        "topics": [],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2025-03-25T08:48:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/41a15cdc95fcf3199f775598bda51b26b0ace7743c5cd8b9fa4f1a5fa7095381/martin226/vibe-draw"
        ],
        "homepage": "",
        "readme_summary": "Vibe Draw allows users to create 3D models and worlds from simple 2D sketches. It uses AI to enhance the sketches and transform them into 3D models, which can then be added to a 3D world. The resulting 3D world can be exported in a standard format for use in other tools.",
        "key_features": [
            "Sketch-to-3D model conversion",
            "2D canvas drawing",
            "3D world building",
            "AI-powered sketch enhancement",
            "3D model export (.glTF)"
        ],
        "primary_use_case": "Creating 3D models and worlds from 2D sketches using AI-powered enhancement and transformation.",
        "open_issues": 4,
        "cover_image_prompt": "An artist stands before a blank 3D canvas, sketching freely with a magical stylus. The sketches instantly transform into detailed 3D models that float around the artist. A 2D drawing canvas is subtly visible in the background, reflecting the initial sketch. The 3D models are vibrant and diverse, showcasing different styles and complexities. Small UI elements displaying the \"Improve Drawing\" and \"Make 3D\" buttons are subtly incorporated into the scene. The setting is a bright, airy studio filled with natural light. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 778774319,
        "name": "anx-reader",
        "description": "Featuring powerful AI capabilities and supporting various e-book formats, it makes reading smarter and more focused. ",
        "url": "https://github.com/Anxcye/anx-reader",
        "language": "Dart",
        "stars": 5154,
        "forks": 289,
        "created_at": "2024-03-28T11:28:52Z",
        "updated_at": "2025-05-27T10:10:48Z",
        "topics": [
            "dart",
            "ebook-reader",
            "flutter"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-27T04:55:09Z",
        "media_urls": [
            "https://opengraph.githubassets.com/241cb560ca7872a84a409e006324ffc09c007d1f0a83e6045d652deff78055fb/Anxcye/anx-reader"
        ],
        "homepage": "",
        "readme_summary": "Anx Reader is an e-book reader that enhances the reading experience with AI capabilities, cross-platform support, and synchronization. It supports various e-book formats and offers features like AI assistance, data visualization, customizable styles, and note-taking, making reading smarter and more focused.",
        "key_features": [
            "Cross-Platform support (iOS, macOS, Windows, Android)",
            "Full Sync of Reading Progress, Book Files, and Highlighted Notes",
            "Multiple AI support (OpenAI, Claude, Gemini, DeepSeek)",
            "Insightful Data visualizations (Weekly/Monthly/Yearly/Heatmap)",
            "Notes with Filtering/Sorting and Export options (TXT, Markdown, CSV)",
            "Highly Customizable Styles (Line Spacing, Paragraph Spacing, Margins, Fonts, Color Schemes, Page Turning Methods)",
            "Practical Features (Translation, Search, Quick Ask AI, Write Ideas, Text-to-Speech)"
        ],
        "primary_use_case": "Reading e-books with AI-powered assistance and cross-platform synchronization.",
        "open_issues": 115,
        "cover_image_prompt": "Imagine a cozy library where an AI librarian assists a reader. The librarian, depicted as a friendly robot with glowing eyes, stands beside a comfortable armchair where a person is engrossed in an e-book. The robot librarian uses its digital hands to subtly enhance the reading experience, projecting helpful information onto the e-book screen, such as translations, definitions, and insightful summaries. The library is filled with floating digital books, each representing a different e-book format. Small UI elements are subtly integrated into the scene, displaying options for text customization and AI assistance. The scene is bathed in warm, inviting light. The image should be in a 3D isometric illustration style with rich details and soft, vibrant colors."
    },
    {
        "id": 190729906,
        "name": "budibase",
        "description": "Create business apps and automate workflows in minutes. Supports PostgreSQL, MySQL, MariaDB, MSSQL, MongoDB, Rest API, Docker, K8s, and more ðŸš€ No code / Low code platform..",
        "url": "https://github.com/Budibase/budibase",
        "language": "TypeScript",
        "stars": 24584,
        "forks": 1748,
        "created_at": "2019-06-07T11:03:41Z",
        "updated_at": "2025-05-27T10:10:49Z",
        "topics": [
            "ai-app-builder",
            "ai-applications",
            "crud-app",
            "crud-application",
            "data-application",
            "data-apps",
            "internal-tools",
            "it-workflows",
            "low-code",
            "low-code-no-code",
            "low-code-platform",
            "no-code",
            "no-code-platform",
            "open-source",
            "rest-api-framework",
            "sql-gui",
            "workflow-apps",
            "workflow-automation",
            "workflow-engine"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-27T08:27:25Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/190729906/fcf93f26-8dc4-48d7-a0eb-8d7a8925eb57"
        ],
        "homepage": "https://budibase.com",
        "readme_summary": "Budibase is an open-source, low-code platform for quickly building and deploying internal tools. It supports connecting to various data sources and provides pre-built components to accelerate development. Budibase allows users to automate workflows and create responsive single-page applications.",
        "key_features": [
            "Build and ship single page applications",
            "Open source and extensible (GPL v3)",
            "Connect to multiple data sources (MongoDB, CouchDB, PostgreSQL, MariaDB, MySQL, Airtable, S3, DynamoDB, REST API)",
            "Build apps with pre-made components",
            "Automate processes and integrate with other tools"
        ],
        "primary_use_case": "Building internal tools, forms, portals, and approval apps with a low-code platform.",
        "open_issues": 207,
        "cover_image_prompt": "Imagine a skilled architect overseeing a bustling construction site where digital building blocks are assembled into custom applications. The architect, representing Budibase, effortlessly snaps together pre-designed components like forms, tables, and charts, sourced from various databases represented by labeled containers. Glowing data streams flow between the components, forming a seamless workflow. A large screen in the background displays a simplified application interface, showcasing the final product. The scene is set in a bright, modern design studio with a clean, isometric perspective. Subtle code snippets and UI elements are integrated into the environment. The image should be in a vibrant, 3D isometric illustration style with crisp details and a focus on clarity."
    },
    {
        "id": 709242076,
        "name": "gofr",
        "description": "An opinionated GoLang framework for accelerated microservice development. Built in support for databases and observability.",
        "url": "https://github.com/gofr-dev/gofr",
        "language": "Go",
        "stars": 10608,
        "forks": 1616,
        "created_at": "2023-10-24T10:14:48Z",
        "updated_at": "2025-05-27T09:52:35Z",
        "topics": [
            "framework",
            "go",
            "go-framework",
            "golang",
            "golang-framework",
            "grpc",
            "grpc-go",
            "grpc-golang",
            "hacktoberfest",
            "http-server",
            "logging",
            "metrics",
            "microservice",
            "microservice-framework",
            "opentelemetry",
            "performance",
            "rest-api",
            "server",
            "tracing",
            "web-framework"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-23T10:26:42Z",
        "media_urls": [
            "https://opengraph.githubassets.com/06decded5db659b90213a3b433209161ac2ba12771427cb00653ccce5f09fd95/gofr-dev/gofr"
        ],
        "homepage": "https://gofr.dev",
        "readme_summary": "GoFr is a GoLang framework designed to accelerate microservice development. It provides built-in support for databases and observability, simplifying the creation and deployment of microservices, especially within Kubernetes environments. The framework offers features like simple API syntax, REST standards, configuration management, gRPC support, and health checks.",
        "key_features": [
            "Simple API Syntax",
            "REST Standards by Default",
            "Configuration Management",
            "Observability (Logs, Traces, Metrics)",
            "Inbuilt Auth Middleware & Custom Middleware Support",
            "gRPC Support",
            "HTTP Service with Circuit Breaker Support",
            "Pub/Sub",
            "Health Check for All Datasources",
            "Database Migration",
            "Cron Jobs",
            "Support for Changing Log Level Without Restarting",
            "Swagger Rendering",
            "Abstracted File Systems",
            "Websockets"
        ],
        "primary_use_case": "Simplifying microservice development with a focus on Kubernetes deployment and out-of-the-box observability.",
        "open_issues": 39,
        "cover_image_prompt": "A skilled architect overseeing the construction of a miniature city, where each building represents a microservice. The architect uses blueprints (configurations) and tools (observability tools) to ensure each building is perfectly constructed and connected. Some buildings glow with activity (logging, metrics, tracing), while others are being tested by tiny robots (automated testing). A large screen displays the city's overall health and performance metrics. The scene is set in a bright, modern design studio with isometric perspective. Subtle UI elements and code snippets are integrated into the blueprints and screens. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 31771754,
        "name": "WebGoat",
        "description": "WebGoat is a deliberately insecure application",
        "url": "https://github.com/WebGoat/WebGoat",
        "language": "JavaScript",
        "stars": 7509,
        "forks": 6733,
        "created_at": "2015-03-06T14:02:02Z",
        "updated_at": "2025-05-27T04:41:26Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-07T19:08:52Z",
        "media_urls": [
            "https://opengraph.githubassets.com/208003fcd9888a9e090254966469657e94677289a1e423601d55e2f52fdcabc5/WebGoat/WebGoat"
        ],
        "homepage": "https://owasp.org/www-project-webgoat/",
        "readme_summary": "WebGoat is a deliberately insecure web application designed to teach web application security lessons. It demonstrates common server-side flaws through hands-on exercises, allowing users to learn and practice penetration testing techniques. The application can be deployed via Docker or run as a standalone application.",
        "key_features": [
            "Deliberately insecure web application",
            "Teaches web application security lessons",
            "Demonstrates common server-side application flaws",
            "Exercises for learning application security and penetration testing",
            "Multiple installation options (Docker, Standalone)"
        ],
        "primary_use_case": "Learning web application security and penetration testing techniques by exploiting deliberately introduced vulnerabilities.",
        "open_issues": 35,
        "cover_image_prompt": "Imagine a blacksmith's forge where a skilled craftsman (representing a security expert) is deliberately hammering flaws into a gleaming sword (representing a web application). Sparks fly as the blacksmith carefully creates vulnerabilities. Around the forge, instructional diagrams and textbooks on web security are scattered. A magnifying glass highlights the intentionally created weaknesses. The scene is set in a well-lit workshop with a blend of old-world craftsmanship and subtle digital interfaces displaying security concepts. The image should be in a detailed digital painting style with clear outlines and a focus on the contrast between the perfect sword and the deliberate flaws."
    },
    {
        "id": 776121034,
        "name": "omi",
        "description": "AI wearables. Put it on, speak, transcribe, automatically",
        "url": "https://github.com/BasedHardware/omi",
        "language": "C",
        "stars": 5772,
        "forks": 826,
        "created_at": "2024-03-22T18:12:25Z",
        "updated_at": "2025-05-27T09:47:07Z",
        "topics": [
            "ai",
            "app",
            "bci",
            "c",
            "flutter",
            "friend",
            "mobile",
            "necklace",
            "nextjs",
            "omi",
            "personas",
            "python",
            "smartglasses",
            "summary",
            "transcription",
            "wearable"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-27T03:17:32Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/776121034/abcde48a-a04a-47bc-b146-8998b829fc5e"
        ],
        "homepage": "https://omi.me",
        "readme_summary": "Omi is an open-source AI wearable that captures conversations and provides automatic transcriptions, summaries, and action items. It connects to a mobile device and is designed for meetings, chats, and voice memos. The project includes hardware designs for a wearable device and accompanying mobile applications.",
        "key_features": [
            "Captures conversations",
            "Provides summaries",
            "Identifies action items",
            "Automatic transcription",
            "Mobile device connectivity",
            "Open-source software"
        ],
        "primary_use_case": "The primary use case is to provide users with an AI-powered wearable device that can automatically transcribe conversations, generate summaries, and identify action items.",
        "open_issues": 115,
        "cover_image_prompt": "A friendly, open-eared necklace, personified with a gentle smile, listens intently to a bustling conversation represented by swirling sound waves. The necklace subtly transforms the spoken words into concise summaries and actionable tasks displayed on a nearby holographic screen. The scene is set in a bright, modern cafe with people chatting in the background, subtly blurred to focus on the necklace. Small UI elements showing transcription and summarization processes are subtly integrated into the holographic display. The composition is clean and inviting, with a warm color scheme. The image should be in a flat design style with clear iconography and soft shadows."
    }
]