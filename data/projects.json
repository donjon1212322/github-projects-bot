[
    {
        "id": 990953522,
        "name": "bubbles",
        "description": "Birthday gift :D",
        "url": "https://github.com/sdegutis/bubbles",
        "language": "TypeScript",
        "stars": 1,
        "forks": 0,
        "created_at": "2025-05-26T22:53:16Z",
        "updated_at": "2025-05-29T08:46:26Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-28T17:31:46Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ff7c7d35e403383c1b017ae216430b53b56b235ab0b74a2d53eb42f4bac841de/sdegutis/bubbles"
        ],
        "homepage": "http://bubbles.90s.dev/",
        "readme_summary": "The 'bubbles' repository provides a simple, drop-in screensaver script for websites. It displays floating bubbles when a page is idle, offering a visually engaging way to prevent screen burn-in or simply add a touch of whimsy. The script is configurable with parameters to adjust the delay, speed, size, and frequency of the bubbles.",
        "key_features": [
            "Drop-in screensaver script for websites",
            "Configurable delay, speed, interval, minsize, and maxsize parameters"
        ],
        "primary_use_case": "Adding a screensaver effect to websites after a period of inactivity.",
        "open_issues": 0,
        "cover_image_prompt": "A playful school of fish, each bubble representing a website, gracefully swimming across a tranquil ocean scene. Sunlight filters down, illuminating the bubbles as they drift lazily. A subtle, translucent screen overlay shows snippets of HTML code fading in and out behind the bubbles, connecting the scene to the digital world. The ocean floor is subtly textured with circuit board patterns. The image should be in a vibrant, cheerful 3D isometric illustration style with soft lighting and a focus on clarity and whimsy."
    },
    {
        "id": 985914861,
        "name": "jmp",
        "description": null,
        "url": "https://github.com/ksdme/jmp",
        "language": "Rust",
        "stars": 6,
        "forks": 0,
        "created_at": "2025-05-18T19:29:00Z",
        "updated_at": "2025-05-29T09:05:50Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-05-19T06:14:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3533e4f02b06c716349e87fa304670e76848c7ab2639ef082a5c9068dad96963/ksdme/jmp"
        ],
        "homepage": null,
        "readme_summary": "The jmp repository provides a local, lightweight alternative to browser extensions for creating custom search shortcuts (DuckDuckGo bangs and golinks). It uses an axum-based web server and TOML configuration to allow users to define shortcuts for quickly accessing websites and performing searches.",
        "key_features": [
            "Local DuckDuckGo bangs",
            "Golinks",
            "Simple axum based web server",
            "Configuration via TOML file"
        ],
        "primary_use_case": "Quickly access websites and perform searches using custom shortcuts.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled librarian swiftly directing users to the precise book they need within a vast, interconnected library. The librarian stands at a central directory, effortlessly translating simple requests into exact locations. Digital interfaces subtly overlay the scene, displaying search queries and corresponding URLs. The library is bathed in warm, inviting light, with subtle glowing particles representing data flowing between the directory and the bookshelves. The composition is clean and focused, using a vibrant color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 501070184,
        "name": "ecode",
        "description": "Lightweight multi-platform code editor designed for modern hardware with a focus on responsiveness and performance.",
        "url": "https://github.com/SpartanJ/ecode",
        "language": "Lua",
        "stars": 1048,
        "forks": 16,
        "created_at": "2022-06-08T02:19:57Z",
        "updated_at": "2025-05-29T09:57:06Z",
        "topics": [
            "code",
            "code-editor",
            "debugger",
            "developer-tools",
            "editor",
            "geany",
            "gui",
            "ide",
            "lapce",
            "lite",
            "lite-xl",
            "lsp-client",
            "terminal",
            "text",
            "text-editor",
            "vscode",
            "zed"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-04-29T22:42:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/156a6009697792dd434ac043df9b74a2e438c11208b324c79736168d4e571dd1/SpartanJ/ecode"
        ],
        "homepage": "",
        "readme_summary": "Ecode is a lightweight, multi-platform code editor designed for modern hardware, emphasizing responsiveness and performance. Built on the eepp GUI framework, it offers features like syntax highlighting, multi-cursor support, LSP and DAP integration, Git and terminal support, and customizable settings, making it suitable for developers seeking a fast and efficient coding environment.",
        "key_features": [
            "Lightweight and portable",
            "Syntax highlighting with LSP support",
            "Multi-cursor support",
            "LSP and DAP support",
            "Git integration",
            "Terminal support",
            "Customizable linter and formatter",
            "Fast global search and replace",
            "Plugins support",
            "File system Tree View with real-time changes",
            "Per Project Settings",
            "Code-folding"
        ],
        "primary_use_case": "Lightweight, multi-platform code editing with a focus on responsiveness and performance.",
        "open_issues": 47,
        "cover_image_prompt": "Imagine a skilled artisan meticulously crafting a sleek, modern car (ecode editor) in a high-tech workshop. The artisan carefully shapes the car's frame (eepp GUI) with responsive tools, ensuring optimal performance and a smooth ride. Digital blueprints and code snippets subtly float around the workshop, highlighting the software's foundation. The car's dashboard displays customizable settings and real-time performance metrics. The workshop is brightly lit with a clean, uncluttered design. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 989814808,
        "name": "wrapguard",
        "description": "Userspace WireGuard proxy for transparent network tunneling",
        "url": "https://github.com/puzed/wrapguard",
        "language": "Go",
        "stars": 45,
        "forks": 3,
        "created_at": "2025-05-24T22:06:41Z",
        "updated_at": "2025-05-29T09:06:47Z",
        "topics": [
            "docker",
            "linux",
            "proxy",
            "userspace",
            "wireguard"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-26T20:05:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9b3cddd50262d7b9d5bb81c9b3b9a1a51301e2e76b4252042b2cc931c30926c1/puzed/wrapguard"
        ],
        "homepage": "",
        "readme_summary": "WrapGuard is a userspace WireGuard proxy that allows applications to transparently tunnel all network traffic through a WireGuard VPN. It operates without requiring container privileges or kernel modules by intercepting network calls using LD_PRELOAD. It supports both incoming and outgoing connections and uses standard WireGuard configuration files.",
        "key_features": [
            "Pure Userspace operation (no kernel modules or special privileges)",
            "Transparent network call interception using LD_PRELOAD",
            "Bidirectional connection support (incoming and outgoing)",
            "Standard WireGuard configuration file compatibility"
        ],
        "primary_use_case": "Transparently route application network traffic through a WireGuard VPN without requiring container privileges or kernel modules.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled locksmith expertly picking a lock on a network cable, rerouting the data flow through a miniature, glowing WireGuard tunnel that bypasses the main system. The locksmith, representing WrapGuard, stands confidently before a large server rack, with digital particles swirling around the tunnel, visualizing the data being proxied. A small UI element on the locksmith's wrist displays the WireGuard configuration. The scene is set in a dimly lit server room with cool, blue lighting. The composition is focused and clean, emphasizing the rerouting action. The image should be in a 3D isometric illustration style with crisp details and a modern aesthetic."
    },
    {
        "id": 286179743,
        "name": "daedalOS",
        "description": "Desktop environment in the browser",
        "url": "https://github.com/DustinBrett/daedalOS",
        "language": "JavaScript",
        "stars": 11530,
        "forks": 979,
        "created_at": "2020-08-09T06:23:28Z",
        "updated_at": "2025-05-29T09:50:28Z",
        "topics": [
            "desktop-environment",
            "javascript",
            "os",
            "web-desktop"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-28T14:40:46Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/286179743/f9241c4c-9e1d-4104-b908-470affe44c34"
        ],
        "homepage": "https://dustinbrett.com",
        "readme_summary": "daedalOS is a JavaScript-based project that emulates a desktop environment within a web browser. It offers features such as a file system with drag-and-drop support, resizable windows, a start menu, a taskbar, and customizable backgrounds, enabling users to perform typical desktop tasks directly in their browser.",
        "key_features": [
            "File System with drag and drop support and archive extraction",
            "Resizable and draggable windows with animation",
            "Start Menu with expandable sidebar and spotlight effect",
            "Taskbar with peek hover preview and AI Chat Agent",
            "Clock with NTP server time mode and calendar popup",
            "Dynamic animated wallpapers and screensaver"
        ],
        "primary_use_case": "Providing a fully functional desktop environment within a web browser.",
        "open_issues": 41,
        "cover_image_prompt": "Imagine a bustling city contained within a computer monitor, representing a desktop environment. A user, depicted as a digital avatar, navigates the city streets (folders) with ease, opening buildings (applications) and interacting with various services. Floating icons represent files and programs, connecting the digital city to the user's real-world tasks. Subtle UI elements overlay the scene, showing windows and menus. The city is vibrant and dynamic, with glowing particles representing data flow and activity. The image should be in 3D isometric illustration style with rich details and a bright, inviting color scheme."
    },
    {
        "id": 224234024,
        "name": "helium",
        "description": "Lighter web automation with Python",
        "url": "https://github.com/mherrmann/helium",
        "language": "Python",
        "stars": 7833,
        "forks": 481,
        "created_at": "2019-11-26T16:12:28Z",
        "updated_at": "2025-05-29T09:40:35Z",
        "topics": [
            "chrome",
            "firefox",
            "helium",
            "python",
            "python3",
            "selenium",
            "selenium-python",
            "web-automation",
            "web-scraping",
            "webdriver"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-04-28T04:40:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/31621f9cf7eea731c8fc046a2837ef0cd65bd3a720863c9628415d2bbff4a9a8/mherrmann/helium"
        ],
        "homepage": "",
        "readme_summary": "Helium is a Python library that simplifies web automation by providing a high-level API on top of Selenium. It allows developers to interact with web elements using user-visible labels instead of complex selectors, resulting in shorter, more readable, and more stable scripts. Helium also simplifies common tasks like iFrame interaction and window management.",
        "key_features": [
            "High-level API for web automation",
            "Simplified iFrame interaction",
            "Automatic window management",
            "Implicit and explicit waits",
            "Mixable with Selenium"
        ],
        "primary_use_case": "Web automation using Python with a focus on simplicity and readability.",
        "open_issues": 52,
        "cover_image_prompt": "A skilled architect effortlessly constructing a towering skyscraper using lightweight, glowing building blocks labeled 'Web Elements'. The architect, representing Helium, precisely places each block with ease, while a complex blueprint filled with tangled wires and code (representing Selenium) lies discarded on a nearby table. The skyscraper represents a fully automated web application, gleaming with efficiency. Small digital screens display snippets of Python code and browser windows executing tasks. The scene is set in a bright, modern design studio with a focus on clarity and simplicity. The image should be in 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 94889537,
        "name": "webscrapbook",
        "description": "A browser extension that captures web pages to local device or backend server for future retrieval, organization, annotation, and edit. This project inherits from legacy Firefox add-on ScrapBook X.",
        "url": "https://github.com/danny0838/webscrapbook",
        "language": "JavaScript",
        "stars": 1016,
        "forks": 129,
        "created_at": "2017-06-20T12:38:00Z",
        "updated_at": "2025-05-29T04:42:01Z",
        "topics": [
            "archive",
            "bookmark",
            "browser-extension",
            "capture",
            "chrome-extension",
            "firefox-addon",
            "maff",
            "webextension"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-20T13:06:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9f2150d5ec99aa8480c80aae41ee606ee4fc5ed15d5b97802b0fea986389115a/danny0838/webscrapbook"
        ],
        "homepage": "",
        "readme_summary": "WebScrapBook is a browser extension designed to capture web pages faithfully in various archive formats. It allows users to retrieve, organize, annotate, and edit captured web content locally or on a backend server. The project is a successor to the ScrapBook X Firefox add-on.",
        "key_features": [
            "Web page capture",
            "Archive formats",
            "Customizable configurations",
            "Future retrieval",
            "Organization",
            "Annotation",
            "Editing"
        ],
        "primary_use_case": "Capturing and archiving web pages for future access and manipulation.",
        "open_issues": 33,
        "cover_image_prompt": "An archivist meticulously preserving web pages within glowing glass jars, carefully placing them onto shelves in a vast, futuristic library. Each jar contains a miniature, perfectly rendered webpage. The archivist uses a magnifying glass that subtly displays UI elements and code snippets, ensuring the integrity of the archived data. Digital particles swirl around the jars, representing the flow of information. The repository name, 'WebScrapBook,' is subtly etched onto the library's main archway. The scene is bathed in soft, warm lighting, creating a sense of timeless preservation. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]