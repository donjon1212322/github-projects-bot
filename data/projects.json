[
    {
        "id": 923171092,
        "name": "rss-launchpad",
        "description": "RSS Launchpad web extension: quickly add new RSS/Atom subscriptions from websites",
        "url": "https://github.com/ilya-m32/rss-launchpad",
        "language": "TypeScript",
        "stars": 5,
        "forks": 0,
        "created_at": "2025-01-27T19:00:12Z",
        "updated_at": "2025-04-14T08:06:17Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-11T15:26:43Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e9b599a343fb3ae3f9921eb145e3176413d8f222d21cfe937e392cd9fd1469b4/ilya-m32/rss-launchpad"
        ],
        "homepage": null,
        "readme_summary": "The RSS Launchpad extension simplifies RSS subscription management by extracting available feeds from websites. It allows users to easily subscribe to these feeds using their preferred RSS reader application or web service. The extension also supports unofficial feeds for certain websites, enhancing its versatility.",
        "key_features": [
            "Extracts RSS/Atom feeds from the active tab.",
            "Opens feeds with an RSS reader app or custom web service.",
            "Supports unofficial feeds for some popular websites (e.g., YouTube).",
            "Indicates whether a website offers RSS/Atom feeds.",
            "Basic integration with 3rd-party readers via buildable URLs."
        ],
        "primary_use_case": "Quickly add new RSS/Atom subscriptions from websites.",
        "open_issues": 2,
        "cover_image_prompt": "A librarian meticulously organizing scattered news articles into labeled RSS feed boxes, each box representing a website subscription. The librarian uses a magnifying glass to identify the RSS icon on each article. A subtle UI overlay shows a browser extension icon and a list of available feeds. The scene is set in a bright, modern library with digital displays showing news headlines. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    },
    {
        "id": 879210867,
        "name": "the-mouse-is-lava",
        "description": "ðŸŒ‹  Keyboard shortcuts for the web.",
        "url": "https://github.com/gruns/the-mouse-is-lava",
        "language": "JavaScript",
        "stars": 14,
        "forks": 1,
        "created_at": "2024-10-27T10:04:01Z",
        "updated_at": "2025-04-14T08:06:02Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-04-10T16:19:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e22a3c97a81cb79db46fa535bf2d363cdf01d0a400e6c6c7d52ab7e21f088025/gruns/the-mouse-is-lava"
        ],
        "homepage": "",
        "readme_summary": "The Mouse is Lava is a Chrome extension that provides keyboard shortcuts to navigate websites, reducing the need for mouse interaction. It offers universal shortcuts for common actions like focusing input fields and finding links, as well as website-specific shortcuts for popular sites like Google. All shortcuts are customizable, allowing users to tailor the extension to their specific needs.",
        "key_features": [
            "Keyboard shortcuts for website navigation",
            "Universal shortcuts (Ctrl+B to focus input, Ctrl+I to find links)",
            "Website-specific shortcuts (e.g., Google search navigation)",
            "Customizable keyboard shortcuts"
        ],
        "primary_use_case": "Minimize mouse usage by providing keyboard shortcuts for web navigation.",
        "open_issues": 10,
        "cover_image_prompt": "Imagine a skilled calligrapher, seated at a high-tech desk, effortlessly writing on a digital scroll using only voice commands and subtle hand gestures, never touching a keyboard or mouse. The scroll transforms into a beautifully formatted webpage, complete with interactive links and input fields. Small, glowing icons representing different websites float around the calligrapher, each responding to the voice commands. The scene is bathed in soft, ambient light, creating a sense of focused productivity. The repository name, 'The Mouse is Lava,' is subtly etched into the desk. The image should be in a 3D isometric illustration style with clean lines and a vibrant color palette."
    },
    {
        "id": 42008209,
        "name": "Sn1per",
        "description": "Attack Surface Management Platform",
        "url": "https://github.com/1N3/Sn1per",
        "language": "Shell",
        "stars": 8643,
        "forks": 1908,
        "created_at": "2015-09-06T15:47:38Z",
        "updated_at": "2025-04-14T08:49:13Z",
        "topics": [
            "attack-surface",
            "attack-surface-management",
            "attacksurface",
            "bugbounty-platform",
            "cybersecurity",
            "hacking",
            "hacking-tools",
            "osint-framework",
            "osint-tool",
            "penetration-testing",
            "pentest-scripts",
            "pentest-tool",
            "pentest-tools",
            "pentesting",
            "pentesting-tools",
            "security",
            "security-tools",
            "sn1per",
            "sn1per-professional"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-02-28T21:52:43Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/42008209/5b970e00-32f3-11eb-8b89-58d512afda44"
        ],
        "homepage": "https://sn1persecurity.com",
        "readme_summary": "Sn1per is an attack surface management platform designed to automate penetration testing and vulnerability scanning. It integrates with various open-source and commercial tools to discover hidden assets, prioritize risks, and provide continuous security for organizations.",
        "key_features": [
            "Attack Surface Management",
            "Vulnerability Scanning Automation",
            "Hidden Asset Discovery",
            "Risk Prioritization"
        ],
        "primary_use_case": "Automated penetration testing and attack surface management to discover vulnerabilities and hidden assets.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a seasoned detective, magnifying glass in hand, meticulously examining a sprawling cityscape. The city represents an organization's digital infrastructure, with hidden vulnerabilities depicted as shadowy figures lurking in alleyways and rooftops. The detective's magnifying glass reveals these threats, highlighting them with a bright, focused beam. Small UI elements displaying code snippets and vulnerability reports float subtly in the background, connecting the scene to software. The composition is clean and focused, with a dark and mysterious color scheme. The image should be in a digital painting style with clear outlines and dramatic lighting, emphasizing the detective's focused gaze and the hidden threats within the city."
    },
    {
        "id": 519577891,
        "name": "upscayl",
        "description": "ðŸ†™ Upscayl - #1 Free and Open Source AI Image Upscaler for Linux, MacOS and Windows.",
        "url": "https://github.com/upscayl/upscayl",
        "language": "TypeScript",
        "stars": 36320,
        "forks": 1673,
        "created_at": "2022-07-30T17:19:20Z",
        "updated_at": "2025-04-14T09:32:46Z",
        "topics": [
            "ai",
            "electron",
            "esrgan",
            "gigapixel",
            "gigapixel-images",
            "image",
            "image-upscaling",
            "topaz",
            "upscale",
            "upscalerimage",
            "upscayl"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-09T20:33:54Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f6671af0b01f0ae0df869f79c9c0c435ce3285b5c140ebae96ffcf60710d752d/upscayl/upscayl"
        ],
        "homepage": "https://upscayl.org",
        "readme_summary": "Upscayl is a free and open-source AI image upscaler designed for Linux, MacOS, and Windows. It allows users to enhance the resolution of images using AI algorithms like ESRGAN, effectively turning low-resolution images into high-resolution ones. The primary use case is to improve the quality and detail of images, making them suitable for various applications.",
        "key_features": [
            "AI Image Upscaling",
            "Open Source",
            "Cross-Platform (Linux, MacOS, Windows)",
            "ESRGAN support",
            "Gigapixel image upscaling"
        ],
        "primary_use_case": "Upscaling and enhancing the resolution of images using AI.",
        "open_issues": 57,
        "cover_image_prompt": "An artist meticulously upscaling a pixelated photograph of a majestic lion using a futuristic easel and AI-powered brushes. The original blurry image sits on one side of the easel, while the dramatically enhanced, high-resolution version appears on the other, radiating clarity and detail. Subtle UI elements float around the easel, displaying upscaling parameters and AI processing visualizations. The scene is set in a bright, modern studio filled with digital particles and glowing effects. The repository name, 'Upscayl,' is subtly etched onto the easel's frame. The image should be in a digital painting style with clean lines, vibrant colors, and a focus on showcasing the dramatic difference in image quality."
    },
    {
        "id": 475553026,
        "name": "ghostty",
        "description": "ðŸ‘» Ghostty is a fast, feature-rich, and cross-platform terminal emulator that uses platform-native UI and GPU acceleration.",
        "url": "https://github.com/ghostty-org/ghostty",
        "language": "Zig",
        "stars": 29489,
        "forks": 784,
        "created_at": "2022-03-29T17:38:26Z",
        "updated_at": "2025-04-14T10:06:22Z",
        "topics": [],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-04-14T02:37:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0f8cca9e4aa73ebd406aea405e8dfaaf07cdd04e75a44464e806107d9da8e689/ghostty-org/ghostty"
        ],
        "homepage": "https://ghostty.org",
        "readme_summary": "Ghostty is a terminal emulator written in Zig that aims to provide a fast, feature-rich, and cross-platform experience by leveraging native UI and GPU acceleration. It strives for standards compliance and competitive performance, with a roadmap that includes advanced features and broader platform support. The project aims to be a drop-in replacement for existing terminal emulators while pushing the boundaries of what's possible with modern terminal features.",
        "key_features": [
            "Fast terminal emulation",
            "Feature-rich terminal emulation",
            "Native UI terminal emulation",
            "Standards-compliant terminal emulation",
            "Cross-platform support (Linux, macOS, Windows - in progress)",
            "GPU acceleration"
        ],
        "primary_use_case": "A cross-platform terminal emulator designed for developers and users who require a fast, feature-rich, and standards-compliant terminal experience.",
        "open_issues": 141,
        "cover_image_prompt": "Imagine a skilled artisan meticulously crafting a high-performance race car in a state-of-the-art workshop. The artisan carefully selects each component, ensuring a perfect balance of speed, features, and native integration. Holographic displays project terminal interfaces and code snippets around the car, subtly connecting the physical craft to the digital realm. The workshop is bathed in cool, futuristic lighting, highlighting the car's sleek design. The Ghostty logo is subtly integrated into the car's design. The image should be in a detailed 3D rendering style with a focus on technical precision and aesthetic appeal."
    },
    {
        "id": 708506677,
        "name": "newspaper4k",
        "description": "ðŸ“° Newspaper4k a fork of the beloved Newspaper3k. Extraction of articles, titles, and metadata from news websites. ",
        "url": "https://github.com/AndyTheFactory/newspaper4k",
        "language": "HTML",
        "stars": 717,
        "forks": 76,
        "created_at": "2023-10-22T18:56:31Z",
        "updated_at": "2025-04-14T09:37:36Z",
        "topics": [
            "articles",
            "articles-data",
            "crawler",
            "datasets-preparation",
            "news",
            "newspaper3k",
            "python",
            "requests",
            "scraper",
            "scraping"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2024-05-10T20:31:28Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/708506677/33136b19-ce22-44bf-a11f-f8f9691c0f92"
        ],
        "homepage": "",
        "readme_summary": "Newspaper4k is a Python library and CLI tool designed for extracting articles, titles, and metadata from news websites. It is a fork of the newspaper3k project, continuing its functionality with added features and bug fixes. The library provides both a command-line interface and a Python API for easy integration into various applications.",
        "key_features": [
            "Article extraction from news websites",
            "Title extraction from news websites",
            "Metadata extraction from news websites",
            "CLI tool for command-line usage",
            "Python API for programmatic access",
            "Continuation of newspaper3k with bug fixes and new features",
            "ChatGPT helper bot"
        ],
        "primary_use_case": "Scraping and curation of news articles from various websites.",
        "open_issues": 190,
        "cover_image_prompt": "A seasoned news curator meticulously sifting through a mountain of disorganized news articles, represented by crumpled papers and chaotic headlines. With a pair of high-tech glasses, the curator extracts key information, transforming the chaotic pile into neatly organized digital files, displayed on a holographic screen. The screen subtly shows the 'newspaper4k' logo. The scene is set in a futuristic, yet cozy library filled with glowing data streams. The illustration should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 120575426,
        "name": "blackcandy",
        "description": "A self hosted music streaming server",
        "url": "https://github.com/blackcandy-org/blackcandy",
        "language": "Ruby",
        "stars": 3514,
        "forks": 176,
        "created_at": "2018-02-07T06:51:06Z",
        "updated_at": "2025-04-14T07:51:30Z",
        "topics": [
            "audio",
            "hotwire",
            "music",
            "music-player",
            "music-streaming",
            "musicplayer",
            "rails",
            "ruby",
            "self-hosted"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-03-12T13:22:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8e2195ea11ff21def02be430c102647f5ed46bcd91f47c2aa784e1fc133cf513/blackcandy-org/blackcandy"
        ],
        "homepage": "",
        "readme_summary": "Black Candy is a self-hosted music streaming server that allows users to create their own personal music center. It offers easy installation via Docker, supports media file mounting, and provides mobile apps for convenient access. The system can be configured to use either SQLite or PostgreSQL as a database.",
        "key_features": [
            "Self-hosted music streaming server",
            "Docker-based installation",
            "Mobile app availability (iOS and Android)",
            "Media file mounting",
            "PostgreSQL database support"
        ],
        "primary_use_case": "Self-hosting a personal music streaming server.",
        "open_issues": 29,
        "cover_image_prompt": "Imagine a skilled librarian in a vast, warmly lit library, carefully curating a collection of musical scores. The librarian delicately selects various scores (representing different music files) and places them onto a central music stand, which then projects the music wirelessly to various devices (smartphones, tablets, speakers) throughout a cozy home. Subtle UI elements float around the music stand, displaying album art and song titles. The library shelves are lined with glowing musical notes, and the repository name, 'Black Candy,' is subtly engraved on the music stand. The scene should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 738860139,
        "name": "poco",
        "description": "Framework which generates so-called pojo-collector classes.",
        "url": "https://github.com/LumpyTales/poco",
        "language": "Java",
        "stars": 3,
        "forks": 0,
        "created_at": "2024-01-04T08:02:14Z",
        "updated_at": "2025-04-13T20:57:22Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-08T19:48:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c63f2f0c310ab7029529f1af3e9c1e94c9e0364ec42433edf6ed0a70f53fc7e2/LumpyTales/poco"
        ],
        "homepage": null,
        "readme_summary": "The PoCo framework generates collector classes for plain old Java objects (POJOs), enabling efficient extraction of specific data types from complex, nested object structures. By generating classes at build time, PoCo eliminates the need for runtime reflection, resulting in improved performance and easier error tracing. A Gradle plugin is provided for seamless integration into build processes.",
        "key_features": [
            "Generates collector classes for nested object types.",
            "Eliminates the need for runtime reflection, improving performance.",
            "Avoids polluting POJOs with custom annotations.",
            "Offers a Gradle plugin for easy integration."
        ],
        "primary_use_case": "Generating collector classes to extract specific data types from complex object structures, particularly useful in scenarios like inventory management where only certain data from orders, stocks, or returns is needed.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled artisan meticulously collecting precious gems from a complex, multi-layered geode. The artisan carefully extracts each gem, representing specific data types, and places them into labeled compartments of a beautifully crafted collector's box. Subtle holographic displays around the artisan showcase snippets of Java code and class structures. The scene is bathed in soft, focused lighting, highlighting the precision and care involved. The composition is clean and elegant, with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]