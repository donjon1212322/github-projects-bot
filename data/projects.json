[
    {
        "id": 611028402,
        "name": "Visual-Code-Space",
        "description": "A Modern Code Editor for Android",
        "url": "https://github.com/Visual-Code-Space/Visual-Code-Space",
        "language": "Kotlin",
        "stars": 489,
        "forks": 56,
        "created_at": "2023-03-08T00:36:51Z",
        "updated_at": "2025-10-29T11:53:00Z",
        "topics": [
            "ai",
            "ai-code-generator",
            "android",
            "android-application",
            "code-editor",
            "collaborate",
            "contributions-welcome",
            "editor",
            "ide",
            "java",
            "jetpack-compose",
            "kotlin",
            "mobile-ide",
            "vcspace",
            "visual-code-space"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-08-08T15:25:40Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/611028402/aad589d9-5209-4e7c-acf9-4a41f6ef81e3"
        ],
        "homepage": "http://visualcodespace.com.br/",
        "readme_summary": "Visual Code Space is a modern code editor for Android devices, designed to provide a seamless and efficient coding experience on the go. It features a fast file explorer, multi-language syntax highlighting, a tabbed editor, an integrated terminal emulator, and plugin support, all while being ad-free.",
        "key_features": [
            "Blazing Fast File Explorer",
            "Multi-Language Syntax Highlighting",
            "Tabbed Editor",
            "Integrated Terminal Emulator",
            "Ad-Free Experience",
            "Plugin Support"
        ],
        "primary_use_case": "Coding on Android devices",
        "open_issues": 21,
        "cover_image_prompt": "A skilled artisan meticulously crafting a miniature cityscape of code within a smartphone. The artisan uses a stylus as a sculpting tool, shaping glowing blocks of code into buildings and structures. The smartphone screen displays a clean, modern code editor interface. Digital particles flow from the artisan's hands, adding detail and complexity to the code city. The scene is set in a brightly lit workshop with subtle UI elements floating in the background. The composition is focused and clear, with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 26840434,
        "name": "borgmatic",
        "description": "Simple, configuration-driven backup software for servers and workstations",
        "url": "https://github.com/borgmatic-collective/borgmatic",
        "language": "Python",
        "stars": 2092,
        "forks": 107,
        "created_at": "2014-11-19T02:24:38Z",
        "updated_at": "2025-10-29T11:21:31Z",
        "topics": [
            "apprise",
            "backup",
            "borg",
            "borgbackup",
            "btrfs",
            "deduplication",
            "healthchecks",
            "loki",
            "lvm",
            "mariadb",
            "mongodb",
            "mysql",
            "ntfy",
            "postgresql",
            "python",
            "servers",
            "sqlite",
            "upitme-kuma",
            "zabbix",
            "zfs"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-10-29T06:01:51Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8b18a33f9df7dc75914f26c4c715f55e69eaeeee2c6487c5223c3d50fa5d1303/borgmatic-collective/borgmatic"
        ],
        "homepage": "https://torsion.org/borgmatic/",
        "readme_summary": "borgmatic is a configuration-driven backup software designed for servers and workstations. It leverages Borg Backup to provide client-side encryption, database backups, and monitoring through third-party integrations, simplifying the backup process with a focus on automation and ease of use.",
        "key_features": [
            "Configuration-driven backups",
            "Client-side encryption",
            "Database backups (PostgreSQL, MySQL, MariaDB, MongoDB, SQLite)",
            "Integration with monitoring services (Healthchecks, Uptime Kuma, Cronitor, Cronhub)",
            "Support for various storage technologies (ZFS, Btrfs, LVM)",
            "Retention policy management",
            "Custom command execution before/after backup actions"
        ],
        "primary_use_case": "Automated and secure backups for servers and workstations, including file systems and databases, with integrated monitoring and retention policies.",
        "open_issues": 0,
        "cover_image_prompt": "A diligent librarian meticulously archiving precious books (representing data) into glowing, secure vaults. The librarian uses a special stamp (borgmatic) to mark each book before placing it in the vault. The vaults are connected to a network of monitoring screens that display health and security metrics. Digital particles flow around the librarian, representing the automated backup process. The scene is set in a futuristic library with soft, warm lighting. Small UI elements showing backup configurations are subtly placed on nearby desks. The image should be in 3D isometric illustration style with rich details and a clean, organized composition."
    },
    {
        "id": 229689238,
        "name": "noone_video",
        "description": "Make faces blurred for videos using DNN",
        "url": "https://github.com/JeiKeiLim/noone_video",
        "language": "Python",
        "stars": 90,
        "forks": 11,
        "created_at": "2019-12-23T06:17:30Z",
        "updated_at": "2025-10-29T10:57:20Z",
        "topics": [
            "camera",
            "deep-learning",
            "deeplearning",
            "dnn",
            "face-detection",
            "facedetection",
            "opencv",
            "python",
            "video"
        ],
        "quality_score": 0.25,
        "contributors_count": 0,
        "last_commit_date": "2019-12-31T07:24:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b0e94ac00f1db0840c0f40d322be76663f563d20cdcfb02b6faedf279f6ef260/JeiKeiLim/noone_video"
        ],
        "homepage": "",
        "readme_summary": "The repository provides a set of methods for face detection in videos using OpenCV, including Haar cascades and DNN-based approaches. It allows for blurring faces in videos for anonymization purposes, offering different DNN configurations with and without cropping or scanning.",
        "key_features": [
            "Face detection using Haar cascades",
            "Face detection using DNN (various configurations)",
            "Video anonymization through face blurring",
            "DNN with no crop",
            "DNN with crop",
            "DNN with split videos by ratio",
            "DNN with split videos by crop size"
        ],
        "primary_use_case": "Video anonymization by blurring detected faces.",
        "open_issues": 5,
        "cover_image_prompt": "A skilled digital artist carefully blurring faces in a bustling crowd scene depicted on a large holographic screen. The artist uses a stylus connected to a software interface displaying OpenCV code snippets and DNN parameters. The blurred faces are subtly pixelated, contrasting with the sharp details of the unblurred background. The scene is set in a futuristic studio with soft, diffused lighting. Small UI elements showing face detection bounding boxes and blurring levels are visible. The repository name 'noone_video' is subtly displayed on the screen's corner. The image should be in a flat design style with clear iconography and a muted color palette."
    },
    {
        "id": 120425779,
        "name": "lapce",
        "description": "Lightning-fast and Powerful Code Editor written in Rust",
        "url": "https://github.com/lapce/lapce",
        "language": "Rust",
        "stars": 37517,
        "forks": 1188,
        "created_at": "2018-02-06T08:41:06Z",
        "updated_at": "2025-10-29T11:06:24Z",
        "topics": [
            "code-editor",
            "developer-tools",
            "rust",
            "text-editor",
            "vim"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-04T13:14:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b001ac152396ca4012e698225796c7f04f0498d1024f84cd88535bd67bb896e6/lapce/lapce"
        ],
        "homepage": "https://lap.dev/lapce/",
        "readme_summary": "Lapce is a lightning-fast and powerful code editor written in Rust, utilizing technologies like Rope Science and wgpu for performance. It offers features like built-in LSP support, modal editing (Vim-like), remote development capabilities inspired by VSCode, plugin support via WASI, and an integrated terminal.",
        "key_features": [
            "Built-in LSP support",
            "Modal editing (Vim-like)",
            "Built-in remote development support",
            "Plugins support (WASI)",
            "Built-in terminal"
        ],
        "primary_use_case": "Code editing and development, both locally and remotely.",
        "open_issues": 801,
        "cover_image_prompt": "A skilled artisan meticulously crafting a complex clockwork mechanism representing a code editor. Each gear represents a feature: one for language support, another for remote access, and a third for terminal integration. The artisan uses precise tools to assemble the gears, creating a smooth, efficient machine. Small screens display code snippets and UI elements, subtly connecting the metaphor to software. The workshop is filled with warm, inviting light. The image should be in 3D isometric illustration style with rich details, vibrant colors, and a focus on clarity."
    },
    {
        "id": 335402819,
        "name": "plasmic",
        "description": "Visual builder for React. Build apps, websites, and content. Integrate with your codebase.",
        "url": "https://github.com/plasmicapp/plasmic",
        "language": "TypeScript",
        "stars": 6442,
        "forks": 620,
        "created_at": "2021-02-02T19:37:59Z",
        "updated_at": "2025-10-29T11:53:22Z",
        "topics": [
            "builder",
            "cms",
            "design",
            "design-systems",
            "design-tools",
            "drag-drop",
            "frontend",
            "gatsby",
            "headless",
            "headless-cms",
            "jamstack",
            "lowcode",
            "nextjs",
            "nocode",
            "page-builder",
            "react",
            "ui-builder",
            "wysiwyg"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-29T11:53:14Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2badeea0ac19b5e9bea07ce02c802daf43fb07838d28bfd40ec1cc7c244846fc/plasmicapp/plasmic"
        ],
        "homepage": "https://www.plasmic.app",
        "readme_summary": "Plasmic is a visual builder for the web that allows users to design and build applications and websites with or without code. It integrates with existing codebases, enabling developers and non-developers to create content-managed pages, internal tools, and websites by dragging and dropping components.",
        "key_features": [
            "Visual building of apps and websites",
            "Drag and drop interface",
            "Codebase integration",
            "Content management capabilities",
            "Support for React components",
            "Low-code development"
        ],
        "primary_use_case": "Visually building and designing web applications and websites with optional code integration.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled architect stands before a digital blueprint, visually constructing a modern building by dragging and dropping pre-built modules. Each module represents a React component, seamlessly fitting into the overall design. The blueprint glows with subtle code snippets and UI elements, symbolizing the integration with existing codebases. The architect uses a stylus to fine-tune the design, while a holographic display shows the live website being built in real-time. The scene is set in a bright, futuristic design studio with a clean, minimalist aesthetic. The image should be in 3D isometric illustration style with vibrant colors and sharp details."
    }
]