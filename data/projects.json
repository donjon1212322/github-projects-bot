[
    {
        "id": 893684207,
        "name": "Termix",
        "description": "Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.",
        "url": "https://github.com/LukeGus/Termix",
        "language": "TypeScript",
        "stars": 2245,
        "forks": 85,
        "created_at": "2024-11-25T02:46:36Z",
        "updated_at": "2025-09-03T10:10:22Z",
        "topics": [
            "docker",
            "file-management",
            "self-hosted",
            "ssh",
            "ssh-tunnel"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-09-03T05:14:49Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6b0885db9250dd995cdc47650d5f175c858af8953c98ec1e1b3df695f70b6a37/LukeGus/Termix"
        ],
        "homepage": "https://docs.termix.site/",
        "readme_summary": "Termix is a web-based server management platform written in TypeScript. It provides SSH terminal access, SSH tunneling, and remote file editing capabilities through a web interface, aiming to be a self-hosted, all-in-one server management solution.",
        "key_features": [
            "SSH Terminal Access with split-screen and tab support",
            "SSH Tunnel Management with automatic reconnection and health monitoring",
            "Remote File Editor with syntax highlighting and file management",
            "SSH Host Manager for saving and organizing SSH connections",
            "Server Stats for viewing CPU, memory, and HDD usage",
            "User Authentication with admin controls, OIDC, and 2FA support",
            "Modern UI built with React, Tailwind CSS, and Shadcn",
            "Multi-language Support (English and Chinese)"
        ],
        "primary_use_case": "Centralized web-based server management, providing SSH terminal, tunneling, and file editing functionalities.",
        "open_issues": 37,
        "cover_image_prompt": "Imagine a control room where a technician manages various servers represented by interconnected pipes and valves. The technician, wearing a headset, adjusts the flow of data through the pipes, visualizing SSH tunnels. A large screen displays a file editor with code syntax highlighting, representing remote file editing. The pipes glow with digital particles, subtly connecting the physical infrastructure to software. The scene is set in a clean, modern server room with cool lighting. Small UI elements show server stats and connection status. The image should be in a 3D isometric illustration style with clear details and a blue and green color scheme."
    },
    {
        "id": 1041701020,
        "name": "ascii-converter",
        "description": "Images,videos and webcam ascii ",
        "url": "https://github.com/Apollo478/ascii-converter",
        "language": "Go",
        "stars": 31,
        "forks": 2,
        "created_at": "2025-08-20T22:17:20Z",
        "updated_at": "2025-09-03T07:09:02Z",
        "topics": [
            "ascii-art",
            "asscii",
            "camera-to-ascii",
            "command-line",
            "gif-to-ascii",
            "golang",
            "image-processing",
            "image-to-ascii-art",
            "video-to-ascii"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-03T02:11:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d625effda339b5b4e301e407e6463631b87b38fae5b81e81d9d746c216e95a54/Apollo478/ascii-converter"
        ],
        "homepage": "",
        "readme_summary": "The ASCII Converter is a command-line tool written in Go that converts images, GIFs, audio, videos, and webcam streams into ASCII art. It supports various input formats and allows users to preview the ASCII art in the terminal or save it to files.",
        "key_features": [
            "Image to ASCII conversion",
            "GIF to ASCII conversion",
            "Video to ASCII conversion",
            "Audio to ASCII conversion",
            "Webcam to ASCII conversion",
            "Color and black/white ASCII output",
            "Customizable ASCII width and height",
            "Terminal preview and file saving"
        ],
        "primary_use_case": "Converting multimedia files and webcam streams into ASCII art for display in the terminal or saving as files.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled artisan meticulously chisels away at a block of stone, revealing a vibrant, pixelated mosaic of a cityscape within. The artisan uses specialized tools that emit digital particles, transforming the raw stone into recognizable ASCII characters. A nearby screen displays a live video feed being converted into the mosaic in real-time. The scene is set in a brightly lit workshop with a blend of traditional and futuristic elements. The composition is focused and clean, with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 573661753,
        "name": "activepieces",
        "description": "AI Agents & MCPs & AI Workflow Automation • (280+ MCP servers for AI agents) • AI Automation / AI Agent with MCPs • AI Workflows & AI Agents • MCPs for AI Agents",
        "url": "https://github.com/activepieces/activepieces",
        "language": "TypeScript",
        "stars": 17275,
        "forks": 2483,
        "created_at": "2022-12-03T02:52:46Z",
        "updated_at": "2025-09-03T10:07:40Z",
        "topics": [
            "ai-agent",
            "ai-agent-tools",
            "ai-agents",
            "ai-agents-framework",
            "mcp",
            "mcp-server",
            "mcp-tools",
            "mcps",
            "n8n-alternative",
            "no-code-automation",
            "workflow",
            "workflow-automation",
            "workflows"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-09-03T08:47:18Z",
        "media_urls": [
            "https://opengraph.githubassets.com/04e85d6bdf67da8b3aced4e5ae69ddc0c8ad3a97646ba06bef24464a8956f805/activepieces/activepieces"
        ],
        "homepage": "https://www.activepieces.com",
        "readme_summary": "Activepieces is an open-source, TypeScript-based AI automation platform positioned as a Zapier alternative. It emphasizes extensibility through a type-safe framework, allowing users to create and share integrations (pieces) that can be used as MCP servers for AI agents. The platform offers a no-code builder, AI SDK, and enterprise-ready features, focusing on security and human-in-the-loop capabilities.",
        "key_features": [
            "Open Source and Extensible",
            "Type-Safe Pieces Framework (TypeScript)",
            "MCP Server Functionality for AI Agents",
            "No-Code Builder",
            "AI-First with Native AI Pieces and SDK",
            "Enterprise-Ready Features",
            "Secure by Design (Self-Hosted)",
            "Human-in-the-Loop Capabilities",
            "Human Input Interfaces"
        ],
        "primary_use_case": "AI workflow automation and integration of various services using a no-code or low-code approach, particularly for AI agents and MCPs.",
        "open_issues": 310,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling intricate clockwork gears, each gear representing a different application or service (e.g., a gear with a Discord logo, another with an OpenAI logo). The clockwork mechanism powers a miniature AI robot, which is shown performing a complex task on a small screen. Digital streams of data flow between the gears, illuminating the connections. The clockmaker's workshop is filled with tools and blueprints, subtly incorporating the Activepieces logo. The scene is brightly lit and rendered in a 3D isometric illustration style with a focus on clarity and detail."
    },
    {
        "id": 1008866688,
        "name": "oh-my-logo",
        "description": "Display giant ASCII-art logos with colorful gradients in your terminal — like Claude Code or Gemini CLI.",
        "url": "https://github.com/shinshin86/oh-my-logo",
        "language": "TypeScript",
        "stars": 1060,
        "forks": 38,
        "created_at": "2025-06-26T08:03:24Z",
        "updated_at": "2025-09-03T07:14:09Z",
        "topics": [
            "ascii",
            "ascii-art",
            "cli",
            "logo"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-08-31T05:06:31Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1008866688/2a712ee4-0181-4ba4-949c-404a60267d59"
        ],
        "homepage": "https://www.npmjs.com/package/oh-my-logo",
        "readme_summary": "oh-my-logo is a TypeScript-based tool for generating visually appealing ASCII art logos with gradient colors in the terminal. It offers features like different rendering modes, customizable palettes, and multi-line support, making it suitable for project banners, startup logos, or terminal customization.",
        "key_features": [
            "Two Rendering Modes (outlined or filled)",
            "13 Beautiful Palettes",
            "Vertical, horizontal, and diagonal gradients",
            "Multi-line Support",
            "Zero Dependencies (npx usage)",
            "Customizable fonts and color schemes",
            "Shadow Styles (filled mode)",
            "Letter Spacing (filled mode)",
            "Reverse Gradients"
        ],
        "primary_use_case": "Creating visually appealing ASCII art logos for terminal display and project branding.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled calligrapher in a vibrant studio, using a set of glowing, rainbow-colored inks to create a giant, stylized text banner on a digital canvas. The banner displays the words \"HELLO WORLD\" in bold ASCII art. The inks flow from magical palettes, each representing a different gradient. UI elements showing font choices and color palettes float around the calligrapher. The studio is filled with subtle digital particles and glowing lines, hinting at the software behind the art. The composition is clean and focused, with a bright and cheerful color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1005246104,
        "name": "fireplexity",
        "description": "🔥 Blazing-fast AI search engine with real-time citations, streaming responses, and live data powered by Firecrawl ",
        "url": "https://github.com/firecrawl/fireplexity",
        "language": "TypeScript",
        "stars": 1497,
        "forks": 254,
        "created_at": "2025-06-19T23:26:27Z",
        "updated_at": "2025-09-03T08:12:28Z",
        "topics": [],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-08-22T11:51:37Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0d89296bc96d1de97b67fe2744847734c3911ea81838ce97a39582c1d72ffc45/firecrawl/fireplexity"
        ],
        "homepage": "",
        "readme_summary": "Fireplexity v2 is an AI search engine that provides real-time citations, streaming responses, and live data. It supports searching across web, news, and images, offering a comprehensive search experience powered by Firecrawl.",
        "key_features": [
            "AI-powered search",
            "Real-time citations",
            "Streaming responses",
            "Live data integration",
            "Web search",
            "News search",
            "Image search"
        ],
        "primary_use_case": "AI-driven search engine for web, news, and images with real-time data and citations.",
        "open_issues": 5,
        "cover_image_prompt": "A diligent librarian, surrounded by towering stacks of books, uses a futuristic magnifying glass to instantly extract knowledge from the texts, which then flows as glowing streams of data into a holographic display showing search results. The librarian is in a grand, modern library with soft, warm lighting. Small UI elements on the magnifying glass show search queries and citation links. The composition is focused and clear, with a color scheme of blues and oranges. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 942672211,
        "name": "lazyeat",
        "description": "Lazyeat｜手势隔空控制，比划就行！Lazyeat is a touch-free controller for use while eating! Don't want greasy hands while watching shows or browsing the web during meals? You can pause videos/full screen/switch videos just by gesturing to the camera!",
        "url": "https://github.com/lanxiuyun/lazyeat",
        "language": "HTML",
        "stars": 1247,
        "forks": 58,
        "created_at": "2025-03-04T13:39:06Z",
        "updated_at": "2025-09-03T07:03:17Z",
        "topics": [
            "accessibility",
            "application",
            "computer-vision",
            "gesture-detection",
            "gesture-recognition",
            "hands-free",
            "mediapipe",
            "mediapipe-hands",
            "multitasking",
            "productivity-tool",
            "python",
            "tauri",
            "tauri-app",
            "vue3",
            "webcam-hacks",
            "windows"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-08-27T09:30:09Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3c946a2047b455dc643ff2d2befed25e09f3fecd4e0f220b6b791aeedcf56dd6/lanxiuyun/lazyeat"
        ],
        "homepage": "",
        "readme_summary": "Lazyeat is a hands-free control tool that uses gesture recognition and voice input to allow users to interact with their devices without touching them. It's designed for situations where users have dirty or greasy hands, such as while eating, enabling them to pause videos, adjust volume, and navigate content through gestures and voice commands.",
        "key_features": [
            "Hands-free convenience",
            "Intuitive gesture control",
            "Multi-platform support (Windows, MacOS, Linux)",
            "Voice input integration"
        ],
        "primary_use_case": "Contactless control of devices during activities like eating, where users want to avoid touching devices with dirty hands.",
        "open_issues": 10,
        "cover_image_prompt": "A person sitting at a table, enjoying a meal while watching a video on a floating holographic screen. Instead of touching the screen, they are making hand gestures that control the video playback. The gestures are highlighted with subtle glowing lines. Small UI elements representing video controls are visible around the screen. The scene is set in a cozy, modern kitchen with warm lighting. The repository name 'Lazyeat' is subtly displayed on the screen. The image should be in a flat design style with clear iconography and a focus on usability."
    },
    {
        "id": 635958781,
        "name": "pinstr",
        "description": "Decentralized, free, and open-source social network built on top of the Nostr Protocol for curating and sharing interests with the world.",
        "url": "https://github.com/sepehr-safari/pinstr",
        "language": "TypeScript",
        "stars": 60,
        "forks": 6,
        "created_at": "2023-05-03T20:32:09Z",
        "updated_at": "2025-09-03T04:10:18Z",
        "topics": [
            "bitcoin",
            "bookmarks",
            "decentralized",
            "nostr"
        ],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2024-06-21T12:10:41Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e2e1bbf6a6e638e19c0344958b41b85d27121e6f0bb2503f9b4c0c7f0e7b34f4/sepehr-safari/pinstr"
        ],
        "homepage": "https://pinstr.app",
        "readme_summary": "Pinstr is a decentralized social network built on the Nostr protocol, enabling users to curate and share their interests through customizable boards. It offers features like creating public boards, liking/commenting on other users' content, and attaching Nostr profiles and notes to boards, all while being open-source and free to use.",
        "key_features": [
            "Decentralized backend with Nostr protocol",
            "Open-source and free to use",
            "Create customized public boards of pins on almost any topic",
            "Like, Comment, and Zap other users' boards",
            "Easy-to-use interface",
            "User-friendly features",
            "Ability to attach Nostr Profiles and Notes to boards"
        ],
        "primary_use_case": "Curating and sharing interests with others in a decentralized social network.",
        "open_issues": 8,
        "cover_image_prompt": "A community gardener tending to a vibrant, interconnected trellis where each plant represents a user's interest board. The gardener carefully cultivates each plant, adding labels and connecting them to other related plants via glowing threads representing Nostr connections. Small screens embedded in the trellis display snippets of notes and profiles attached to the plants. The scene is set in a sunlit, futuristic garden with a clean, organized layout. Digital particles float around the trellis, visualizing the flow of information. The repository name 'Pinstr' is subtly etched into a stone pathway. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]