[
    {
        "id": 1058480615,
        "name": "piraterf",
        "description": "PIrateRF transforms your Raspberry Pi Zero W into a portable RF signal generator that spawns its own WiFi hotspot. Control everything from FM broadcasts to digital modes through your browser - hack the airwaves from anywhere! ðŸ“¡âš¡",
        "url": "https://github.com/psyb0t/piraterf",
        "language": "Go",
        "stars": 96,
        "forks": 18,
        "created_at": "2025-09-17T06:35:29Z",
        "updated_at": "2025-10-09T07:58:16Z",
        "topics": [
            "access-point",
            "carrier",
            "fm",
            "golang",
            "hack-the-planet",
            "pirate",
            "pizero",
            "portable-radio-transmission",
            "portable-tx",
            "radio",
            "raspberrypi",
            "rf",
            "rfhacking",
            "sdr",
            "software-defined-radio",
            "spectrum",
            "transmission",
            "tx",
            "websocket",
            "wifi"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-10-07T02:49:56Z",
        "media_urls": [
            "https://opengraph.githubassets.com/84c54500de4dae2204b67a5302b20fe094dc1636ac223ccc5bcb252ab538298f/psyb0t/piraterf"
        ],
        "homepage": "https://ciprian.51k.eu/piraterf-turning-a-20-raspberry-pi-zero-into-an-rf-tx-swiss-army-knife/",
        "readme_summary": "PIrateRF transforms a Raspberry Pi Zero W into a portable RF signal generator and WiFi hotspot. It allows users to control various transmission modes, from FM broadcasts to digital modes, through a web browser, enabling experimentation and education in software-defined radio transmission.",
        "key_features": [
            "Portable RF signal generation",
            "WiFi hotspot creation",
            "Web browser control",
            "Multiple transmission modes (FM, FT8, RTTY, etc.)",
            "Amateur radio experimentation"
        ],
        "primary_use_case": "Portable software-defined radio transmission and experimentation.",
        "open_issues": 0,
        "cover_image_prompt": "A lone pirate on a tropical island, using a treasure chest overflowing with electronic components and a Raspberry Pi to broadcast a radio signal across the ocean. The signal, visualized as sound waves, emanates from a makeshift antenna made of palm trees and coconuts. Small UI elements float around the pirate, showing a web browser interface controlling the broadcast. The scene is set at sunset with warm, golden lighting. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 31425145,
        "name": "raspap-webgui",
        "description": "The easiest, full-featured wireless router setup for Debian-based devices. Period.",
        "url": "https://github.com/RaspAP/raspap-webgui",
        "language": "PHP",
        "stars": 4986,
        "forks": 824,
        "created_at": "2015-02-27T15:17:59Z",
        "updated_at": "2025-10-09T09:03:52Z",
        "topics": [
            "armbian",
            "debian",
            "dnsmasq",
            "hostapd",
            "iot",
            "lighttpd",
            "orangepi",
            "raspap",
            "raspberry-pi",
            "raspberrypi",
            "rpi",
            "wi-fi",
            "wifi"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-07T19:04:55Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/31425145/ede6825a-18a4-4b30-85bb-d2f313c59ef3"
        ],
        "homepage": "https://raspap.com/",
        "readme_summary": "RaspAP is a PHP-based software solution designed to transform Debian-based devices, particularly Raspberry Pi, into full-featured wireless routers. It offers a user-friendly web interface for managing network settings, including DHCP, VPN (WireGuard, OpenVPN, Tailscale), SSL, ad blocking, and captive portal integration.",
        "key_features": [
            "Wireless router setup",
            "Web-based management interface",
            "DHCP settings",
            "WireGuard support",
            "OpenVPN support",
            "Tailscale support",
            "SSL certificate management",
            "Ad blocking",
            "Captive portal integration",
            "Themes",
            "Multilingual options",
            "Quick installer",
            "Docker container support"
        ],
        "primary_use_case": "Creating a wireless access point and router using Raspberry Pi or other Debian-based devices.",
        "open_issues": 27,
        "cover_image_prompt": "A friendly robot butler meticulously setting up a network of glowing Wi-Fi routers in a cozy, modern home. The robot is carefully connecting cables and adjusting antennas, with small UI screens displaying network settings floating around it. Digital particles representing data flow smoothly between the routers and various devices like laptops and tablets. The repository name, 'RaspAP,' is subtly displayed on the robot's apron. The scene is set in a brightly lit living room with a warm, inviting atmosphere. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and a focus on clarity and ease of understanding."
    },
    {
        "id": 285393031,
        "name": "paru",
        "description": "Feature packed AUR helper",
        "url": "https://github.com/Morganamilo/paru",
        "language": "Rust",
        "stars": 7448,
        "forks": 269,
        "created_at": "2020-08-05T20:07:42Z",
        "updated_at": "2025-10-09T07:57:20Z",
        "topics": [
            "arch",
            "archlinux",
            "aur-helper",
            "hacktoberfest",
            "pacman",
            "paru",
            "pkgbuild",
            "yaourt",
            "yay"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-10-08T01:06:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a90b1c48bf3069a19d740e145716712d560151736ec61510d716ee63959c5777/Morganamilo/paru"
        ],
        "homepage": "",
        "readme_summary": "Paru is a feature-rich AUR helper written in Rust for Arch Linux. It simplifies the process of searching, installing, and upgrading packages from the Arch User Repository (AUR) by wrapping pacman with added functionality and minimal user interaction.",
        "key_features": [
            "AUR package installation and upgrades",
            "pacman wrapper",
            "Minimal user interaction",
            "Color support (follows pacman configuration)",
            "File-based review with file manager integration",
            "Bottom-up search order option",
            "PKGBUILD editing with git integration",
            "Syntax highlighting for PKGBUILDs (with bat)",
            "Tracking of -git packages",
            "Development database generation for -git packages"
        ],
        "primary_use_case": "Simplifying AUR package management for Arch Linux users.",
        "open_issues": 100,
        "cover_image_prompt": "A skilled chef in a bustling kitchen, expertly preparing dishes from a vast menu of ingredients (AUR packages). The chef uses a special automated tool (Paru) to quickly find, gather, and combine the ingredients, ensuring each dish is perfectly crafted. Digital screens display package details and dependencies, while glowing particles represent the automated build process. The kitchen is clean and modern, with a focus on efficiency. The image should be in a 3D isometric illustration style with vibrant colors and clear details, creating a sense of streamlined package management."
    },
    {
        "id": 1030455649,
        "name": "iOS-OCR-Server",
        "description": "iOS OCR Server, using Apple's Vision Framework API.",
        "url": "https://github.com/riddleling/iOS-OCR-Server",
        "language": "Swift",
        "stars": 843,
        "forks": 50,
        "created_at": "2025-08-01T17:07:54Z",
        "updated_at": "2025-10-09T08:31:38Z",
        "topics": [
            "http-server",
            "ios",
            "ocr",
            "vision-framework"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-19T18:00:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/676650d00122106b7661bee2ee201afbbbffcde2f7ea1216c73b97922839cd89/riddleling/iOS-OCR-Server"
        ],
        "homepage": "https://apps.apple.com/us/app/ocr-server/id6749533041",
        "readme_summary": "The iOS-OCR-Server repository provides a way to turn an iOS device into a local OCR server using Apple's Vision Framework. It allows users to perform OCR on images without relying on cloud services, ensuring privacy and unlimited usage. The server exposes an API that can be integrated into other applications for text recognition.",
        "key_features": [
            "Local OCR processing using Apple's Vision Framework",
            "No cloud dependencies",
            "Unlimited usage",
            "Privacy-focused",
            "API for integration into other applications",
            "Upload API endpoint",
            "Returns JSON response with OCR results and bounding box information"
        ],
        "primary_use_case": "Turning an iOS device into a local OCR server for text recognition in images.",
        "open_issues": 0,
        "cover_image_prompt": "A diligent librarian meticulously scanning ancient scrolls with a glowing iPhone, transforming the faded text into crisp, digital characters displayed on a nearby holographic screen. The librarian's desk is adorned with subtle UI elements and glowing data streams, connecting the ancient knowledge to modern technology. The scene is set in a serene, futuristic library with soft, ambient lighting. The composition is clean and focused, highlighting the transformation process. The image should be in a 3D isometric illustration style with rich details and a calming color scheme."
    },
    {
        "id": 50824485,
        "name": "systeminformer",
        "description": "A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware. Brought to you by Winsider Seminars & Solutions, Inc. @ http://www.windows-internals.com",
        "url": "https://github.com/winsiderss/systeminformer",
        "language": "C",
        "stars": 12852,
        "forks": 1551,
        "created_at": "2016-02-01T08:10:21Z",
        "updated_at": "2025-10-09T10:03:58Z",
        "topics": [
            "administrator",
            "benchmarking",
            "debugger",
            "monitor",
            "monitor-performance",
            "monitoring",
            "performance",
            "performance-monitoring",
            "performance-tuning",
            "process-manager",
            "process-monitor",
            "processhacker",
            "profiling",
            "realtime",
            "security",
            "system-monitor",
            "systeminformer",
            "task-manager",
            "windows"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-08T15:02:39Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/50824485/76ab12fd-e114-46d7-9684-7f827e89cd8c"
        ],
        "homepage": "https://systeminformer.com",
        "readme_summary": "System Informer is a free, powerful tool for monitoring system resources, debugging software, and detecting malware on Windows. It provides a detailed overview of system activity, allowing users to track resource usage, identify processes using specific files, manage network connections, and analyze stack traces.",
        "key_features": [
            "Detailed overview of system activity with highlighting",
            "Graphs and statistics for tracking resource usage",
            "Identifying processes using specific files",
            "Managing active network connections",
            "Real-time information on disk access",
            "Detailed stack traces with kernel-mode, WOW64 and .NET support",
            "Service management (creation, editing, and control)",
            "Portable and no installation required",
            "Free Software (MIT License)"
        ],
        "primary_use_case": "System monitoring, debugging, and malware detection on Windows systems.",
        "open_issues": 252,
        "cover_image_prompt": "A doctor examining a patient (representing the Windows system) with a high-tech scanner that reveals hidden problems (malware, resource hogs). The scanner displays real-time data and graphs, showing the system's vital signs. The doctor wears a lab coat with the System Informer logo subtly displayed. Small UI elements float around the patient, showing process names and resource usage. The scene is set in a clean, modern clinic with bright, diagnostic lighting. The image should be in a 3D isometric illustration style with clear details and a focus on diagnostic clarity."
    },
    {
        "id": 911303109,
        "name": "motia",
        "description": "Multi-Language Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.",
        "url": "https://github.com/MotiaDev/motia",
        "language": "TypeScript",
        "stars": 9346,
        "forks": 708,
        "created_at": "2025-01-02T17:45:02Z",
        "updated_at": "2025-10-09T09:38:55Z",
        "topics": [
            "agents",
            "agi",
            "ai",
            "api",
            "backend",
            "developer-tools",
            "framework",
            "genai",
            "hacktoberfest",
            "javascript",
            "python",
            "ruby"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-09T05:35:29Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6ac3f132c9e7a2a3236dfc814b7f2e798727d673f4e8c8abd52983e7e8c2673e/MotiaDev/motia"
        ],
        "homepage": "https://motia.dev",
        "readme_summary": "Motia is a multi-language backend framework designed to unify APIs, background jobs, workflows, and AI Agents into a single core primitive, simplifying backend development. It aims to eliminate runtime fragmentation by providing built-in observability and state management, supporting languages like JavaScript, TypeScript, Python, and Ruby.",
        "key_features": [
            "Unifies APIs, background jobs, workflows, and AI Agents",
            "Built-in observability and state management",
            "Multi-language support (JavaScript, TypeScript, Python, Ruby)",
            "Core primitive: Step (config and handler)",
            "Auto-discovers and connects Steps"
        ],
        "primary_use_case": "Simplifying backend development by unifying various backend functionalities into a single framework, reducing the complexity of managing multiple separate systems.",
        "open_issues": 32,
        "cover_image_prompt": "A master architect overseeing a bustling city where different structures (representing APIs, background jobs, AI agents) seamlessly connect to a central control hub. The architect holds a blueprint labeled 'Motia,' guiding the flow of data and resources. Glowing lines of code subtly weave through the city, connecting the buildings. Small screens display real-time metrics and data visualizations. The scene is set in a futuristic cityscape with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and a clear, organized composition."
    },
    {
        "id": 993676621,
        "name": "PolymarketViewer",
        "description": "Polymarket Viewer - Android client for Polymarket prediction markets. Free & Open Source.",
        "url": "https://github.com/Streamatico/PolymarketViewer",
        "language": "Kotlin",
        "stars": 16,
        "forks": 2,
        "created_at": "2025-05-31T09:22:19Z",
        "updated_at": "2025-10-09T08:38:02Z",
        "topics": [
            "free",
            "open-source",
            "polymarket",
            "prediction"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-07-21T09:57:15Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b53fc51e245ebbf22393ebdbe372def1cfe6169856ae6f6d32747277a7d1f9b8/Streamatico/PolymarketViewer"
        ],
        "homepage": "",
        "readme_summary": "Polymarket Viewer is an Android application for browsing prediction markets on Polymarket.com. It provides features to browse, filter, sort, and view detailed information about prediction market events, including price history charts and comments.",
        "key_features": [
            "Browse active prediction market events",
            "Filter events by category and search",
            "Sort events by various criteria",
            "View detailed event information",
            "Display interactive price history charts",
            "Adaptive card layouts",
            "Comments system with hierarchical structure",
            "Pagination for loading more events and comments",
            "Material 3 design with dynamic theming"
        ],
        "primary_use_case": "Browsing and interacting with Polymarket prediction markets on Android devices.",
        "open_issues": 0,
        "cover_image_prompt": "A fortune teller gazing into a crystal ball that displays dynamic charts and market data related to future events. The crystal ball is set on a table with UI elements floating around it, subtly resembling an Android app interface. The fortune teller is surrounded by scrolls containing predictions and market analyses. The scene is set in a dimly lit room with a mystical atmosphere. Small digital particles and glowing lines connect the charts in the crystal ball to the surrounding data. The composition is focused and balanced with a cool color scheme. The image should be in a digital painting style with clear outlines and rich details."
    }
]