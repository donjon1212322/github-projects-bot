[
    {
        "id": 999138733,
        "name": "ip-nose",
        "description": "ip-nose is a Matrix-themed IP geolocation CLI tool built with C++. It offers IP detection, search history, a vibrant, colorized interface, and customizable configuration. Perfect for developers and network enthusiasts who appreciate cyberpunk style in their command line. Easy to compile and install with make.",
        "url": "https://github.com/Karim93160/ip-nose",
        "language": "C++",
        "stars": 7,
        "forks": 0,
        "created_at": "2025-06-09T19:51:20Z",
        "updated_at": "2025-06-17T07:48:49Z",
        "topics": [
            "ip-geo",
            "ip-geolocation",
            "ip-geolocation-api",
            "ip-geolocation-checker",
            "ip-geolocation-finder",
            "ip-geolocation-ip2location",
            "ip-geolocator",
            "ipgeo",
            "ipgeobase",
            "ipgeobase-importer",
            "ipgeolocation",
            "ipgeolocation-api"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-06-11T19:46:33Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/999138733/0a9596f8-6a73-4952-a6a1-dde0858dc177"
        ],
        "homepage": "https://github.com/Karim93160/ip-nose",
        "readme_summary": "ip-nose is a C++ command-line tool for IP geolocation, providing detailed information about IP addresses. It features a unique Matrix-inspired interface, IP detection, search history, and customizable settings. It is designed for developers and network enthusiasts seeking a stylish and efficient IP geolocation solution.",
        "key_features": [
            "IP Geolocation",
            "IP Detection",
            "Matrix-themed Interface",
            "Search History",
            "Customizable Configuration"
        ],
        "primary_use_case": "IP geolocation and information retrieval from the command line.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a digital detective, clad in a Matrix-style trench coat, peering through a glowing, neon-green terminal screen. The screen displays a world map overlaid with pulsing data streams, pinpointing the location of an IP address with laser-like accuracy. Around the detective, holographic code fragments float in the air, subtly forming the words 'ip-nose'. The scene is set in a dimly lit, futuristic cityscape, with rain reflecting the terminal's glow. The illustration should be in a 3D isometric style, with a cyberpunk aesthetic and vibrant, contrasting colors."
    },
    {
        "id": 606311829,
        "name": "munal-os",
        "description": "An experimental operating system fully written in Rust, with a unikernel design, cooperative scheduling and a security model based on WASM sandboxing.",
        "url": "https://github.com/Askannz/munal-os",
        "language": "Rust",
        "stars": 667,
        "forks": 14,
        "created_at": "2023-02-25T05:22:30Z",
        "updated_at": "2025-06-17T04:31:46Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-06-10T16:32:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/22661dfe736c6787d1d686ed871621802c903c864bcc032d0ce69ec48abf9481/Askannz/munal-os"
        ],
        "homepage": "",
        "readme_summary": "Munal OS is an experimental, Rust-based operating system employing a unikernel architecture and cooperative scheduling. It leverages WASM sandboxing to provide a secure environment for applications. The OS features a graphical interface, network stack, UI toolkit, and embedded applications, primarily using VirtIO drivers and avoiding traditional OS components like bootloaders and interrupts for simplicity.",
        "key_features": [
            "Unikernel design",
            "Cooperative scheduling",
            "WASM sandboxing for security",
            "Graphical interface with mouse and keyboard support",
            "Network driver and TCP stack",
            "Customizable UI toolkit",
            "Embedded web browser, text editor, and Python terminal",
            "VirtIO driver support"
        ],
        "primary_use_case": "An experimental operating system for exploring OS design principles and WASM sandboxing.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously assembling a complex clockwork mechanism where each gear represents an application, all contained within a transparent, secure sandbox. The clockmaker, representing the OS, carefully places each gear, ensuring smooth operation and preventing any single gear from disrupting the entire system. Digital code streams flow subtly around the clockwork, powering the mechanism. The scene is set in a clean, brightly lit workshop with a futuristic feel. The image should be in a 3D isometric illustration style with clear details and a focus on the clockwork's intricate design."
    },
    {
        "id": 362234372,
        "name": "cariddi",
        "description": "Take a list of domains, crawl urls and scan for endpoints, secrets, api keys, file extensions, tokens and more",
        "url": "https://github.com/edoardottt/cariddi",
        "language": "Go",
        "stars": 1742,
        "forks": 175,
        "created_at": "2021-04-27T19:54:43Z",
        "updated_at": "2025-06-16T19:17:41Z",
        "topics": [
            "bugbounty",
            "crawler",
            "crawling",
            "endpoint-discovery",
            "endpoints",
            "go",
            "golang",
            "hacktoberfest",
            "infosec",
            "osint",
            "penetration-testing",
            "pentesting",
            "recon",
            "reconnaissance",
            "redteam",
            "scraper",
            "secret-keys",
            "secrets-detection",
            "security",
            "security-tools"
        ],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-05-14T06:26:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/184fc3a7be561628ddc52f046e50b67fd018f2f176d51980773eb4c497b48d49/edoardottt/cariddi"
        ],
        "homepage": "https://edoardottt.com/",
        "readme_summary": "Cariddi is a Go-based tool designed for comprehensive web application reconnaissance. It crawls specified domains, identifies endpoints, and scans for sensitive information like secrets, API keys, and file extensions. The tool offers various scan options, supports multiple installation methods, and allows for customized configurations, making it suitable for security professionals and bug bounty hunters.",
        "key_features": [
            "Crawls URLs from a list of domains",
            "Scans for endpoints, secrets, API keys, file extensions, and tokens",
            "Supports various installation methods (Homebrew, Snap, Golang, Pacman, source)",
            "Offers options for intensive crawling, secret hunting, error detection, and endpoint discovery",
            "Allows custom endpoint and secret file usage",
            "Provides proxy support"
        ],
        "primary_use_case": "Security scanning and reconnaissance of web applications to identify potential vulnerabilities and sensitive information exposure.",
        "open_issues": 7,
        "cover_image_prompt": "Imagine a seasoned detective meticulously combing through a sprawling digital city, represented by interconnected web pages and server racks. The detective, equipped with a magnifying glass that highlights hidden endpoints and vulnerabilities, uncovers concealed secrets and API keys lurking within the city's architecture. Digital trails of code snippets and file extensions subtly weave through the scene, adding a layer of technical depth. The illustration should be in a detailed, 3D isometric style, with a focus on clarity and visual storytelling, using a color palette of blues, greens, and oranges to represent security, discovery, and information."
    },
    {
        "id": 825345980,
        "name": "waypoint",
        "description": null,
        "url": "https://github.com/NishantJoshi00/waypoint",
        "language": "Go",
        "stars": 19,
        "forks": 0,
        "created_at": "2024-07-07T14:27:54Z",
        "updated_at": "2025-06-17T10:02:19Z",
        "topics": [],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T05:25:47Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e30fcd98476047fd1cf5c0e74b46add01365c6a79c85f30b1b8a030d392bb8fa/NishantJoshi00/waypoint"
        ],
        "homepage": null,
        "readme_summary": "WayPoint is a fast, lightweight URL mapping and redirection system that dynamically manages URL shortcuts through YAML configuration files. It offers features like human-readable shortcuts, hierarchical organization, real-time updates, and flexible deployment options. WayPoint can be used as a server for web access or integrated with the shell for command-line usage, making it ideal for creating and managing custom URL shorteners.",
        "key_features": [
            "Human-readable Shortcuts",
            "Hierarchical Organization",
            "Real-time Updates",
            "Flexible Deployment",
            "Multiple Access Methods",
            "Shell Integration"
        ],
        "primary_use_case": "Creating and managing custom URL shorteners for internal tools, documentation, or any web resources.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled cartographer meticulously charting a vast and complex network of interconnected pathways on a digital map. The cartographer uses a special tool to create shortcuts and efficient routes between distant locations, instantly redirecting travelers to their desired destinations. The map glows with digital particles, highlighting the optimized paths. Small UI elements show URL mappings and redirection rules. The scene is set in a futuristic control room with soft, ambient lighting. The image should be in 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 378998405,
        "name": "minecraft-building-assistance-game",
        "description": null,
        "url": "https://github.com/cassidylaidlaw/minecraft-building-assistance-game",
        "language": "Python",
        "stars": 142,
        "forks": 8,
        "created_at": "2021-06-21T16:40:03Z",
        "updated_at": "2025-06-16T09:44:21Z",
        "topics": [],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-10T16:46:02Z",
        "media_urls": [
            "https://opengraph.githubassets.com/22eb004413e21c21d4a57d58aeda17a3a249574860ee7ee07be7bf5c9768d5dd/cassidylaidlaw/minecraft-building-assistance-game"
        ],
        "homepage": null,
        "readme_summary": "This repository provides the Minecraft Building Assistance Game (MBAG) environment for studying complex assistance games. It includes the implementation of AssistanceZero for training AI assistants and allows integration with Minecraft via Project Malmo. The repository also provides a house dataset for training and evaluation, enabling researchers to develop and test AI agents capable of assisting human players in building tasks within Minecraft.",
        "key_features": [
            "Minecraft Building Assistance Game (MBAG) environment",
            "AssistanceZero training for AI assistants",
            "Integration with Project Malmo for Minecraft interaction",
            "House dataset for training and evaluation",
            "Multiagent environment runnable within Python"
        ],
        "primary_use_case": "Research and development of AI assistants for complex building tasks in Minecraft.",
        "open_issues": 1,
        "cover_image_prompt": "A master builder, aided by a glowing, semi-transparent blueprint overlayed on a Minecraft landscape, guides a team of diligent worker bees (representing AI assistants) in constructing a complex house. The blueprint shimmers with digital particles, subtly displaying code snippets. The landscape is a vibrant Minecraft world. The scene is set in a sunny, open field with a clear blue sky. The composition is wide and inviting, focusing on the collaborative construction process. The image should be in a 3D isometric illustration style with bright colors and clear details."
    },
    {
        "id": 963971159,
        "name": "Prompt2Flutter",
        "description": "🚀 Transform text into fully functional Flutter applications using AI",
        "url": "https://github.com/filippofinke/Prompt2Flutter",
        "language": "TypeScript",
        "stars": 27,
        "forks": 6,
        "created_at": "2025-04-10T13:47:22Z",
        "updated_at": "2025-06-17T10:04:10Z",
        "topics": [
            "ai",
            "flutter",
            "gemini",
            "llm",
            "vibe-coding"
        ],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2025-04-10T18:47:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7a67e9b961ecf862f54d2359ac19ac27a27905e0945657c29f205df18be6d989/filippofinke/Prompt2Flutter"
        ],
        "homepage": "https://github.com/filippofinke/Prompt2Flutter",
        "readme_summary": "Prompt2Flutter is a proof-of-concept project that uses AI, specifically Google's Gemini model, to convert natural language descriptions into fully functional Flutter applications. It aims to automate the process of Flutter app development by generating code, managing dependencies, and creating UI components based on user input.",
        "key_features": [
            "Convert natural language descriptions into Flutter code",
            "Create complete Flutter projects with proper structure",
            "Manage Flutter dependencies automatically",
            "Generate UI components and app logic",
            "Support for Flutter best practices and patterns",
            "Powered by Google's Gemini AI model"
        ],
        "primary_use_case": "Transforming text descriptions into Flutter applications",
        "open_issues": 0,
        "cover_image_prompt": "A skilled architect stands before a blueprint, effortlessly speaking into a microphone. The architect's words instantly transform into a fully-formed, vibrant Flutter application that materializes before them. The blueprint subtly displays Flutter code and UI elements. The scene is set in a bright, modern design studio with soft, diffused lighting. Small digital particles swirl around the application, representing the AI's generative process. The repository name, 'Prompt2Flutter,' is subtly displayed on a nearby monitor. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 859072628,
        "name": "napkins",
        "description": "napkins.dev – from screenshot to app",
        "url": "https://github.com/Nutlope/napkins",
        "language": "TypeScript",
        "stars": 1333,
        "forks": 174,
        "created_at": "2024-09-18T03:15:18Z",
        "updated_at": "2025-06-17T09:17:24Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-04-10T16:30:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f4b89c86b8ae22fc3e765c76c9350d5d491c06f54c5ac7ea9799a987bc65d78b/Nutlope/napkins"
        ],
        "homepage": "https://www.napkins.dev/",
        "readme_summary": "The napkins.dev repository provides an open-source wireframe-to-app generator. It leverages Llama 4 and Together.ai for LLM inference, Sandpack for a code sandbox environment, and S3 for image storage. The application is built using Next.js with Tailwind CSS, and incorporates Helicone for observability and Plausible for website analytics.",
        "key_features": [
            "Wireframe to app generation",
            "Powered by Llama 4 and Together.ai",
            "Code sandbox using Sandpack",
            "Image storage using S3",
            "Next.js app router with Tailwind CSS",
            "Observability with Helicone",
            "Website analytics with Plausible"
        ],
        "primary_use_case": "Generating applications from wireframes.",
        "open_issues": 3,
        "cover_image_prompt": "A skilled architect meticulously drafting blueprints on a digital tablet, transforming a rough sketch of a building (the wireframe) into a fully realized architectural design (the app). The tablet displays a user interface with code snippets subtly overlaid, and a holographic projection shows the finished building rotating in 3D. The architect's studio is filled with natural light, casting soft shadows on the workspace. Small screens display analytics and Helicone logs. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and a focus on clarity and detail."
    },
    {
        "id": 40556106,
        "name": "wazuh",
        "description": "Wazuh - The Open Source Security Platform. Unified XDR and SIEM protection for endpoints and cloud workloads.",
        "url": "https://github.com/wazuh/wazuh",
        "language": "C",
        "stars": 12687,
        "forks": 1876,
        "created_at": "2015-08-11T17:39:03Z",
        "updated_at": "2025-06-17T08:26:30Z",
        "topics": [
            "cloud-security",
            "compliance",
            "configuration-assessement",
            "container-security",
            "cybersecurity",
            "file-integrity-monitoring",
            "incident-response",
            "infosec",
            "log-analysis",
            "malware-detection",
            "pci-dss",
            "security",
            "security-audit",
            "security-automation",
            "security-hardening",
            "security-tools",
            "siem",
            "vulnerability-detection",
            "wazuh",
            "xdr"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-06-14T14:10:18Z",
        "media_urls": [
            "https://opengraph.githubassets.com/79143de1fc41fe91fd962559c91fc729f04bb6822647b2ea5bd521ac3966064e/wazuh/wazuh"
        ],
        "homepage": "https://wazuh.com/",
        "readme_summary": "Wazuh is an open-source security platform that provides XDR and SIEM capabilities. It uses agents to collect data from endpoints, which is then analyzed by a central server. Wazuh integrates with the Elastic Stack for data visualization and offers features like intrusion detection, log analysis, file integrity monitoring, vulnerability detection, configuration assessment, and incident response.",
        "key_features": [
            "Intrusion detection",
            "Log data analysis",
            "File integrity monitoring",
            "Vulnerability detection",
            "Configuration assessment",
            "Incident response"
        ],
        "primary_use_case": "Threat prevention, detection, and response across various environments (on-premises, virtualized, containerized, and cloud-based).",
        "open_issues": 2643,
        "cover_image_prompt": "A diligent security guard standing at the entrance of a digital city, inspecting data packets flowing through a vibrant network. The guard uses a magnifying glass that reveals hidden threats within the packets, marking malicious ones with red flags. Clean packets are stamped with a green checkmark and allowed to pass. Holographic displays around the guard show real-time security logs and threat analysis dashboards. The city skyline is composed of interconnected servers and cloud symbols. The scene is brightly lit with a futuristic, clean aesthetic. The image should be in a 3D isometric illustration style with detailed textures and vibrant colors."
    }
]