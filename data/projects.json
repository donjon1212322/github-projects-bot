[
    {
        "id": 800632485,
        "name": "subtrace",
        "description": "Wireshark for Docker containers",
        "url": "https://github.com/subtrace/subtrace",
        "language": "Go",
        "stars": 1475,
        "forks": 27,
        "created_at": "2024-05-14T17:44:49Z",
        "updated_at": "2025-02-21T15:13:26Z",
        "topics": [
            "backend",
            "devtools",
            "monitoring",
            "observability"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-02-20T03:22:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7d155d1abb81d514e59f9eb5237b674841baac5b6652ef0e2b8da2730fd43a85/subtrace/subtrace"
        ],
        "homepage": "https://subtrace.dev",
        "readme_summary": "Subtrace is a tool to debug Docker containers by viewing network requests.  It supports all major programming languages and requires no code changes.  It provides detailed request information with minimal performance overhead.",
        "key_features": [
            "Works out-of-the-box",
            "No code changes needed",
            "Supports all languages (Python + Node + Go + everything else)",
            "See full payload, headers, status code, and latency",
            "Less than 100Âµs performance overhead",
            "Built on Clickhouse"
        ],
        "primary_use_case": "View incoming and outgoing requests in Docker containers to resolve production issues faster",
        "open_issues": 10
    },
    {
        "id": 908068887,
        "name": "google_photos_mobile_client",
        "description": "Reverse engineered Google Photos mobile API client.",
        "url": "https://github.com/xob0t/google_photos_mobile_client",
        "language": "Python",
        "stars": 31,
        "forks": 5,
        "created_at": "2024-12-25T03:29:35Z",
        "updated_at": "2025-02-21T10:00:02Z",
        "topics": [
            "android",
            "google-photos",
            "httptoolkit",
            "pyhton",
            "reverse-engineering",
            "unlimited-storage",
            "unofficial"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-02-18T20:23:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6d37f3f32ef67e90e1ef675ff48715320de5e7f918e728bce4b0e445104e4eb3/xob0t/google_photos_mobile_client"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a command-line interface and Python client for uploading files to Google Photos using reverse-engineered API.  It bypasses the need for a physical device or emulator, offering features like progress tracking, recursive uploads, and options for managing storage quota and post-upload file deletion. Authentication is handled using an androidId and app parameters obtained from a rooted Android device or emulator.",
        "key_features": [
            "Uploads files to Google Photos as if from a Pixel XL device",
            "Provides both Python client and CLI interfaces",
            "Supports various options like progress display, recursive directory uploads, and multi-threading",
            "Allows specifying album for uploaded media",
            "Offers options for handling storage quota and file deletion after upload",
            "Handles authentication using androidId and app parameters"
        ],
        "primary_use_case": "Uploading files to Google Photos without using a physical device or emulator",
        "open_issues": 2
    },
    {
        "id": 249331466,
        "name": "laplace",
        "description": "Laplace is an open-source project to enable screen sharing directly via browser. Based on WebRTC for low latency peer-to-peer connections, and WebSocket implemented in golang for signaling.",
        "url": "https://github.com/adamyordan/laplace",
        "language": "JavaScript",
        "stars": 303,
        "forks": 31,
        "created_at": "2020-03-23T03:58:55Z",
        "updated_at": "2025-02-21T15:11:06Z",
        "topics": [
            "peer-to-peer",
            "screencast",
            "screensharing",
            "webrtc",
            "webrtc-signaling",
            "websocket"
        ],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2020-03-28T07:57:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ce26d5c7332a7303970994d5c2b677a86c6abfaaca2cc8e2cc94812c3ee74046/adamyordan/laplace"
        ],
        "homepage": "https://laplace.adamjordan.id/",
        "readme_summary": "Laplace enables screen sharing via browser using WebRTC for low-latency peer-to-peer connections and a Golang-based WebSocket for signaling.  It offers a simple, installation-free solution for screen sharing with low server costs, suitable for various use cases such as game streaming and remote collaboration.",
        "key_features": [
            "WebRTC for low latency peer-to-peer connections",
            "WebSocket implemented in golang for WebRTC signaling",
            "Screen sharing directly via browser",
            "No installation or registration required",
            "Low server cost because encoding and transmission are done on client browsers"
        ],
        "primary_use_case": "Screen sharing directly via browser without requiring software installations or plugins",
        "open_issues": 5
    },
    {
        "id": 853917967,
        "name": "fast-music-remover",
        "description": "A C++ based, lightweight music and noise remover for YouTube and other internet media, using DeepFilterNet for audio enhancement.",
        "url": "https://github.com/omeryusufyagci/fast-music-remover",
        "language": "C++",
        "stars": 547,
        "forks": 39,
        "created_at": "2024-09-07T22:35:11Z",
        "updated_at": "2025-02-21T13:30:42Z",
        "topics": [
            "audio-cleaner",
            "audio-enhancement",
            "audio-extractor",
            "audio-processing",
            "cpp",
            "deepfilternet",
            "ffmpeg",
            "flask",
            "machine-learning",
            "media-editor",
            "media-processing",
            "music-remover",
            "noise-removal",
            "processing",
            "realtime",
            "speech-extractor",
            "vocal-extractor",
            "youtube",
            "yt-dlp"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2024-12-27T11:42:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d2f6dde957786f1317781fb6f6d3a21aa98eba5b3d13d18d480ea5f191b8b9e2/omeryusufyagci/fast-music-remover"
        ],
        "homepage": "",
        "readme_summary": "Fast Music Remover is a media processor that filters background music and noise to enhance audio quality.  It offers a web UI and is available as a container on GHCR, supporting cross-platform use. Future development includes real-time processing and additional ML models.",
        "key_features": [
            "background music filtering",
            "noise removal",
            "audio quality enhancement",
            "cross-platform support (Linux, macOS, Windows)",
            "containerized on GHCR",
            "Web UI",
            "project launcher to manage dependency installation, project configuration, and starting the web application",
            "future support for more ML models and DSP modules",
            "future support for real-time processing"
        ],
        "primary_use_case": "Removing background music and noise from audio",
        "open_issues": 22
    },
    {
        "id": 49876476,
        "name": "shardingsphere",
        "description": "Empowering Data Intelligence with Distributed SQL for Sharding, Scalability, and Security Across All Databases.",
        "url": "https://github.com/apache/shardingsphere",
        "language": "Java",
        "stars": 20066,
        "forks": 6792,
        "created_at": "2016-01-18T12:49:26Z",
        "updated_at": "2025-02-21T15:11:11Z",
        "topics": [
            "bigdata",
            "data-encryption",
            "data-pipeline",
            "database",
            "database-cluster",
            "database-gateway",
            "database-middleware",
            "distributed-database",
            "distributed-sql-database",
            "distributed-transaction",
            "encrypt",
            "mysql",
            "postgresql",
            "read-write-splitting",
            "shard",
            "sql"
        ],
        "quality_score": 1.1,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T15:11:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ad2d3e83c4b99a362156675d394030af08fa5d028e34d9e2fcc5b837f99ab9e7/apache/shardingsphere"
        ],
        "homepage": "",
        "readme_summary": "ShardingSphere is a distributed SQL transaction and query engine.  It's designed for data sharding, scaling, and encryption across various databases.  This allows for improved performance and security in database management.",
        "key_features": [
            "Distributed SQL transaction",
            "query engine for data sharding",
            "scaling",
            "encryption"
        ],
        "primary_use_case": "Data sharding, scaling, and encryption on any database",
        "open_issues": 477
    },
    {
        "id": 139199684,
        "name": "prefect",
        "description": "Prefect is a workflow orchestration framework for building resilient data pipelines in Python.",
        "url": "https://github.com/PrefectHQ/prefect",
        "language": "Python",
        "stars": 18340,
        "forks": 1710,
        "created_at": "2018-06-29T21:59:26Z",
        "updated_at": "2025-02-21T15:04:42Z",
        "topics": [
            "automation",
            "data",
            "data-engineering",
            "data-ops",
            "data-science",
            "infrastructure",
            "ml-ops",
            "observability",
            "orchestration",
            "pipeline",
            "prefect",
            "python",
            "workflow",
            "workflow-engine"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-02-20T22:39:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/38de807adfe98381b0087a33f30edb1c970041a86974a07cc246dda449466126/PrefectHQ/prefect"
        ],
        "homepage": "https://prefect.io",
        "readme_summary": "Prefect is a Python framework for building data pipelines.  It offers features like scheduling, caching, and retries to create resilient workflows.  These workflows can be monitored via a self-hosted server or Prefect Cloud.",
        "key_features": [
            "workflow orchestration",
            "data pipeline building",
            "scheduling",
            "caching",
            "retries",
            "event-based automations",
            "monitoring",
            "self-hosted server",
            "Prefect Cloud integration"
        ],
        "primary_use_case": "building and managing data pipelines in Python",
        "open_issues": 956
    },
    {
        "id": 577623124,
        "name": "VPet",
        "description": "èææ¡å® æ¨¡æå¨ ä¸ä¸ªå¼æºçæ¡å® è½¯ä»¶, å¯ä»¥åç½®å°ä»»ä½WPFåºç¨ç¨åº",
        "url": "https://github.com/LorisYounger/VPet",
        "language": "C#",
        "stars": 5093,
        "forks": 508,
        "created_at": "2022-12-13T06:37:41Z",
        "updated_at": "2025-02-21T12:56:29Z",
        "topics": [
            "desktop-pet",
            "wpf"
        ],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T09:56:32Z",
        "media_urls": [
            "https://opengraph.githubassets.com/5be308fee9ac5c84cc38e26bd6d90e080d8528389102db907941b6e3a7be45ab/LorisYounger/VPet"
        ],
        "homepage": "",
        "readme_summary": "VPet-Simulator is an open-source virtual pet simulator that can be integrated into WPF applications.  It features extensive animation and interaction capabilities, and supports modding through Steam Workshop and a dedicated mod maker for creating custom content and extending functionality.  Users can create custom pets, animations, and even add new features via code plugins.",
        "key_features": [
            "Open-source virtual pet simulator",
            "Integrates with WPF applications",
            "Supports modding via Steam Workshop and a dedicated mod maker",
            "Features numerous animations and interactions",
            "Provides tools for creating custom pet animations and interactions",
            "Offers code plugins for advanced functionality extensions"
        ],
        "primary_use_case": "To provide a virtual pet simulator that can be integrated into WPF applications or used as a standalone application.",
        "open_issues": 22
    },
    {
        "id": 146327667,
        "name": "vector",
        "description": "A high-performance observability data pipeline.",
        "url": "https://github.com/vectordotdev/vector",
        "language": "Rust",
        "stars": 18816,
        "forks": 1667,
        "created_at": "2018-08-27T16:57:34Z",
        "updated_at": "2025-02-21T14:45:30Z",
        "topics": [
            "events",
            "forwarder",
            "logs",
            "metrics",
            "observability",
            "parser",
            "pipeline",
            "router",
            "rust",
            "stream-processing",
            "vector"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-02-20T22:20:59Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/146327667/79b84380-28db-11eb-9bb0-13be8f3541cc"
        ],
        "homepage": "https://vector.dev",
        "readme_summary": "Vector is a high-performance data pipeline written in Rust that collects, transforms, and routes logs and metrics.  It supports various sources and destinations, enabling users to manage observability data efficiently and reduce costs.  Vector is designed for reliability and offers both agent and aggregator deployment options.",
        "key_features": [
            "High-performance observability data pipeline",
            "Collects, transforms, and routes logs and metrics",
            "Supports various data sources and destinations",
            "Built in Rust for reliability",
            "End-to-end agent and aggregator deployment",
            "Unified handling of logs, metrics, and traces"
        ],
        "primary_use_case": "Collecting, transforming, and routing observability data (logs and metrics) to various vendors.",
        "open_issues": 1829
    },
    {
        "id": 335164964,
        "name": "dataease",
        "description": "ð¥ äººäººå¯ç¨çå¼æº BI å·¥å·ï¼Tableauãå¸è½¯çå¼æºæ¿ä»£ã",
        "url": "https://github.com/dataease/dataease",
        "language": "Java",
        "stars": 19385,
        "forks": 3468,
        "created_at": "2021-02-02T04:10:21Z",
        "updated_at": "2025-02-21T14:58:49Z",
        "topics": [
            "apache-doris",
            "business-intelligence",
            "data-analysis",
            "data-visualization",
            "echarts",
            "kettle",
            "superset",
            "tableau"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-02-21T10:43:52Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9202c1ff4c6b3479a324a880be6bb0798efc14b0ea737b729e7dd36d59e7e1c5/dataease/dataease"
        ],
        "homepage": "https://dataease.io/",
        "readme_summary": "DataEase is an open-source BI tool that allows users to analyze data and gain insights into business trends.  It supports a wide range of data sources and offers a user-friendly drag-and-drop interface for creating charts and sharing data.  DataEase is available as both desktop and server versions, providing flexibility for various deployment scenarios.",
        "key_features": [
            "Open-source BI tool",
            "Supports various data sources (OLTP, OLAP databases, data warehouses, data lakes, data files, APIs)",
            "Drag-and-drop interface for chart creation",
            "Data sharing capabilities",
            "Available as desktop and server versions",
            "Supports multiple platforms and embedding options"
        ],
        "primary_use_case": "Data analysis and business intelligence",
        "open_issues": 402
    }
]