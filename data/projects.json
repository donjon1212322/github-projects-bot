[
    {
        "id": 911416155,
        "name": "i3-news",
        "description": "Interactive  RSS/Atom news headlines plugin  for i3wm and sway - compatible with i3status, i3blocks, polybar and waybar",
        "url": "https://github.com/exaroth/i3-news",
        "language": "Zig",
        "stars": 11,
        "forks": 0,
        "created_at": "2025-01-03T01:05:08Z",
        "updated_at": "2025-09-21T10:06:09Z",
        "topics": [
            "i3",
            "i3blocks",
            "i3status",
            "news",
            "polybar",
            "rss",
            "sway",
            "waybar",
            "zig"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-09-19T17:04:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c6619bd1d38d6d05235d2043b71d2ccc301ce163f0b404d2a39187a82c59d0ab/exaroth/i3-news"
        ],
        "homepage": "",
        "readme_summary": "The i3-news repository provides an interactive RSS/Atom news headline plugin designed for i3wm and sway window managers. It's compatible with popular status bar tools like i3status, i3blocks, polybar, and waybar, allowing users to display and interact with news feeds directly in their status bar.",
        "key_features": [
            "Interactive news headline snippets",
            "Compatibility with i3blocks, polybar, i3status, and waybar",
            "Support for RSS/Atom feeds",
            "Configuration management (add, edit, remove snippets)",
            "Scrolling headlines",
            "Light and Self-Contained installation options"
        ],
        "primary_use_case": "Displaying and interacting with RSS/Atom news headlines in i3wm and sway status bars.",
        "open_issues": 0,
        "cover_image_prompt": "A diligent librarian meticulously curates a vast collection of news articles, represented as glowing scrolls, organizing them onto a dynamic, interactive status bar display. The librarian uses a special magnifying glass to extract headlines from the scrolls, which then seamlessly appear on the status bar. The status bar is depicted as a sleek, modern interface with subtle UI elements and digital particles flowing around the headlines. The scene is set in a futuristic library with soft, ambient lighting. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 1056218230,
        "name": "sqliter",
        "description": "An SQLite web-based interface for serving an SQLite editor web application",
        "url": "https://github.com/ronreiter/sqliter",
        "language": "TypeScript",
        "stars": 13,
        "forks": 0,
        "created_at": "2025-09-13T16:24:27Z",
        "updated_at": "2025-09-21T04:38:07Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-19T09:45:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e9da23b9466f50e54f5a31cb7369ada4ea78436b04f7a93eb7ea74cff0abcb55/ronreiter/sqliter"
        ],
        "homepage": null,
        "readme_summary": "SQLiter is a web-based SQLite database editor packaged as a single executable. It provides a comprehensive interface for browsing, editing, and managing SQLite databases with features like CRUD operations, advanced data editing, filtering, sorting, SQL editor, data export, and schema information display.",
        "key_features": [
            "Web-based Interface",
            "Single Executable",
            "Full CRUD Operations",
            "Advanced Data Editing",
            "Filtering & Search",
            "Sorting & Pagination",
            "SQL Editor",
            "Data Export",
            "Schema Information",
            "Error Handling"
        ],
        "primary_use_case": "Managing and editing SQLite databases through a web interface.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled artisan meticulously crafting a miniature city made of data blocks, each representing a table in an SQLite database. The artisan uses a set of digital tools – a glowing SQL hammer, a filtering lens, and a sorting brush – to shape and refine the city. A large, transparent screen displays the database schema and real-time data updates. The scene is set in a bright, modern workshop filled with subtle tech elements like floating data particles and glowing UI icons. The composition is clean and focused, with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1055778057,
        "name": "GhidraGPT",
        "description": "Integrates GPT models into Ghidra for automated code analysis, variable renaming, vulnerability detection, and explanation generation.",
        "url": "https://github.com/ZeroDaysBroker/GhidraGPT",
        "language": "Java",
        "stars": 60,
        "forks": 4,
        "created_at": "2025-09-12T19:40:05Z",
        "updated_at": "2025-09-21T07:35:06Z",
        "topics": [
            "agent",
            "ghidra",
            "ghidra-extension",
            "ghidra-plugin",
            "gpt",
            "java",
            "reverse-engineering"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-09-13T09:13:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c678fe4713acca08cc5a16ed7727904be26af391d2c074e84e5d1449839710ef/ZeroDaysBroker/GhidraGPT"
        ],
        "homepage": "",
        "readme_summary": "GhidraGPT is a Ghidra plugin that leverages Large Language Models (LLMs) to enhance reverse engineering workflows. It provides AI-powered code analysis, function and variable renaming, vulnerability detection, and code explanation capabilities directly within the Ghidra environment.",
        "key_features": [
            "AI-powered code enhancement (function and variable renaming)",
            "Detailed code explanation",
            "Vulnerability detection and security analysis",
            "Multi-LLM support (OpenAI, Anthropic, Google Gemini, etc.)",
            "Flexible configuration",
            "Real-time AI response streaming",
            "Context menu integration",
            "Dedicated console for AI responses",
            "Automatic analysis integration",
            "Custom theming"
        ],
        "primary_use_case": "Automated code analysis and enhancement in reverse engineering workflows using AI.",
        "open_issues": 0,
        "cover_image_prompt": "A seasoned archaeologist in a high-tech lab, deciphering ancient code etched onto a stone tablet using a glowing AI lens. The lens highlights key code sections and suggests modern function names that appear on a holographic display. The archaeologist smiles as the AI translates complex algorithms into understandable concepts. Small UI elements showing Ghidra's interface are subtly projected onto the tablet. The scene is set in a dimly lit, futuristic lab with a focus on the archaeologist and the tablet. The image should be in a 3D isometric illustration style with detailed textures and a warm color scheme."
    },
    {
        "id": 939676953,
        "name": "CamXploit",
        "description": "Find, analyze, and check for exposed IP cameras with open ports, known vulnerabilities, and weak login credentials.",
        "url": "https://github.com/spyboy-productions/CamXploit",
        "language": "Python",
        "stars": 591,
        "forks": 97,
        "created_at": "2025-02-26T23:26:40Z",
        "updated_at": "2025-09-21T09:54:20Z",
        "topics": [
            "cctv",
            "cctv-cameras",
            "cctv-detection",
            "cctv-hacking",
            "cctv-surveillance",
            "dvr",
            "ip-camera",
            "ip-camera-feed",
            "nvr",
            "rtsp"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-07-19T09:40:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/55db28e00d8cdb27bc028fdb3ea1695193e5be3aa84dd91eb35317bfc8a04ffb/spyboy-productions/CamXploit"
        ],
        "homepage": "",
        "readme_summary": "CamXploit is a Python-based reconnaissance tool designed for security researchers and enthusiasts to identify exposed IP cameras. It automates the process of scanning for open ports, detecting login pages, testing default credentials, and identifying known vulnerabilities associated with IP cameras, DVRs, and NVRs.",
        "key_features": [
            "Scans common CCTV ports",
            "Detects exposed camera login pages",
            "Checks if the device is a camera stream",
            "Identifies camera brands & known vulnerabilities",
            "Tests for default credentials on login pages",
            "Provides manual search links (Shodan, Censys, Zoomeye, Google Dorking)",
            "Google Dorking suggestions for deeper recon",
            "Enhanced Camera Detection with detailed port analysis and brand identification",
            "Live Stream Detection for RTSP, RTMP, HTTP, and MMS protocols",
            "Comprehensive IP & Location Information with Google Maps/Earth links",
            "Multi-threaded Port Scanning for faster results",
            "Enhanced Error Handling and SSL support",
            "Detailed Camera Brand Detection (Hikvision, Dahua, Axis, Sony, Bosch, Samsung, Panasonic, Vivotek, CP Plus)",
            "ONVIF Protocol Support for standardized camera communication",
            "Smart Brute-force Protection with rate limiting",
            "Detailed Port Analysis showing server information and authentication types"
        ],
        "primary_use_case": "Identifying and assessing the security posture of IP cameras and related devices by detecting exposed services, default credentials, and known vulnerabilities.",
        "open_issues": 1,
        "cover_image_prompt": "A detective with a magnifying glass examining a network of interconnected security cameras. The detective is focused on one camera, revealing its internal vulnerabilities as glowing red lines. Other cameras in the network are either green (secure) or yellow (potentially vulnerable). A digital overlay shows port numbers and security protocols. The scene is set in a dimly lit server room with flickering monitors. The repository name 'CamXploit' is subtly displayed on one of the monitors. The image should be in a technical illustration style with labeled parts and a dark blue and green color scheme."
    },
    {
        "id": 925434317,
        "name": "kreuzberg",
        "description": "Document intelligence framework for Python - Extract text, metadata, and structured data   from PDFs, images, Office documents, and more. Built on Pandoc, PDFium, and Tesseract.",
        "url": "https://github.com/Goldziher/kreuzberg",
        "language": "Python",
        "stars": 2378,
        "forks": 98,
        "created_at": "2025-01-31T21:50:02Z",
        "updated_at": "2025-09-21T08:09:47Z",
        "topics": [
            "async",
            "document-intelligence",
            "mcp",
            "metadata-extraction",
            "ocr",
            "pandoc",
            "pdf-extraction",
            "pdfium",
            "python",
            "rag",
            "table-extraction",
            "tesseract",
            "text-extraction"
        ],
        "quality_score": 1.0,
        "contributors_count": 0,
        "last_commit_date": "2025-09-19T10:02:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cd395a5739f921baacb6ecdc97098038b845fcdfbef695dea008a0fd03cd08d3/Goldziher/kreuzberg"
        ],
        "homepage": "https://kreuzberg.dev/",
        "readme_summary": "Kreuzberg is a Python document intelligence framework designed to extract text, metadata, and structured information from various document formats like PDFs, images, and Office documents. It offers a unified API built on open-source technologies such as Pandoc, PDFium, and Tesseract, providing capabilities like text extraction, OCR, metadata extraction, and document classification.",
        "key_features": [
            "Text Extraction",
            "Image Extraction",
            "Metadata Extraction",
            "Format Support (21 document types)",
            "OCR Integration (Tesseract)",
            "Document Classification",
            "Synchronous and Asynchronous APIs",
            "Extensible Plugin Architecture"
        ],
        "primary_use_case": "Extracting text, metadata, and structured data from documents for applications like information retrieval, data analysis, and document processing workflows.",
        "open_issues": 5,
        "cover_image_prompt": "Imagine a skilled librarian meticulously organizing a chaotic collection of documents (PDFs, images, spreadsheets) into a structured digital library. The librarian uses a special magnifying glass that transforms the documents into neatly organized digital files, extracting text and key information. Glowing data streams flow from the magnifying glass into a central database, visualized as a crystalline structure. Small UI elements display metadata and extracted text snippets. The scene is set in a modern, brightly lit library with subtle digital enhancements. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 952018616,
        "name": "magnitude",
        "description": "Open-source, vision-first browser agent",
        "url": "https://github.com/magnitudedev/magnitude",
        "language": "TypeScript",
        "stars": 3650,
        "forks": 178,
        "created_at": "2025-03-20T15:50:12Z",
        "updated_at": "2025-09-21T09:31:07Z",
        "topics": [
            "ai",
            "automation",
            "browser",
            "framework",
            "javascipt",
            "playwright",
            "rpa",
            "selenium",
            "test",
            "typescript"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-09-01T18:30:31Z",
        "media_urls": [
            "https://opengraph.githubassets.com/833bcbdabdc77a842a06d0e3732fa6295a087b4ad4b257774321c36d83e92052/magnitudedev/magnitude"
        ],
        "homepage": "https://magnitude.run",
        "readme_summary": "Magnitude is an open-source browser agent that uses vision AI to automate tasks on the web, integrate between apps, extract data, and test web applications. It enables controlling the browser with natural language, navigating interfaces, interacting with elements, extracting structured data, and verifying actions with visual assertions.",
        "key_features": [
            "Vision-first architecture",
            "Natural language control",
            "Web automation",
            "Data extraction",
            "Visual assertions",
            "Test runner"
        ],
        "primary_use_case": "Automating web tasks using vision AI and natural language.",
        "open_issues": 18,
        "cover_image_prompt": "A futuristic robot with glowing eyes sits at a desk, effortlessly interacting with a web browser projected as a holographic display. The robot uses its hands to manipulate elements on the screen, extracting data and automating tasks. The browser displays various web applications and UI elements. Small code snippets and data visualizations float around the robot, subtly connecting the scene to software. The scene is set in a clean, modern office with soft, ambient lighting. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 998008388,
        "name": "prompt-forge",
        "description": "AI prompt engineering workbench for crafting, testing, and systematically evaluating prompts with powerful analysis tools.",
        "url": "https://github.com/insaaniManav/prompt-forge",
        "language": "Go",
        "stars": 692,
        "forks": 67,
        "created_at": "2025-06-07T17:09:42Z",
        "updated_at": "2025-09-21T08:54:32Z",
        "topics": [],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-07-16T19:09:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a1085ae615ebf2d5ca6acb564b86c58e682883934deb33ba6190607666d1a6eb/insaaniManav/prompt-forge"
        ],
        "homepage": null,
        "readme_summary": "PromptForge is an AI prompt engineering workbench designed to streamline the process of crafting, testing, and evaluating prompts. It offers features like AI-powered prompt generation, advanced analysis, systematic evaluation, and performance analytics, aiming to bring engineering discipline to prompt development.",
        "key_features": [
            "Smart Prompt Generation",
            "Advanced Prompt Analysis",
            "Systematic Evaluation",
            "Performance Analytics",
            "Version Control",
            "Multi-model comparison"
        ],
        "primary_use_case": "Crafting, testing, and systematically evaluating prompts for AI models.",
        "open_issues": 2,
        "cover_image_prompt": "A blacksmith in a futuristic forge, meticulously crafting prompts instead of metal. The blacksmith uses AI-powered tools to refine the prompts, which glow with digital energy. A holographic screen displays real-time analysis and performance metrics of each prompt. Test suites are automatically generated and visualized as blueprints. The forge is filled with organized prompt libraries and version control systems. The scene is set in a clean, modern workshop with warm, inviting lighting. Small UI elements subtly connect the metaphor to software. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]