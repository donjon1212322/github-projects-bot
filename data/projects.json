[
    {
        "id": 970198485,
        "name": "dashbrew",
        "description": "TUI dashboard builder that lets you visualize data from scripts and APIs right in your console",
        "url": "https://github.com/rasjonell/dashbrew",
        "language": "Go",
        "stars": 45,
        "forks": 2,
        "created_at": "2025-04-21T16:28:40Z",
        "updated_at": "2025-05-11T09:42:24Z",
        "topics": [
            "bubbletea",
            "cli",
            "dashboard",
            "golang",
            "monitoring",
            "terminal",
            "tui"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-05-08T17:56:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d36e60434528189c360c224af95a1ef830a532f8837d504b8a86c21f1270adbb/rasjonell/dashbrew"
        ],
        "homepage": "https://rasjonell.github.io/dashbrew/",
        "readme_summary": "Dashbrew is a terminal dashboard builder that allows users to visualize data from scripts and APIs directly in their console. It offers configurable layouts, supports multiple data sources (scripts, APIs, todo lists), and provides various component types like text, lists, charts, and tables. Built with Bubble Tea, it features navigation, auto-refresh, and mouse support for an interactive terminal experience.",
        "key_features": [
            "Configurable Layout",
            "Multiple Data Sources (script, api, todo)",
            "Component Types (Text, List, Todo, Chart, Table)",
            "Terminal UI (Bubble Tea)",
            "Navigation (arrow keys, hjkl, mouse)",
            "Auto-Refresh",
            "Mouse Support"
        ],
        "primary_use_case": "Visualize data from scripts and APIs in a terminal dashboard.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a command center where a conductor orchestrates a symphony of data streams. The conductor, standing before a console filled with glowing terminal windows, uses a baton to direct data flowing from various sources (APIs, scripts) into neatly organized dashboards displayed on large screens. Each screen visualizes the data as charts, lists, and tables. Subtle UI elements and code snippets float in the background, connecting the scene to software. The command center is bathed in cool, futuristic lighting. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 953274130,
        "name": "LegoGPT",
        "description": "Official repository for LegoGPT, the first approach for generating physically stable LEGO brick models from text prompts.",
        "url": "https://github.com/AvaLovelace1/LegoGPT",
        "language": "Python",
        "stars": 576,
        "forks": 26,
        "created_at": "2025-03-23T00:53:07Z",
        "updated_at": "2025-05-11T09:47:53Z",
        "topics": [],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-05-11T03:36:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3d51ec8eb436deaa03fb3318f716da51c0fa851dbb6f0517851b9657ebccc568/AvaLovelace1/LegoGPT"
        ],
        "homepage": "https://avalovelace1.github.io/LegoGPT/",
        "readme_summary": "LegoGPT is a novel approach for automatically generating physically stable LEGO brick models from text descriptions. It leverages a fine-tuned Llama-3.2-1B-Instruct model and incorporates stability analysis using Gurobi. The repository provides tools for interactive inference and rendering LEGO visualizations.",
        "key_features": [
            "Generates physically stable LEGO brick models from text prompts",
            "Fine-tuned from Llama-3.2-1B-Instruct",
            "Includes stability analysis using Gurobi",
            "Provides interactive inference session"
        ],
        "primary_use_case": "Generating LEGO brick model designs from text prompts.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled LEGO architect, surrounded by colorful LEGO bricks, receiving design instructions whispered by a digital muse (representing the text prompt). The architect meticulously assembles the bricks, guided by holographic projections of structural stability analysis, resulting in a whimsical, yet structurally sound LEGO creation. Subtle UI elements displaying code snippets and the LegoGPT logo are integrated into the scene. The setting is a bright, modern workshop. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, conveying the idea of text-to-LEGO generation."
    },
    {
        "id": 39315600,
        "name": "Iosevka",
        "description": "Versatile typeface for code, from code.",
        "url": "https://github.com/be5invis/Iosevka",
        "language": "JavaScript",
        "stars": 20205,
        "forks": 602,
        "created_at": "2015-07-18T23:10:59Z",
        "updated_at": "2025-05-11T09:40:20Z",
        "topics": [
            "font",
            "iosevka",
            "ligatures",
            "monospace-font",
            "opentype-features",
            "programming-font",
            "programming-ligatures",
            "typeface"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-26T20:33:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7b9f53283f14a7ab168accce8386c269dff547b43eb61b8fa1affc9e6ab07081/be5invis/Iosevka"
        ],
        "homepage": "http://be5invis.github.io/Iosevka",
        "readme_summary": "Iosevka is a versatile open-source typeface family designed for coding, terminal use, and technical writing. It offers both sans-serif and slab-serif styles, along with monospace and quasi-proportional options. The font supports ligatures and OpenType features and can be installed via various package managers.",
        "key_features": [
            "Open-source typeface",
            "Sans-serif and slab-serif variants",
            "Monospace and quasi-proportional options",
            "Designed for code writing, terminals, and technical documents",
            "Includes ligatures and OpenType features",
            "Installable via package managers (Homebrew, Arch Linux, Ubuntu, Void Linux, Fedora, FreeBSD, OpenBSD)"
        ],
        "primary_use_case": "Writing code, using in terminals, and preparing technical documents.",
        "open_issues": 98,
        "cover_image_prompt": "A master craftsman meticulously shaping letters from raw digital clay at a high-tech workbench. The craftsman uses specialized tools that subtly display code snippets and OpenType feature settings. Finished letters float upwards, combining to form words that radiate clarity and precision. The workbench is surrounded by glowing screens displaying various code editors and terminal windows using the Iosevka font. The scene is set in a bright, modern studio with a focus on ergonomic design. The image should be in a 3D isometric illustration style with clean lines, soft lighting, and a color scheme emphasizing blues and grays."
    },
    {
        "id": 4578898,
        "name": "habitica",
        "description": "A habit tracker app which treats your goals like a Role Playing Game.",
        "url": "https://github.com/HabitRPG/habitica",
        "language": "JavaScript",
        "stars": 12823,
        "forks": 4217,
        "created_at": "2012-06-06T22:49:48Z",
        "updated_at": "2025-05-11T08:55:03Z",
        "topics": [
            "css",
            "express",
            "habitica",
            "hacktoberfest",
            "html",
            "javascript",
            "mongodb",
            "node",
            "nodejs",
            "vue",
            "vuejs"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-07T17:03:54Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a76ed1f655dfe3928279e6222714328c571b617408c1ca46ba6e5a9e029377bd/HabitRPG/habitica"
        ],
        "homepage": "https://habitica.com",
        "readme_summary": "Habitica is an open-source habit-building application that gamifies your life. It treats your goals like a role-playing game, allowing you to level up as you succeed, lose health points when you fail, and earn gold to buy rewards. The application encourages users to build positive habits and stay motivated by turning everyday tasks into an engaging and rewarding experience.",
        "key_features": [
            "Habit tracking",
            "Gamification of tasks",
            "Leveling up system",
            "Rewards for success",
            "Penalty for failure"
        ],
        "primary_use_case": "Habitica is primarily used for building positive habits and achieving goals by gamifying the process, turning everyday tasks into a role-playing game.",
        "open_issues": 170,
        "cover_image_prompt": "A determined adventurer, clad in pixelated armor, battling procrastination, a shadowy monster looming over a desk piled high with unfinished tasks. The adventurer wields a glowing sword inscribed with \"Habitica,\" striking down the monster with each completed task, represented by shimmering orbs of light. A small UI overlay shows experience points increasing and gold being earned. The scene is set in a cozy, stylized bedroom with motivational posters and subtle digital elements. The image should be in a vibrant, 3D isometric illustration style with clean lines and clear details."
    },
    {
        "id": 12973222,
        "name": "depcheck",
        "description": "Check your npm module for unused dependencies",
        "url": "https://github.com/depcheck/depcheck",
        "language": "JavaScript",
        "stars": 4889,
        "forks": 223,
        "created_at": "2013-09-20T12:47:55Z",
        "updated_at": "2025-05-11T06:36:52Z",
        "topics": [],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-02-27T08:33:16Z",
        "media_urls": [
            "https://opengraph.githubassets.com/bbae1fd7f9d895a57ece31563ba18add0e8b7be53cf72b2c2497608ff73fa7bb/depcheck/depcheck"
        ],
        "homepage": "",
        "readme_summary": "Depcheck is a tool for analyzing dependencies in JavaScript projects. It identifies unused and missing dependencies, supporting various JavaScript syntaxes and special scenarios like Babel and ESLint configurations. While no longer actively maintained, it helps developers keep their `package.json` clean and efficient.",
        "key_features": [
            "Identifies unused dependencies in JavaScript projects",
            "Detects missing dependencies",
            "Supports various JavaScript syntaxes (ES5, ES6, ES7, JSX)",
            "Supports CoffeeScript, TypeScript, SASS, SCSS, and Vue.js",
            "Recognizes dependencies used in special scenarios (e.g., Babel, ESLint, Jest)"
        ],
        "primary_use_case": "Analyzing JavaScript projects to identify and remove unused dependencies, and to find missing dependencies.",
        "open_issues": 94,
        "cover_image_prompt": "A meticulous librarian, surrounded by towering shelves of books (representing project dependencies), uses a magnifying glass to examine each book's contents. Unused books are gently removed and placed in a 'discard' pile, while missing books are added to a 'needed' shelf. A small screen displays a simplified dependency graph, subtly connecting the scene to software. The library is bathed in soft, focused light, creating a sense of order and precision. The composition is clean and uncluttered, with a warm color scheme. The image should be in a flat design style with clear iconography and labeled parts."
    },
    {
        "id": 10855394,
        "name": "clockwork",
        "description": "Clockwork - php dev tools in your browser - server-side component",
        "url": "https://github.com/itsgoingd/clockwork",
        "language": "PHP",
        "stars": 5820,
        "forks": 322,
        "created_at": "2013-06-21T23:57:05Z",
        "updated_at": "2025-05-11T06:35:54Z",
        "topics": [
            "clockwork",
            "debugging",
            "devtools",
            "laravel",
            "logging",
            "php",
            "profiling"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-04-20T14:53:41Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c8c6a879baab49018082c5c6908f889c328bff2caf610f38b4d1d965feca6275/itsgoingd/clockwork"
        ],
        "homepage": "https://underground.works/clockwork",
        "readme_summary": "Clockwork is a PHP development tool that provides insights into application runtime directly in the browser. It collects and stores data about requests, performance, logs, database queries, and other relevant information. Clockwork supports various data collection modes and allows developers to configure features and options for detailed debugging and profiling.",
        "key_features": [
            "Collects and stores data about PHP application runtime.",
            "Provides insights into request data, performance metrics, log entries, database queries, and more.",
            "Supports HTTP requests, commands, queue jobs, and tests.",
            "Offers on-demand, errors-only, and slow-only data collection modes.",
            "Allows configuration of features and advanced options like slow query threshold."
        ],
        "primary_use_case": "PHP development tool for debugging and profiling applications in the browser.",
        "open_issues": 26,
        "cover_image_prompt": "A skilled watchmaker meticulously examining the inner workings of a giant clock with gears representing different aspects of a PHP application (database, logs, requests, etc.). The watchmaker uses magnifying glasses that display real-time performance metrics and debugging information on their lenses. Small screens around the clock show code snippets and server logs. The scene is set in a brightly lit workshop with a clean, organized aesthetic. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, subtly incorporating the Clockwork logo."
    },
    {
        "id": 343533419,
        "name": "lipgloss",
        "description": "Style definitions for nice terminal layouts 👄",
        "url": "https://github.com/charmbracelet/lipgloss",
        "language": "Go",
        "stars": 8928,
        "forks": 247,
        "created_at": "2021-03-01T19:31:36Z",
        "updated_at": "2025-05-11T03:23:58Z",
        "topics": [
            "cli",
            "go",
            "golang",
            "hacktoberfest",
            "layout",
            "style",
            "tui"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-05T10:00:49Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/343533419/0bc92ca5-0592-45c4-a93d-a75f812c5b9d"
        ],
        "homepage": "",
        "readme_summary": "Lip Gloss is a Go library for styling terminal layouts with a declarative approach. It supports various color profiles, inline formatting, and block-level formatting, making it easy to create visually appealing terminal interfaces. The library is designed for use in TUIs and CLIs.",
        "key_features": [
            "Declarative styling for terminal output",
            "Support for ANSI 16, ANSI 256, and True Color profiles",
            "Adaptive color schemes for light and dark terminals",
            "Inline text formatting (bold, italic, underline, etc.)",
            "Block-level formatting (padding, margins)"
        ],
        "primary_use_case": "Styling terminal layouts and applications.",
        "open_issues": 51,
        "cover_image_prompt": "Imagine a skilled tailor meticulously crafting vibrant, stylish outfits for terminal windows. The tailor uses threads of color, padding, and margin to perfectly fit each window, enhancing its appearance. A digital loom in the background weaves ANSI codes into the fabric. Small screens display code snippets and style definitions. The scene is set in a bright, modern atelier with natural lighting. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 321677097,
        "name": "codeapp",
        "description": "Building a full-fledged code editor for iPad",
        "url": "https://github.com/thebaselab/codeapp",
        "language": "Swift",
        "stars": 3216,
        "forks": 259,
        "created_at": "2020-12-15T13:31:44Z",
        "updated_at": "2025-05-11T09:29:25Z",
        "topics": [
            "ios",
            "monaco-editor",
            "swiftui"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-03-11T14:50:16Z",
        "media_urls": [
            "https://opengraph.githubassets.com/28ce104f51872bc4cb2a72718eeefbc6a6df2561c3beb10a21058d15d69c1d94/thebaselab/codeapp"
        ],
        "homepage": "https://code.thebaselab.com",
        "readme_summary": "The codeapp repository contains the source code for a code editor designed for iPad, aiming to bring a desktop-like editing experience to the platform. It incorporates features like version control, an embedded terminal, local web development environments, and support for multiple languages including Python, C/C++, and Java.",
        "key_features": [
            "Version Control (Git)",
            "Embedded Terminal (70+ commands)",
            "Local web development environment (Node + PHP)",
            "Built-in Python runtime",
            "C/C++ Runtime with WebAssembly",
            "Local Java (OpenJDK)",
            "SSH Support",
            "LSP support (Python & Java)"
        ],
        "primary_use_case": "Building a full-fledged code editor for iPad.",
        "open_issues": 525,
        "cover_image_prompt": "An iPad transforms into a bustling workshop where miniature developers collaborate on lines of code. The iPad's screen displays a sophisticated code editor interface, while tiny figures work on different aspects: version control, terminal commands, web development, and language runtimes. Cables connect the iPad to various devices, symbolizing SSH support and external connections. The scene is set in a brightly lit, futuristic studio with floating data particles and subtle UI elements. The image should be in 3D isometric illustration style with vibrant colors and clean details."
    },
    {
        "id": 491235501,
        "name": "auto-animate",
        "description": "A zero-config, drop-in animation utility that adds smooth transitions to your web app. You can use it with React, Vue, or any other JavaScript application.",
        "url": "https://github.com/formkit/auto-animate",
        "language": "TypeScript",
        "stars": 13349,
        "forks": 231,
        "created_at": "2022-05-11T18:50:01Z",
        "updated_at": "2025-05-11T09:32:21Z",
        "topics": [
            "animation",
            "javascript",
            "react",
            "ui",
            "vue"
        ],
        "quality_score": 0.7000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2024-08-15T15:53:40Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/491235501/1409bd0d-1d33-445a-9cf1-d59e951edb07"
        ],
        "homepage": "https://auto-animate.formkit.com",
        "readme_summary": "AutoAnimate is a zero-configuration animation utility that simplifies the process of adding smooth transitions to web applications. It can be easily integrated into React, Vue, or any JavaScript project, enhancing the user interface with minimal code.",
        "key_features": [
            "Zero-config",
            "Drop-in animation utility",
            "Smooth transitions",
            "React support",
            "Vue support",
            "JavaScript application support"
        ],
        "primary_use_case": "Adding smooth animations and transitions to web applications with minimal configuration.",
        "open_issues": 49,
        "cover_image_prompt": "A skilled tailor effortlessly weaving animations into a plain webpage using a magical loom. The loom's threads are strands of code, and as the tailor weaves, the webpage comes alive with smooth transitions and delightful motion. Small UI elements float around the loom, showcasing the AutoAnimate library in action. The scene is set in a bright, airy workshop filled with spools of colorful code. The composition is clean and focused, with a pastel color scheme. The image should be in a flat design style with clear iconography and vibrant colors."
    }
]