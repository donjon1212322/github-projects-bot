[
    {
        "id": 1061931314,
        "name": "flycut-caption",
        "description": "A complete video subtitle editing React component with AI-powered speech recognition and visual editing capabilities.",
        "url": "https://github.com/x007xyz/flycut-caption",
        "language": "TypeScript",
        "stars": 588,
        "forks": 59,
        "created_at": "2025-09-22T15:20:20Z",
        "updated_at": "2025-10-15T09:20:23Z",
        "topics": [],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-10-15T08:59:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ebbba70f5a028fe5ba50c9b0bc4f40362c42b1c221e5111f512ddcffe936871a/x007xyz/flycut-caption"
        ],
        "homepage": "https://caption.flycut.co",
        "readme_summary": "FlyCut Caption is a React component for video subtitle editing, leveraging AI-powered speech recognition. It offers features like visual subtitle editing, real-time video preview, multi-format export, and subtitle style customization, making it a comprehensive tool for creating and editing video subtitles.",
        "key_features": [
            "Intelligent Speech Recognition",
            "Visual Subtitle Editing",
            "Real-time Video Preview",
            "Multi-format Export",
            "Subtitle Style Customization",
            "Internationalization Support",
            "Local AI Processing",
            "Web Workers",
            "Responsive Design",
            "Component Architecture"
        ],
        "primary_use_case": "Creating and editing video subtitles with AI-powered speech recognition and visual editing tools.",
        "open_issues": 4,
        "cover_image_prompt": "A skilled sculptor meticulously chiseling subtitles onto a film reel, transforming raw audio waves into perfectly formed text. The sculptor uses a set of advanced tools, including a microphone that glows with AI energy and a digital display showing waveforms. The scene is set in a bright, modern studio with subtle tech elements like code snippets projected onto the walls and the repository name subtly etched into the sculptor's workbench. The composition is clean and focused with a vibrant color scheme. The image should be in a 3D isometric illustration style with rich details."
    },
    {
        "id": 1065169827,
        "name": "UP2You",
        "description": null,
        "url": "https://github.com/zcai0612/UP2You",
        "language": "Python",
        "stars": 87,
        "forks": 2,
        "created_at": "2025-09-27T07:26:35Z",
        "updated_at": "2025-10-15T07:13:23Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-10-13T10:19:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d8aad0e1e95b13266fbe85a8947b2cfa84198c2182519fa8a1268e8ba8da02fb/zcai0612/UP2You"
        ],
        "homepage": null,
        "readme_summary": "The UP2You repository provides a method for fast reconstruction of a 3D human model from unconstrained photo collections. It offers a tuning-free pipeline for generating personalized 3D avatars, leveraging pre-trained models and publicly available datasets.",
        "key_features": [
            "Fast 3D human reconstruction",
            "Tuning-free pipeline",
            "Uses unconstrained photo collections as input",
            "Leverages pre-trained models",
            "Based on MV-Adapter, PuzzleAvatar, VGGT, PSHuman, and SOAP repositories and THuman2.1, CustomHumans, 2k2k, Human4DiT, 4D-Dress, and PuzzleIOI datasets"
        ],
        "primary_use_case": "Generating personalized 3D human avatars from a collection of photos.",
        "open_issues": 2,
        "cover_image_prompt": "A skilled sculptor rapidly chiseling a realistic 3D statue of a person from a chaotic pile of photographs. The sculptor's hands glow with digital energy as they extract form from the unstructured images. Small holographic screens display snippets of code and 3D mesh data around the statue. The scene is set in a bright, modern studio with soft, diffused lighting. The statue is highly detailed and lifelike. The composition is focused and clean, with a clear view of the sculptor, the photos, and the emerging statue. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 1212922,
        "name": "theHarvester",
        "description": "E-mails, subdomains and names Harvester - OSINT ",
        "url": "https://github.com/laramies/theHarvester",
        "language": "Python",
        "stars": 14715,
        "forks": 2325,
        "created_at": "2011-01-01T20:40:15Z",
        "updated_at": "2025-10-15T08:44:03Z",
        "topics": [
            "blueteam",
            "discovery",
            "emails",
            "information-gathering",
            "osint",
            "python",
            "recon",
            "reconnaissance",
            "redteam",
            "subdomain-enumeration"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-10-12T00:17:30Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1212922/0933ae00-d41e-11e9-85da-8c22b674c731"
        ],
        "homepage": "http://www.edge-security.com/",
        "readme_summary": "theHarvester is an OSINT tool used during the reconnaissance phase of penetration testing and red team assessments. It gathers information like emails, subdomains, IPs, and URLs from various public resources to map a domain's external threat landscape.",
        "key_features": [
            "Email harvesting",
            "Subdomain enumeration",
            "IP address discovery",
            "URL extraction",
            "OSINT gathering from multiple public resources",
            "Passive module support for various search engines and data sources"
        ],
        "primary_use_case": "Reconnaissance and information gathering for red team assessments and penetration testing.",
        "open_issues": 9,
        "cover_image_prompt": "A detective meticulously piecing together a digital jigsaw puzzle representing a target domain's online presence. The detective uses various tools (magnifying glass, network scanner) to uncover hidden pieces (emails, subdomains, IPs) scattered across a digital landscape. Small UI elements showing search engine results and data visualizations subtly connect the metaphor to software. The scene is set in a dimly lit, high-tech office with multiple screens displaying real-time data feeds. The composition is focused and clean, with a blue and green color scheme. The image should be in a 3D isometric illustration style with rich details and a sense of intrigue."
    },
    {
        "id": 850821713,
        "name": "mediabunny",
        "description": "Pure TypeScript media toolkit for reading, writing, and converting video and audio files, directly in the browser.",
        "url": "https://github.com/Vanilagy/mediabunny",
        "language": "TypeScript",
        "stars": 3955,
        "forks": 130,
        "created_at": "2024-09-01T21:45:30Z",
        "updated_at": "2025-10-15T09:26:53Z",
        "topics": [
            "audio",
            "decoding",
            "demuxing",
            "encoding",
            "library",
            "media",
            "mp3",
            "mp4",
            "muxing",
            "npm",
            "ogg",
            "typescript",
            "video",
            "wav",
            "webcodecs",
            "webm"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-02T14:00:08Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ae150bf5eb239084ee4f1a8bd82d3fb2a9238a17816a474733af395d2bbf5e43/Vanilagy/mediabunny"
        ],
        "homepage": "https://mediabunny.dev/",
        "readme_summary": "Mediabunny is a JavaScript library written in TypeScript for reading, writing, and converting media files directly in the browser. It supports a wide range of formats and codecs, aiming to provide high-performance media operations with zero dependencies and tree-shakable bundling.",
        "key_features": [
            "Wide format support (MP4, MOV, WebM, MKV, WAVE, MP3, Ogg, ADTS, FLAC)",
            "Built-in encoding & decoding (25+ codecs, WebCodecs API)",
            "High precision (microsecond-accurate)",
            "Conversion API (transmuxing, transcoding, resizing, etc.)",
            "Streaming I/O",
            "Tree-shakable",
            "Zero dependencies",
            "Cross-platform (browsers and Node.js)"
        ],
        "primary_use_case": "Reading, writing, and converting media files in the browser.",
        "open_issues": 24,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling a complex clockwork mechanism made of video reels, audio waveforms, and codec symbols. The clockmaker uses tiny tools to connect different media formats, transforming raw footage and audio into perfectly synchronized streams. Small UI elements display encoding parameters and file formats. The scene is set in a bright, clean workshop with a large window overlooking a digital landscape. The composition is focused and detailed, with a warm color scheme. The image should be in a detailed 3D isometric illustration style with a focus on clarity and precision."
    }
]