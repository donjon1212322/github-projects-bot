[
    {
        "id": 998067126,
        "name": "wicketkeeper",
        "description": "A privacy-friendly, self-hostable Proof-of-Work (PoW) CAPTCHA",
        "url": "https://github.com/a-ve/wicketkeeper",
        "language": "Go",
        "stars": 59,
        "forks": 1,
        "created_at": "2025-06-07T19:47:25Z",
        "updated_at": "2025-06-11T08:20:46Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-06-08T07:01:49Z",
        "media_urls": [
            "https://opengraph.githubassets.com/20e7d3a87a218690c552dc6288f43067763c259e32188133de89f947e902cc59/a-ve/wicketkeeper"
        ],
        "homepage": null,
        "readme_summary": "Wicketkeeper is a privacy-focused, self-hostable CAPTCHA system that uses Proof-of-Work to protect web forms from bots. It replaces traditional visual puzzles with a computational challenge, making it easy for users but costly for bots. The system includes a Go backend, a JavaScript client widget, and a full-stack demo application, offering a complete solution for bot protection.",
        "key_features": [
            "Proof-of-Work Engine",
            "Stateless & Secure (JWT)",
            "Replay Attack Prevention (Redis Bloom filters)",
            "Embeddable Client Widget",
            "Configurable",
            "Containerized (Docker)",
            "Full-Stack Demo"
        ],
        "primary_use_case": "Protecting web forms from bots using a privacy-friendly Proof-of-Work CAPTCHA system.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a diligent gatekeeper standing before a digital fortress, carefully examining each incoming request with a magical magnifying glass. The gatekeeper represents Wicketkeeper, and the requests are web form submissions. The magnifying glass reveals hidden malicious bots attempting to bypass the security. Approved, legitimate requests are granted access, symbolized by a glowing green light, while bot attempts are blocked by a red shield. The fortress walls are subtly adorned with the Wicketkeeper logo. This scene is rendered in a clean, 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 990474618,
        "name": "rustoku",
        "description": "Lightning-fast Sudoku âš¡",
        "url": "https://github.com/huangsam/rustoku",
        "language": "Rust",
        "stars": 17,
        "forks": 3,
        "created_at": "2025-05-26T07:07:24Z",
        "updated_at": "2025-06-11T05:32:09Z",
        "topics": [
            "bitflags",
            "cargo",
            "clap",
            "crates-io",
            "criterion",
            "learn-to-code",
            "puzzle",
            "rust",
            "rust-rand",
            "sudoku",
            "thiserror"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-11T05:31:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8258e652261fb0e1b310cf047c435409a2468ef098ad2d37f4e76534e19d976e/huangsam/rustoku"
        ],
        "homepage": "https://crates.io/crates/rustoku-cli",
        "readme_summary": "Rustoku is a Rust library and CLI tool for solving and generating Sudoku puzzles. It offers fast solving speeds, configurable puzzle generation with guaranteed unique solutions, and employs human-like solving techniques. The tool is available as both a library and a command-line interface.",
        "key_features": [
            "Fast Sudoku solving with clear solve paths",
            "Unique and configurable puzzle generation",
            "Human-like puzzle solving techniques"
        ],
        "primary_use_case": "Solving and generating Sudoku puzzles",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously assembling a giant, intricate clock made of Sudoku grids. The clockmaker, wearing a futuristic visor displaying code snippets, carefully places each grid, ensuring perfect alignment and balance. Some grids are blank, representing puzzles to be solved, while others are complete, showcasing solutions. Digital particles flow around the clock, visualizing the speed and efficiency of the solving process. The scene is set in a brightly lit workshop with a clean, focused composition. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, subtly incorporating the 'Rustoku' name on the clock's face."
    },
    {
        "id": 294836885,
        "name": "ali",
        "description": "Generate HTTP load and plot the results in real-time",
        "url": "https://github.com/nakabonne/ali",
        "language": "Go",
        "stars": 3872,
        "forks": 150,
        "created_at": "2020-09-12T00:11:21Z",
        "updated_at": "2025-06-11T10:10:39Z",
        "topics": [
            "benchmarking",
            "go",
            "load-testing",
            "monitoring",
            "testing-tools",
            "tui",
            "visualization"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2023-10-21T07:19:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/90a9008b8bfcf43016a4a3b877b50586c29242c93b8ad1b16bce43c1e7ea6f1e/nakabonne/ali"
        ],
        "homepage": "",
        "readme_summary": "The `ali` repository provides a command-line tool for generating HTTP load against a target URL. It features a terminal-based UI that displays real-time metrics, enabling users to analyze performance and identify bottlenecks during load testing. The tool supports various configuration options, including request rate, duration, custom headers, and TLS settings.",
        "key_features": [
            "Real-time analysis of HTTP load testing",
            "Terminal-based UI for plotting metrics",
            "Configurable request rate and duration",
            "Support for custom headers and request bodies",
            "TLS verification options",
            "Custom DNS resolvers"
        ],
        "primary_use_case": "Generating HTTP load and plotting the results in real-time for performance analysis and benchmarking.",
        "open_issues": 25,
        "cover_image_prompt": "Imagine a chef meticulously testing the heat of multiple stovetop burners simultaneously, each representing a different server endpoint. The chef, wearing a futuristic headset displaying real-time performance metrics, uses a specialized tool to apply varying levels of heat (simulating load) to each burner. Visual indicators, like rising steam and glowing elements, represent the server response times and error rates. A subtle UI overlay displays the repository name, 'ali', integrated into the chef's headset. The scene is set in a clean, modern kitchen with bright, focused lighting. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 856477727,
        "name": "Practical_BashScripts",
        "description": "This repository contains a collection of useful Bash scripts for Linux systems. Each script serves a specific purpose, ranging from system maintenance to monitoring and automation tasks. Below is a description of each script along with instructions on how to use them.",
        "url": "https://github.com/Nikoo-Asadnejad/Practical_BashScripts",
        "language": "Shell",
        "stars": 24,
        "forks": 2,
        "created_at": "2024-09-12T16:33:43Z",
        "updated_at": "2025-06-11T08:32:37Z",
        "topics": [
            "backup-script",
            "backup-scripts",
            "bash",
            "bash-script",
            "bash-scripting",
            "disk-usage",
            "disk-usage-analyzer",
            "disk-usage-bot",
            "linux",
            "linux-shell",
            "service-monitoring",
            "shell",
            "shell-script",
            "shell-scripting",
            "shell-scripts",
            "status-checker",
            "statuschecks",
            "system-updater"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2024-12-09T18:32:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/96aadb8e1b89f0d9621c3ae8f2c52b3a22776cf1f2822ef85e54a6f1056aae5b/Nikoo-Asadnejad/Practical_BashScripts"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a collection of Bash scripts designed to automate common Linux system administration tasks. These scripts cover areas such as creating backups, monitoring disk usage, updating the system, checking service status, and logging server uptime. The repository also provides instructions on how to schedule these scripts using cron jobs for automated execution.",
        "key_features": [
            "Backup creation",
            "Disk usage monitoring and alerting",
            "System update and cleanup",
            "Server uptime monitoring",
            "Service status checking and restarting",
            "Cron job scheduling"
        ],
        "primary_use_case": "Automation of system maintenance, monitoring, and other administrative tasks on Linux systems using Bash scripts.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled mechanic in a well-organized workshop, maintaining a complex network of pipes and valves representing a Linux system. The mechanic uses various tools (Bash scripts) to clean (remove unnecessary files), tighten (update system), and monitor (check service status) different parts of the system. A large screen displays real-time data and alerts, while blueprints of the system hang on the wall. The scene is brightly lit with a clean, technical illustration style, incorporating subtle digital elements like glowing data streams and UI icons. The repository name, 'Practical_BashScripts,' is subtly displayed on the mechanic's toolbox."
    },
    {
        "id": 134513732,
        "name": "automation-bash-scripts",
        "description": "A collection of BASH-Python scripts for different scenarios using loops, field processors and clever commands.",
        "url": "https://github.com/grv231/automation-bash-scripts",
        "language": "Shell",
        "stars": 22,
        "forks": 6,
        "created_at": "2018-05-23T04:32:39Z",
        "updated_at": "2025-06-11T08:32:58Z",
        "topics": [
            "automation-script",
            "bash",
            "bash-script"
        ],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2018-06-25T19:46:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/840660a72f2d9b6a5b0f3a339ed7b8ce5846f60ef12fba1247008a8e07f6c1df/grv231/automation-bash-scripts"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a collection of BASH and Python scripts designed to automate various tasks. It includes scripts for log parsing, connectivity testing, and user creation, aiming to streamline processes and improve efficiency. The scripts leverage loops, field processors, and other command-line tools to achieve automation goals.",
        "key_features": [
            "BASH scripting",
            "Python scripting",
            "Log parsing",
            "Connectivity testing",
            "User creation automation"
        ],
        "primary_use_case": "Automating tasks and solving specific scenarios using BASH and Python scripts.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously assembling intricate gears, each representing a different script, to create a smoothly running automated machine. The machine efficiently processes tasks, symbolized by glowing data streams flowing through its mechanisms. Small screens display BASH and Python code snippets, subtly connecting the clockwork to software automation. The scene is set in a brightly lit, organized workshop with a focus on precision and efficiency. The image should be in a 3D isometric illustration style with clean lines and vibrant colors, emphasizing the interconnectedness of the scripts."
    },
    {
        "id": 574523116,
        "name": "awesome-chatgpt-prompts",
        "description": "This repo includes ChatGPT prompt curation to use ChatGPT and other LLM tools better.",
        "url": "https://github.com/f/awesome-chatgpt-prompts",
        "language": "JavaScript",
        "stars": 128538,
        "forks": 17039,
        "created_at": "2022-12-05T13:54:13Z",
        "updated_at": "2025-06-11T10:08:55Z",
        "topics": [
            "bots",
            "chatbot",
            "chatgpt",
            "chatgpt-api",
            "language"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-10T18:49:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/30fd0522b9cc9126a63ed60ca84940c1d5e3742e6b8ce814d01f7b608b1841ea/f/awesome-chatgpt-prompts"
        ],
        "homepage": "https://prompts.chat",
        "readme_summary": "This repository offers a collection of curated ChatGPT prompts designed to improve interactions with ChatGPT and other large language models. It encourages community contributions and aims to provide users with effective prompts for various AI chat models, fostering exploration and creativity in AI interactions.",
        "key_features": [
            "ChatGPT prompt curation",
            "Collection of prompts for various AI models",
            "Community contributions of new prompts"
        ],
        "primary_use_case": "To provide a curated collection of prompts that enhance the use of ChatGPT and other LLM tools.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled librarian meticulously curating a vast collection of glowing orbs, each representing a ChatGPT prompt. The librarian carefully selects and organizes the orbs, placing them on illuminated shelves within a grand, futuristic library. Subtle UI elements float around the librarian, displaying snippets of code and chat interfaces. The repository name, 'Awesome ChatGPT Prompts,' is subtly etched onto a nearby bookshelf. The scene is bathed in soft, ethereal light, creating a sense of knowledge and discovery. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]