[
    {
        "id": 836930065,
        "name": "opsmate",
        "description": "AI SRE Assistant",
        "url": "https://github.com/jingkaihe/opsmate",
        "language": "Python",
        "stars": 33,
        "forks": 2,
        "created_at": "2024-08-01T21:23:42Z",
        "updated_at": "2025-04-16T09:26:28Z",
        "topics": [],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-04-14T10:16:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8ff67d0262844d4fe3a73482d148a37b32e7a4691866affb75bb1c7040d41bfc/jingkaihe/opsmate"
        ],
        "homepage": "https://docs.tryopsmate.ai/",
        "readme_summary": "Opsmate is an AI SRE assistant designed to streamline production engineering tasks. It offers a natural language interface, AI-powered reasoning, and supports multiple LLMs and runtimes. Opsmate integrates with modern observability tools and provides a web UI and API for easy access and extensibility.",
        "key_features": [
            "Natural Language Interface",
            "Advanced Reasoning",
            "Multiple LLM Support",
            "Multiple Runtimes",
            "Modern Observability Tooling",
            "Knowledge Management",
            "Web UI & API",
            "Plugin System"
        ],
        "primary_use_case": "Opsmate is primarily used as an AI-powered SRE assistant to manage production operations, troubleshoot issues, and automate tasks using natural language.",
        "open_issues": 18,
        "cover_image_prompt": "Imagine a skilled SRE (Site Reliability Engineer) as a conductor of a complex orchestra, where each instrument represents a different part of a modern infrastructure. The conductor uses a glowing baton that translates natural language commands into precise actions, ensuring smooth performance and resolving any issues with AI-powered reasoning. Around the orchestra, subtle holographic displays show real-time metrics and logs, while the conductor seamlessly integrates domain-specific knowledge. The scene is set in a futuristic control room with a clean, focused composition and a blue and purple color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 873353086,
        "name": "Osprey",
        "description": "Browser extension that protects you from malicious websites.",
        "url": "https://github.com/Foulest/Osprey",
        "language": "JavaScript",
        "stars": 49,
        "forks": 1,
        "created_at": "2024-10-16T02:53:35Z",
        "updated_at": "2025-04-16T09:51:22Z",
        "topics": [],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-04-16T02:24:16Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/873353086/b01462ba-8688-42f3-8adb-3638b753f89e"
        ],
        "homepage": null,
        "readme_summary": "Osprey is a browser extension designed to safeguard users from malicious websites. It achieves this by verifying URLs against several threat intelligence services like Microsoft SmartScreen and Norton SafeWeb. Osprey also enhances privacy by stripping tracking parameters from URLs before sending them to these services, and it caches results to minimize network requests.",
        "key_features": [
            "Protection from malicious websites",
            "URL stripping of tracking parameters",
            "Integration with multiple threat intelligence services",
            "Configurable protection options",
            "Caching of safe URLs"
        ],
        "primary_use_case": "Protecting users from malicious websites by checking URLs against multiple threat intelligence services and blocking access to dangerous sites.",
        "open_issues": 1,
        "cover_image_prompt": "A knight in shining armor, representing Osprey, standing guard before a digital portal. The knight holds a glowing shield that deflects shadowy figures representing malicious websites. Behind the knight, a clean, modern city skyline symbolizes safe browsing. Small UI elements float around the knight, displaying real-time threat detection. The repository name, 'Osprey,' is subtly etched onto the knight's shield. The scene is set in a bright, futuristic environment with a blue and green color scheme. The image should be in a 3D isometric illustration style with crisp details and vibrant colors."
    },
    {
        "id": 946708780,
        "name": "openai-cua-sample-app",
        "description": "Learn how to use CUA (our Computer Using Agent) via the API on multiple computer environments.",
        "url": "https://github.com/openai/openai-cua-sample-app",
        "language": "Python",
        "stars": 740,
        "forks": 163,
        "created_at": "2025-03-11T14:57:29Z",
        "updated_at": "2025-04-16T08:33:03Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-03-18T11:14:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d8db193013ebba5b146322c1cfff595ecb2763f60baca1f6941b132ff5744442/openai/openai-cua-sample-app"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a sample application for using a Computer Using Agent (CUA) with the OpenAI API. It includes abstractions for different computer environments and agent management, along with a CLI for easy interaction and examples for various use cases. The primary goal is to enable programmatic control of computer interfaces through AI.",
        "key_features": [
            "Computer abstraction for different environments (local, Docker, Browserbase, Scrapybara)",
            "Agent abstraction for managing the CUA loop",
            "CLI for easy interaction with CUA",
            "Examples for different use cases"
        ],
        "primary_use_case": "Interacting with computer environments via the OpenAI API using a Computer Using Agent (CUA).",
        "open_issues": 12,
        "cover_image_prompt": "Imagine a skilled puppeteer controlling a computer screen with strings, guiding a digital hand to click and type. The puppeteer represents the CUA, observing the screen and directing actions. The computer screen displays various applications and websites, showcasing the CUA's ability to interact with different environments. Subtle code snippets and UI elements float around the scene, connecting the metaphor to software. The scene is set in a brightly lit, modern workspace. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    },
    {
        "id": 789480255,
        "name": "llm-scraper",
        "description": "Turn any webpage into structured data using LLMs",
        "url": "https://github.com/mishushakov/llm-scraper",
        "language": "TypeScript",
        "stars": 4742,
        "forks": 275,
        "created_at": "2024-04-20T17:06:57Z",
        "updated_at": "2025-04-16T07:37:33Z",
        "topics": [
            "ai",
            "artificial-intelligence",
            "browser",
            "browser-automation",
            "gpt",
            "gpt-4",
            "langchain",
            "llama",
            "llm",
            "openai",
            "playwright",
            "puppeteer",
            "scraper"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2024-07-13T14:24:01Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f07d7e15ca706da76bd33e2c888fdc775a8d65b560328c3dfc2256fae3231aa9/mishushakov/llm-scraper"
        ],
        "homepage": "",
        "readme_summary": "LLM Scraper is a TypeScript library designed to extract structured data from any webpage using LLMs. It supports various LLM providers, schema definitions with Zod, and offers features like code generation and streaming objects. The library leverages Playwright for browser automation and provides multiple formatting modes for different content types.",
        "key_features": [
            "Supports Local (Ollama, GGUF), OpenAI, Vercel AI SDK Providers",
            "Schemas defined with Zod",
            "Full type-safety with TypeScript",
            "Based on Playwright framework",
            "Streaming objects",
            "Code-generation",
            "Supports html, markdown, text, and image formatting modes"
        ],
        "primary_use_case": "Extracting structured data from web pages using LLMs.",
        "open_issues": 11,
        "cover_image_prompt": "Imagine a skilled artisan meticulously crafting intricate tapestries from tangled threads of web pages. The artisan uses a magical loom powered by glowing AI circuits, transforming chaotic HTML, Markdown, and images into beautifully structured data objects. Each tapestry represents a specific schema, defined with Zod-like precision. Small screens display snippets of TypeScript code and the repository name subtly woven into the fabric. The scene is bathed in soft, ethereal light, evoking a sense of order and clarity. The image should be in a 3D isometric illustration style with vibrant colors and rich details, emphasizing the transformation process."
    },
    {
        "id": 820087727,
        "name": "onlook",
        "description": "The open source Cursor for Designers. Design directly in your live React app and publish your changes to code.",
        "url": "https://github.com/onlook-dev/onlook",
        "language": "TypeScript",
        "stars": 9155,
        "forks": 550,
        "created_at": "2024-06-25T19:16:02Z",
        "updated_at": "2025-04-16T08:48:28Z",
        "topics": [
            "browser",
            "cursor",
            "design",
            "devtool",
            "electron",
            "figma",
            "frontend",
            "hacktoberfest",
            "ide",
            "local-first",
            "low-code",
            "nextjs",
            "no-code",
            "react",
            "tailwindcss",
            "typescript",
            "ui",
            "vitejs",
            "webflow"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-04-16T06:13:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/16fd0cbb773166fd5784f698f46f5c8f47d97cb30c2d124eff9e4c4b7edf2890/onlook-dev/onlook"
        ],
        "homepage": "https://onlook.com",
        "readme_summary": "Onlook is an open-source tool that allows designers to directly design and edit live React applications. It integrates seamlessly with React and TailwindCSS, enabling real-time modifications within the browser DOM. The tool aims to bridge the gap between design and development by allowing designers to customize the design, control the codebase, and publish changes without needing extensive coding knowledge.",
        "key_features": [
            "Design directly in live React app",
            "Publish changes to code",
            "Seamless integration with React + TailwindCSS",
            "Live edits in the browser DOM",
            "Customize design and control codebase"
        ],
        "primary_use_case": "Designers directly editing and publishing changes to React and TailwindCSS based web applications.",
        "open_issues": 225,
        "cover_image_prompt": "A skilled architect meticulously crafting a digital building block within a vibrant, interactive blueprint. The architect uses a specialized cursor that directly manipulates the React code displayed on the blueprint, instantly reflecting design changes on a live website preview. The scene is set in a bright, modern design studio filled with subtle tech elements like floating UI components and glowing data streams. The repository name, 'Onlook,' is subtly integrated into the blueprint's header. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and a focus on clarity and intuitive understanding."
    },
    {
        "id": 569233100,
        "name": "Harden-Windows-Security",
        "description": "Harden Windows Safely, Securely using Official Supported Microsoft methods and proper explanation | Always up-to-date and works with the latest build of Windows | Provides tools and Guides for Personal, Enterprise, Government and Military security levels | Read The Rationale https://github.com/HotCakeX/Harden-Windows-Security/blob/main/Rationale.md",
        "url": "https://github.com/HotCakeX/Harden-Windows-Security",
        "language": "C#",
        "stars": 2386,
        "forks": 189,
        "created_at": "2022-11-22T11:26:53Z",
        "updated_at": "2025-04-16T07:00:30Z",
        "topics": [
            "1st-party-security",
            "applicationcontrol",
            "bitlocker",
            "defender",
            "encryption",
            "enterprise-security",
            "firewall-configuration",
            "harden",
            "module",
            "operation-system-security",
            "powershell",
            "powershell-script",
            "proactive",
            "security",
            "security-hardening",
            "tpm2",
            "wdac",
            "windows",
            "windows11",
            "windowsdefender"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-04-15T12:14:31Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9dc4aad80f86b21274310d65707443211fb547b764c184fc938b2b70d6b28348/HotCakeX/Harden-Windows-Security"
        ],
        "homepage": "https://hotcakex.github.io",
        "readme_summary": "The Harden-Windows-Security repository provides tools and guides to harden Windows operating systems securely using official Microsoft methods. It offers a PowerShell module and AppControl Manager to automate and manage security configurations for various security levels, aiming to protect against malware and enhance overall system security.",
        "key_features": [
            "Hardens Windows security using official Microsoft methods",
            "Provides tools and guides for various security levels (Personal, Enterprise, Government, Military)",
            "Offers a PowerShell module for automated hardening",
            "Includes an AppControl Manager",
            "Provides proactive security measures"
        ],
        "primary_use_case": "To securely harden Windows operating systems against malware and other security threats using officially supported Microsoft methods.",
        "open_issues": 10,
        "cover_image_prompt": "A blacksmith meticulously forging a glowing shield labeled \"Windows Security\" in a high-tech workshop. The blacksmith uses official Microsoft tools displayed on holographic screens to harden the shield against incoming digital arrows representing malware. Sparks of code fly as the shield strengthens, deflecting the arrows. The workshop is clean and organized, with blueprints for security configurations visible in the background. The scene is brightly lit with a focus on the shield and the blacksmith's focused expression. The image should be in a detailed 3D isometric illustration style with vibrant colors and clear outlines."
    },
    {
        "id": 892128953,
        "name": "ShadowHound",
        "description": "PowerShell scripts for alternative SharpHound enumeration, including users, groups, computers, and certificates, using the ActiveDirectory module (ADWS) or System.DirectoryServices class (LDAP).",
        "url": "https://github.com/Friends-Security/ShadowHound",
        "language": "PowerShell",
        "stars": 345,
        "forks": 36,
        "created_at": "2024-11-21T15:01:14Z",
        "updated_at": "2025-04-15T20:35:02Z",
        "topics": [],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2024-12-01T08:06:02Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6fb35a466e4f1a9f456bf046ee3fb5b9ad8cc5ce8264174e9f742d404b77bcf2/Friends-Security/ShadowHound"
        ],
        "homepage": null,
        "readme_summary": "ShadowHound is a PowerShell-based tool for Active Directory enumeration that avoids the use of SharpHound. It offers two methods for data collection, leveraging native PowerShell capabilities to minimize detection risks. The tool enumerates users, groups, computers, and certificates, and includes features for handling large domains and using alternate credentials.",
        "key_features": [
            "Active Directory enumeration using native PowerShell",
            "Two methods for data collection: ADWS and LDAP",
            "Enumerates users, groups, computers, and certificates",
            "Options for handling large domains (ShadowHound-ADM.ps1)",
            "Supports alternate credentials (ShadowHound-DS.ps1)"
        ],
        "primary_use_case": "Active Directory enumeration for security assessments and penetration testing, minimizing detection risks by avoiding known-malicious binaries.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled tracker dog, nose to the ground, follows a faint digital trail through a dense forest of Active Directory objects. The dog wears a harness displaying the ShadowHound logo. The trail glows faintly, revealing hidden users, groups, computers, and certificates represented as stylized icons. The forest floor is littered with discarded, broken binaries. A faint UI overlay shows snippets of PowerShell code and LDAP queries. The scene is set in a misty, stylized forest with dappled lighting. The image should be in a 3D isometric illustration style with clear outlines and a focus on readability."
    },
    {
        "id": 944988714,
        "name": "YT-Navigator",
        "description": "YT Navigator: AI-powered YouTube content explorer that lets you search and chat with channel videos using AI agents. Extract insights from hours of content in seconds with semantic search and precise timestamps.",
        "url": "https://github.com/wassim249/YT-Navigator",
        "language": "Python",
        "stars": 413,
        "forks": 50,
        "created_at": "2025-03-08T11:52:11Z",
        "updated_at": "2025-04-16T08:46:07Z",
        "topics": [
            "agentic-ai",
            "agentic-rag",
            "ai",
            "django",
            "langchain",
            "langgraph",
            "llm",
            "python",
            "rag",
            "reranking",
            "youtube",
            "youtube-bot"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-03-27T11:18:54Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b06838623e1e30fb8e44dde8021df4975fa45547e3abcc3a1ed12199c01d8235/wassim249/YT-Navigator"
        ],
        "homepage": "",
        "readme_summary": "YT Navigator is an AI-powered application designed to streamline the process of searching and understanding YouTube channel content. It allows users to quickly find relevant information within videos through semantic search, chat with an AI agent knowledgeable about the channel, and pinpoint precise timestamps for key segments, making it ideal for researchers, students, and content creators.",
        "key_features": [
            "Semantic search through YouTube channel videos",
            "AI-powered chat with channel content",
            "Precise timestamp identification for relevant video segments",
            "Channel management for scanning and summarizing videos"
        ],
        "primary_use_case": "Efficiently navigating and extracting information from YouTube channel content using AI.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a seasoned explorer charting a vast, uncharted archipelago representing YouTube channels. The explorer, equipped with a high-tech compass displaying AI circuitry, navigates through dense fog using glowing timestamps as guiding stars. The compass highlights specific islands (videos) containing valuable insights, transforming hours of aimless searching into a focused journey. Subtle UI elements float nearby, displaying search queries and chat interfaces. The scene is bathed in soft, ethereal light, creating a sense of discovery and efficiency. The image should be in a detailed digital painting style with vibrant colors and a clear, focused composition."
    },
    {
        "id": 799049436,
        "name": "gpustack",
        "description": "Manage GPU clusters for running AI models",
        "url": "https://github.com/gpustack/gpustack",
        "language": "Python",
        "stars": 2458,
        "forks": 245,
        "created_at": "2024-05-11T03:41:58Z",
        "updated_at": "2025-04-16T10:08:56Z",
        "topics": [],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-04-16T10:08:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/94d685b6cffd779051f4569271d424ac057bf1af8749fc9f227b54f031f5b973/gpustack/gpustack"
        ],
        "homepage": "https://gpustack.ai",
        "readme_summary": "GPUStack is an open-source GPU cluster manager designed to simplify the deployment and scaling of AI models. It offers broad hardware and model compatibility, supports distributed inference, and provides OpenAI-compatible APIs. Key features include user management, GPU monitoring, and token usage tracking, all within a lightweight Python package.",
        "key_features": [
            "Broad Hardware Compatibility",
            "Broad Model Support",
            "Scales with Your GPU Inventory",
            "Distributed Inference",
            "Multiple Inference Backends",
            "Lightweight Python Package",
            "OpenAI-compatible APIs",
            "User and API key management",
            "GPU metrics monitoring",
            "Token usage and rate metrics"
        ],
        "primary_use_case": "Managing GPU clusters for running AI models.",
        "open_issues": 340,
        "cover_image_prompt": "A conductor orchestrating a symphony of GPUs, each represented by a musical instrument. The conductor, with a tablet displaying AI model parameters, guides the GPUs to play harmoniously, creating a beautiful melody of AI computation. Visual indicators of input data streams flow into the orchestra, and the resulting AI model output is visualized as a vibrant, holographic projection above the stage. Subtle tech elements like glowing circuit patterns on the instruments and UI elements on the tablet connect the metaphor to software. The scene is set in a futuristic concert hall with dynamic lighting. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]