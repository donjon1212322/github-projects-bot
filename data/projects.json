[
    {
        "id": 816852045,
        "name": "razer-keyboard-snake",
        "description": "Python script to run a simple snake game on razer keyboards",
        "url": "https://github.com/lightoshadow/razer-keyboard-snake",
        "language": "Python",
        "stars": 2,
        "forks": 0,
        "created_at": "2024-06-18T14:18:31Z",
        "updated_at": "2025-10-02T07:16:14Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-10-01T12:11:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/fbd010122043df54b367a41d2431b4f3b6457bb04bd608a96b4adc31f3829e65/lightoshadow/razer-keyboard-snake"
        ],
        "homepage": null,
        "readme_summary": "The Razer Keyboard Snake repository provides a Python implementation of the classic Snake game that is displayed on a Razer keyboard's RGB lighting. The game utilizes the OpenRazer drivers to control the keyboard's LEDs, creating a visually engaging experience where the snake and fruit are represented by colored lights.",
        "key_features": [
            "Snake game implemented on Razer keyboard RGB lighting",
            "Uses OpenRazer drivers for keyboard control",
            "Customizable snake and fruit colors",
            "Simple controls using arrow keys"
        ],
        "primary_use_case": "Playing the Snake game on a Razer keyboard using its RGB lighting.",
        "open_issues": 0,
        "cover_image_prompt": "A pixelated snake made of glowing green blocks slithering across a giant keyboard landscape, devouring a single, bright red pixel-apple. The keyboard keys are slightly raised like rolling hills, and the snake leaves a trail of fading green light. A gamer sits in the background, smiling as they watch the game unfold on their keyboard. Small UI elements showing the game's score and controls are subtly displayed on nearby screens. The scene is set in a dimly lit room with a focus on the vibrant colors of the keyboard. The image should be in a 3D isometric illustration style with clear iconography and a playful color scheme."
    },
    {
        "id": 320628155,
        "name": "LaTeX-OCR",
        "description": "pix2tex: Using a ViT to convert images of equations into LaTeX code.",
        "url": "https://github.com/lukas-blecher/LaTeX-OCR",
        "language": "Python",
        "stars": 15584,
        "forks": 1246,
        "created_at": "2020-12-11T16:35:13Z",
        "updated_at": "2025-10-02T10:09:15Z",
        "topics": [
            "dataset",
            "deep-learning",
            "im2latex",
            "im2markup",
            "im2text",
            "image-processing",
            "image2text",
            "latex",
            "latex-ocr",
            "machine-learning",
            "math-ocr",
            "ocr",
            "python",
            "pytorch",
            "transformer",
            "vision-transformer",
            "vit"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2025-01-18T15:23:43Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/320628155/dd783980-7c4a-11eb-8b7b-9c59814d31b4"
        ],
        "homepage": "https://lukas-blecher.github.io/LaTeX-OCR/",
        "readme_summary": "The pix2tex repository provides a system that converts images of mathematical formulas into LaTeX code using a Vision Transformer (ViT) model. It offers multiple interfaces for prediction, including a command-line tool, a graphical user interface (GUI), an API, and direct usage from within Python.",
        "key_features": [
            "Image to LaTeX conversion using a ViT model",
            "Command-line tool for image parsing",
            "GUI with screenshot capability and MathJax rendering",
            "API for remote access and integration",
            "Python library for direct usage"
        ],
        "primary_use_case": "Converting images of mathematical equations into LaTeX code for digital use.",
        "open_issues": 137,
        "cover_image_prompt": "A skilled scribe in a brightly lit study meticulously transcribing complex mathematical equations from ancient scrolls onto a modern digital tablet. The tablet displays the equations rendered perfectly in LaTeX. The scribe's quill emits glowing particles that transform into clean LaTeX code on the screen. Small UI elements on the tablet show the image input and the resulting LaTeX output. The scene is set in a blend of old and new technology, with warm lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 103692141,
        "name": "vokoscreenNG",
        "description": "vokoscreenNG is a powerful screencast creator in many languages to record the screen, an area or a window (Linux only). Recording of audio from multiple sources is supported. With the built-in camera support, you can make your video more personal. Other tools such as systray, magnifying glass, countdown, timer, Showclick and Halo support will help ",
        "url": "https://github.com/vkohaupt/vokoscreenNG",
        "language": "C++",
        "stars": 1322,
        "forks": 105,
        "created_at": "2017-09-15T19:06:59Z",
        "updated_at": "2025-10-02T08:54:28Z",
        "topics": [
            "capture",
            "linux",
            "opensource",
            "oss",
            "record",
            "screen-capture",
            "screen-recorder",
            "screencast",
            "screenshot",
            "windows"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-09-29T00:09:40Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ad05d6d440516aba66b802f479f838239c4b3a1051fc9a3ee221fa99458271ba/vkohaupt/vokoscreenNG"
        ],
        "homepage": "https://linuxecke.volkoh.de/vokoscreen/vokoscreen.html",
        "readme_summary": "vokoscreenNG is a screencasting software for Windows and Linux, written in C++. It allows users to record their screen, a specific area, or a window, and supports audio recording from multiple sources and camera integration. It also provides tools like systray, magnifying glass, countdown, timer, Showclick, and Halo.",
        "key_features": [
            "Screen recording (full screen, area, window)",
            "Audio recording from multiple sources",
            "Camera support",
            "Systray integration",
            "Magnifying glass",
            "Countdown timer",
            "Showclick and Halo effects",
            "Cross-platform support (Windows and Linux)"
        ],
        "primary_use_case": "Creating screencasts and screen recordings for tutorials, presentations, or demonstrations.",
        "open_issues": 142,
        "cover_image_prompt": "A film director on a movie set, using a clapperboard to record a scene displayed on a large monitor. The monitor shows a desktop environment with various applications running, symbolizing screen recording. The clapperboard has subtle UI elements, and digital particles flow from the monitor to the clapperboard, representing the capture process. The set is filled with soft, warm lighting, creating a professional atmosphere. The composition is focused and clean, with a balanced color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 753417704,
        "name": "snippai",
        "description": "Snip Anything Solve Everythingâ€‹",
        "url": "https://github.com/xyTom/snippai",
        "language": "TypeScript",
        "stars": 1277,
        "forks": 72,
        "created_at": "2024-02-06T04:32:07Z",
        "updated_at": "2025-10-02T09:55:11Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-08-20T20:48:29Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/753417704/4813a575-9001-4dcc-8975-80e37f44c1dc"
        ],
        "homepage": "https://snippai.de/",
        "readme_summary": "Snippai is an AI-powered snipping tool that enhances the snipping experience by providing intelligent features. It can recognize formulas, extract text, convert tables, analyze images, solve problems, understand code, detect colors, and translate languages directly from images, making it a versatile tool for various tasks.",
        "key_features": [
            "Formula Recognition (LaTeX conversion)",
            "Text Extraction",
            "Table Conversion (to Markdown)",
            "Image Analysis",
            "Problem Solving",
            "Code Understanding",
            "Color Detection",
            "Language Translation"
        ],
        "primary_use_case": "Intelligent image analysis and information extraction from screen captures.",
        "open_issues": 13,
        "cover_image_prompt": "A skilled librarian using a pair of high-tech scissors to snip sections from various documents (formulas, code snippets, foreign text, tables). As the librarian snips, the extracted information magically transforms into neatly organized digital formats (LaTeX, clear text, Markdown tables, translated text) that float into labeled folders. Small UI elements showing the Snippai interface are subtly displayed on the librarian's desk. The scene is set in a bright, modern library with a clean and organized atmosphere. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    },
    {
        "id": 2881789,
        "name": "Python",
        "description": "My Python Examples",
        "url": "https://github.com/geekcomputers/Python",
        "language": "Python",
        "stars": 34092,
        "forks": 12769,
        "created_at": "2011-11-30T09:04:08Z",
        "updated_at": "2025-10-02T08:32:07Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-09-28T06:50:11Z",
        "media_urls": [
            "https://opengraph.githubassets.com/608965d8ab1cf9656750b6190220a3584acd3998cd54d8b6ae4a954ad1169b0b/geekcomputers/Python"
        ],
        "homepage": "http://www.thegeekblog.co.uk",
        "readme_summary": "This repository is a collection of Python scripts designed to reduce human workload and serve as educational examples for beginners. It includes scripts for tasks such as batch file renaming, directory creation, YouTube downloading, image downloading, environment checking, and system administration tasks.",
        "key_features": [
            "Batch file renaming",
            "Directory creation",
            "YouTube downloading",
            "Google Image downloading",
            "Environment variable checking",
            "File information display",
            "Folder size scanning",
            "Log file management",
            "File moving based on age",
            "DNS entry checking",
            "Operating system information display",
            "Server pinging",
            "Subnet scanning",
            "Putty log management",
            "Script counting",
            "YouTube view boosting"
        ],
        "primary_use_case": "Automation of tasks and educational examples for Python beginners.",
        "open_issues": 350,
        "cover_image_prompt": "A friendly robot chef in a brightly lit kitchen, efficiently juggling various ingredients (files) and tools (scripts). One robotic arm renames a stack of files with a label maker, another creates a folder with a miniature construction set, and a third downloads a YouTube video with a tiny satellite dish. Small UI elements display code snippets and progress bars on nearby screens. The kitchen is clean and organized, with a playful, educational atmosphere. The repository name, 'Python Examples,' is subtly displayed on the robot's apron. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 1056082182,
        "name": "OnePSE",
        "description": "Free, OpenSource, 2D sdl engine for python!",
        "url": "https://github.com/CodCatDev/OnePSE",
        "language": "Python",
        "stars": 6,
        "forks": 0,
        "created_at": "2025-09-13T10:56:20Z",
        "updated_at": "2025-10-01T19:51:23Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-09-26T18:17:07Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1056082182/c838fd78-11f6-4c5b-8b2c-fdc8302389d2"
        ],
        "homepage": "",
        "readme_summary": "OnePSE is a free, open-source 2D game engine for Python, built on top of SDL. It aims to simplify the development process with SDL, offering an easier-to-use interface. The engine is under active development and welcomes contributions.",
        "key_features": [
            "SDL-based 2D game engine",
            "Open-source",
            "Simplified SDL interface for Python",
            "Actively developed"
        ],
        "primary_use_case": "Developing 2D games in Python using a simplified SDL interface.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a skilled artisan crafting a miniature world within a digital snow globe, representing the OnePSE game engine. The artisan carefully places pixelated characters and landscapes, each glowing with vibrant colors. Small UI elements float around the globe, showcasing code snippets and game settings. The artisan's hands are subtly augmented with digital interfaces, blending the physical and virtual realms. The scene is set in a cozy workshop filled with tools and glowing screens. The image should be in a 3D isometric illustration style with rich details and a warm, inviting color scheme."
    },
    {
        "id": 648629873,
        "name": "puck",
        "description": "The visual editor for React",
        "url": "https://github.com/puckeditor/puck",
        "language": "TypeScript",
        "stars": 9707,
        "forks": 635,
        "created_at": "2023-06-02T12:23:41Z",
        "updated_at": "2025-10-02T10:08:13Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-09-30T16:05:00Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/648629873/9794aab8-0688-48d6-9454-476f5c571b46"
        ],
        "homepage": "https://puckeditor.com",
        "readme_summary": "Puck is an open-source visual editor for React.js, enabling developers to build custom drag-and-drop experiences using their own React components. It integrates seamlessly with React environments like Next.js and offers data ownership without vendor lock-in, licensed under MIT for both internal and commercial use.",
        "key_features": [
            "Modular visual editor for React",
            "Custom drag-and-drop experiences",
            "React component integration",
            "No vendor lock-in",
            "MIT license"
        ],
        "primary_use_case": "Building custom content management systems and visual editing interfaces within React applications.",
        "open_issues": 152,
        "cover_image_prompt": "Imagine a skilled architect designing a website layout by visually arranging building blocks representing React components on a digital blueprint. The architect drags and drops elements, customizing each block's properties on a floating UI panel. The blueprint transforms in real-time into a fully functional website displayed on a nearby screen. Subtle code snippets and data visualizations float around the scene, connecting the visual design to the underlying code. The scene is set in a bright, modern design studio with a clean, isometric perspective. The image should be in 3D isometric illustration style with vibrant colors and clear details."
    }
]