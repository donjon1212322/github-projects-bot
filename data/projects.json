[
    {
        "id": 182306991,
        "name": "youtube-music",
        "description": "YouTube Music Desktop App bundled with custom plugins",
        "url": "https://github.com/th-ch/youtube-music",
        "language": "TypeScript",
        "stars": 25136,
        "forks": 1354,
        "created_at": "2019-04-19T18:14:40Z",
        "updated_at": "2025-07-08T10:11:30Z",
        "topics": [
            "adblocker",
            "desktop-app",
            "electron",
            "linux",
            "mac",
            "macosx",
            "music",
            "music-player",
            "music-player-application",
            "node",
            "windows",
            "youtube",
            "youtube-music",
            "youtube-music-player",
            "youtube-player",
            "youtube-playlist"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-07-07T23:31:38Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/182306991/ee1079d3-8ec7-4bff-813c-1726dc635405"
        ],
        "homepage": "https://th-ch.github.io/youtube-music/",
        "readme_summary": "The YouTube Music Desktop App wraps the YouTube Music web player in an Electron application, providing a native desktop experience. It features a plugin framework that allows users to customize the application with various extensions, such as ad blocking, theme modifications, and audio enhancements. The application aims to provide a more feature-rich and personalized YouTube Music experience.",
        "key_features": [
            "Native look & feel of YouTube Music",
            "Custom plugin framework for extending functionality",
            "Ad Blocker",
            "Album Actions (Like/Dislike all songs)",
            "Album Color Theme",
            "Ambient Mode",
            "Audio Compressor",
            "Blur Navigation Bar"
        ],
        "primary_use_case": "Provides a desktop application for YouTube Music with enhanced features and customization through plugins.",
        "open_issues": 390,
        "cover_image_prompt": "Imagine a skilled conductor leading an orchestra where each musician represents a different YouTube Music feature. The conductor, representing the YouTube Music Desktop App, seamlessly blends these features to create a harmonious music experience. Subtle UI elements float around the orchestra, showing plugin controls and settings. The scene is set in a modern concert hall with vibrant lighting that reflects the music's mood. The image should be in a 3D isometric illustration style with rich details and vibrant colors, conveying a sense of control and customization."
    },
    {
        "id": 1010270157,
        "name": "4o-ghibli-at-home",
        "description": "The GPT-4o image generation we have at home. A powerful, self-hosted AI photo stylizer built for performance and privacy.",
        "url": "https://github.com/TheAhmadOsman/4o-ghibli-at-home",
        "language": "JavaScript",
        "stars": 376,
        "forks": 32,
        "created_at": "2025-06-28T17:59:09Z",
        "updated_at": "2025-07-08T09:16:03Z",
        "topics": [],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-07-04T21:41:25Z",
        "media_urls": [
            "https://opengraph.githubassets.com/86ce5127247cc4d27f517e181e3db5bf4386968e354cbff32afc0adebad62c0e/TheAhmadOsman/4o-ghibli-at-home"
        ],
        "homepage": null,
        "readme_summary": "The 4o-ghibli-at-home repository provides a self-hosted AI photo stylizer that transforms images into various artistic styles, including Ghibli-inspired anime. It features an advanced frontend with custom profile management and an efficient model pipeline for high-quality image generation on consumer GPUs, ensuring privacy by processing images locally without cloud involvement.",
        "key_features": [
            "Advanced Frontend with Style Profiles, Custom Profile Management, and Undo/Redo",
            "Enhanced Model Pipeline utilizing FLUX.1-Kontext-dev and DFloat11",
            "Efficient VRAM Usage for consumer hardware",
            "Private and Local Processing: No logins, no cloud processing"
        ],
        "primary_use_case": "Local and private AI photo stylization with Ghibli-inspired and custom styles.",
        "open_issues": 9,
        "cover_image_prompt": "Imagine a cozy, sunlit artist's studio. A painter, surrounded by vibrant anime-style artwork, is meticulously adjusting the settings on a sophisticated digital easel. The easel transforms a realistic photograph of a cityscape into a breathtaking Ghibli-esque landscape in real-time. Subtle UI elements float around the easel, showcasing style profiles and adjustment sliders. A small, glowing server rack hums quietly in the corner, symbolizing the local processing. The scene is rendered in a detailed digital painting style with warm, inviting colors and a focus on the transformative process. The repository name, 'Ghibli At Home,' is subtly painted on a canvas in the background."
    },
    {
        "id": 51980455,
        "name": "alacritty",
        "description": "A cross-platform, OpenGL terminal emulator.",
        "url": "https://github.com/alacritty/alacritty",
        "language": "Rust",
        "stars": 59427,
        "forks": 3137,
        "created_at": "2016-02-18T05:02:30Z",
        "updated_at": "2025-07-08T09:53:28Z",
        "topics": [
            "bsd",
            "gpu",
            "linux",
            "macos",
            "opengl",
            "rust",
            "terminal",
            "terminal-emulators",
            "vte",
            "windows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-07T21:44:55Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/51980455/c6857780-448b-11ea-95ed-00fdbc59eb0b"
        ],
        "homepage": "https://alacritty.org",
        "readme_summary": "Alacritty is a modern, cross-platform terminal emulator that leverages OpenGL for GPU-accelerated rendering, resulting in exceptional performance. It offers extensive configuration options while maintaining sensible defaults, making it suitable for a wide range of users across BSD, Linux, macOS, and Windows.",
        "key_features": [
            "Cross-platform compatibility (BSD, Linux, macOS, Windows)",
            "GPU-accelerated rendering using OpenGL",
            "Extensive configuration options",
            "High performance and speed",
            "Sensible defaults"
        ],
        "primary_use_case": "A fast, cross-platform terminal emulator for developers and users who require high performance and customization.",
        "open_issues": 318,
        "cover_image_prompt": "Imagine a high-speed train, Alacritty, seamlessly gliding through a futuristic cityscape. The train's windows display vibrant terminal interfaces, showcasing various applications running smoothly. The city is built upon layers of code and data, subtly visualized as glowing networks beneath the streets. The train's speed is emphasized by motion blur and streaks of light. A conductor, representing the user, confidently manages the terminal windows. The overall scene is clean, modern, and efficient. The image should be in a 3D isometric illustration style with bright, contrasting colors and sharp details."
    },
    {
        "id": 388930754,
        "name": "sunnypilot",
        "description": "sunnypilot is an open source driver assistance system. sunnypilot offers the user a unique driving experience for over 300 supported car makes and models with modified behaviors of driving assist engagements. sunnypilot complies with the safety policy from comma.ai's openpilot as accurately as possible.",
        "url": "https://github.com/sunnypilot/sunnypilot",
        "language": "Python",
        "stars": 1487,
        "forks": 932,
        "created_at": "2021-07-23T21:28:21Z",
        "updated_at": "2025-07-08T09:36:07Z",
        "topics": [
            "acura",
            "audi",
            "autopilot",
            "chrysler",
            "comma",
            "fsd",
            "genesis",
            "honda",
            "hyundai",
            "jeep",
            "kia",
            "lexus",
            "mazda",
            "nissan",
            "openpilot",
            "ram",
            "selfdriving",
            "tesla",
            "toyota",
            "volkswagen"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-06T04:23:32Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/388930754/73cf30a0-6739-44fd-aab1-5e724902b952"
        ],
        "homepage": "https://www.sunnypilot.ai",
        "readme_summary": "sunnypilot is an open-source driver assistance system forked from comma.ai's openpilot. It offers modified driving assist engagements for over 300 car models while adhering to comma.ai's safety standards. The system can be installed on compatible devices using custom software URLs.",
        "key_features": [
            "Driver assistance system",
            "Fork of comma.ai's openpilot",
            "Supports 300+ car makes and models",
            "Modified driving assist engagements",
            "Complies with comma.ai's safety rules",
            "Installation via custom software URL"
        ],
        "primary_use_case": "Providing an open-source driver assistance system for supported vehicles.",
        "open_issues": 78,
        "cover_image_prompt": "A skilled driver confidently navigates a winding mountain road in a futuristic car, guided by a bright, sunny autopilot interface projected onto the windshield. The car seamlessly adapts to the curves and obstacles, ensuring a smooth and safe journey. Subtle digital overlays display real-time data and system status, blending the physical and digital worlds. The scene is bathed in warm sunlight, creating a sense of optimism and technological harmony. The image should be in a vibrant, 3D isometric illustration style with clean lines and detailed textures."
    },
    {
        "id": 924394244,
        "name": "agents",
        "description": "Build and deploy AI Agents on Cloudflare ",
        "url": "https://github.com/cloudflare/agents",
        "language": "TypeScript",
        "stars": 2191,
        "forks": 178,
        "created_at": "2025-01-29T23:14:04Z",
        "updated_at": "2025-07-08T05:45:03Z",
        "topics": [
            "agents",
            "ai",
            "cloudflare",
            "durable-objects",
            "workflows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-03T08:29:02Z",
        "media_urls": [
            "https://opengraph.githubassets.com/58b49e2975a0df69fc48698bfef46106e69df260e42c62f8af1d049b73104f29/cloudflare/agents"
        ],
        "homepage": "https://developers.cloudflare.com/agents/",
        "readme_summary": "The 'agents' repository provides a framework for building intelligent, stateful AI agents that can persist, think, and evolve at the edge of the Cloudflare network. It offers features such as state management, real-time communication via WebSockets, HTTP endpoints, React integration, and basic AI chat capabilities, with advanced features like memory systems and WebRTC integration under development.",
        "key_features": [
            "Core agent framework with state management",
            "Real-time WebSocket communication",
            "HTTP endpoints and routing",
            "React integration hooks",
            "Basic AI chat capabilities",
            "Advanced memory systems (in development)",
            "WebRTC for audio/video (in development)",
            "Email integration (in development)",
            "Evaluation framework (in development)",
            "Enhanced observability (in development)"
        ],
        "primary_use_case": "Building and deploying AI Agents on Cloudflare.",
        "open_issues": 35,
        "cover_image_prompt": "A skilled architect overseeing a team of tiny robots constructing a futuristic city on a vast, interconnected network of clouds. The architect holds a glowing blueprint, representing the AI agent's design, while the robots, symbolizing individual agents, diligently build structures that represent various functionalities. Data streams flow between the clouds and the city, highlighting the real-time communication and data processing capabilities. Small UI elements displaying agent status and performance metrics are subtly integrated into the city's architecture. The scene is bathed in soft, ethereal lighting, creating a sense of innovation and progress. The image should be in 3D isometric illustration style with vibrant colors and intricate details."
    },
    {
        "id": 859956307,
        "name": "aci",
        "description": "ACI.dev is the open source platform for VibeOps and infrastructure that connects your AI agents to 600+ tool integrations with multi-tenant auth, granular permissions, and access through direct function calling or a unified MCP server.",
        "url": "https://github.com/aipotheosis-labs/aci",
        "language": "Python",
        "stars": 4232,
        "forks": 392,
        "created_at": "2024-09-19T15:06:53Z",
        "updated_at": "2025-07-08T09:46:42Z",
        "topics": [
            "agents",
            "ai",
            "ai-agents",
            "api",
            "developer-tools",
            "function-calling",
            "integration",
            "llm",
            "mcp",
            "oauth2",
            "open-source",
            "permissions",
            "tools"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-08T09:41:08Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d20de92e6c26016d44171d5f10ed557812eb66389c23c41ffcdd0fdc7c232e5b/aipotheosis-labs/aci"
        ],
        "homepage": "https://www.aci.dev/",
        "readme_summary": "ACI.dev is an open-source platform that simplifies AI agent development by providing access to over 600 pre-built tool integrations. It offers multi-tenant authentication, granular permissions, and dynamic tool discovery, accessible through a Unified MCP server or a lightweight SDK. This allows developers to build production-ready AI agents and automate DevOps tasks without infrastructure complexities.",
        "key_features": [
            "600+ Pre-built Integrations",
            "Flexible Access Methods (Unified MCP server or lightweight SDK)",
            "Multi-tenant Authentication",
            "Enhanced Agent Reliability (Natural language permission boundaries and dynamic tool discovery)",
            "Framework & Model Agnostic",
            "100% Open Source"
        ],
        "primary_use_case": "Providing an open-source infrastructure layer for AI-agent tool use and VibeOps, enabling intent-aware access to numerous tools with secure authentication and granular permissions.",
        "open_issues": 27,
        "cover_image_prompt": "A skilled conductor orchestrating a symphony of tools, each representing a different integration. The conductor stands on a platform labeled \"ACI.dev\", seamlessly connecting various instruments (tools) to create harmonious workflows. Glowing lines of energy flow between the conductor and the instruments, visualizing data exchange and function calls. Subtle UI elements float around the scene, displaying API endpoints and permission settings. The scene is set in a modern, minimalist concert hall with soft, ambient lighting. The image should be in 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 262126497,
        "name": "syft",
        "description": "CLI tool and library for generating a Software Bill of Materials from container images and filesystems",
        "url": "https://github.com/anchore/syft",
        "language": "Go",
        "stars": 7298,
        "forks": 678,
        "created_at": "2020-05-07T18:19:29Z",
        "updated_at": "2025-07-08T09:32:41Z",
        "topics": [
            "containers",
            "cyclonedx",
            "docker",
            "go",
            "golang",
            "hacktoberfest",
            "oci",
            "sbom",
            "spdx",
            "static-analysis",
            "tool"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-07T14:11:20Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/262126497/7821d6d6-735d-4290-a708-d0801649b6e3"
        ],
        "homepage": "",
        "readme_summary": "Syft is a CLI tool and Go library that generates Software Bill of Materials (SBOMs) from container images and filesystems. It supports various image formats, integrates with vulnerability scanners like Grype, and can create signed SBOM attestations. Syft enables users to gain visibility into their software dependencies for vulnerability management and license compliance.",
        "key_features": [
            "Generates SBOMs for container images, filesystems, archives",
            "Supports OCI, Docker and Singularity image formats",
            "Linux distribution identification",
            "Works seamlessly with Grype vulnerability scanner",
            "Creates signed SBOM attestations using the in-toto specification",
            "Converts between SBOM formats (CycloneDX, SPDX, Syft's format)"
        ],
        "primary_use_case": "Generating Software Bill of Materials (SBOMs) from container images and filesystems for vulnerability detection, license compliance, and software supply chain security.",
        "open_issues": 434,
        "cover_image_prompt": "A librarian meticulously cataloging books in a vast, digital library. The librarian uses a special scanner that reveals the contents of each book, creating a detailed inventory on a holographic display. Each book represents a container image or filesystem, and the holographic display shows the SBOM generated by the scanner. Small UI elements on the scanner show the Syft logo and data formats like SPDX and CycloneDX. The scene is set in a bright, modern library with a clean, organized aesthetic. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    }
]