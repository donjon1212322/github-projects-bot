[
    {
        "id": 574716825,
        "name": "WiFi-password-stealer",
        "description": "Simple Windows and Linux keystroke injection tool that exfiltrates stored WiFi data (SSID and password).",
        "url": "https://github.com/AleksaMCode/WiFi-password-stealer",
        "language": "PowerShell",
        "stars": 483,
        "forks": 43,
        "created_at": "2022-12-05T23:23:00Z",
        "updated_at": "2025-09-01T09:09:33Z",
        "topics": [
            "cybersecurity",
            "duckyscript",
            "hacking",
            "hacking-tool",
            "hacking-tools",
            "infosec",
            "malware",
            "pentest-tool",
            "pentesting",
            "python-hacking",
            "raspberry-pi",
            "raspberry-pi-pico",
            "rubber-ducky",
            "rubberducky",
            "security",
            "security-tool",
            "security-tools",
            "wifi-password",
            "wifi-passwords",
            "wifi-stealer"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-26T23:42:33Z",
        "media_urls": [
            "https://opengraph.githubassets.com/93c74d06b45eda7b45aa317261eb31c722936a05b52e441d22ca39eaf3db33c5/AleksaMCode/WiFi-password-stealer"
        ],
        "homepage": "",
        "readme_summary": "The WiFi-password-stealer repository provides tools to extract stored WiFi data (SSID and password) from Windows and Linux systems using keystroke injection. It demonstrates how a device, like a Raspberry Pi Pico configured as a Rubber Ducky, can be used to automate data exfiltration, simulating a USB-based attack.",
        "key_features": [
            "Keystroke injection for automated command execution",
            "WiFi data exfiltration (SSID and password)",
            "Windows exploit via email (SMTP)",
            "Linux exploit via USB storage",
            "Rubber Ducky attack implementation",
            "Bash Bunny attack implementation",
            "Payload customization for different targets"
        ],
        "primary_use_case": "Demonstrating keystroke injection techniques for security research and penetration testing to extract WiFi credentials from target systems.",
        "open_issues": 5,
        "cover_image_prompt": "A mischievous gremlin, representing the tool, tiptoes through a network of glowing WiFi routers, snatching passwords represented as shimmering keys. The gremlin carries a USB drive overflowing with keys and sends copies soaring through the air on paper airplanes towards a distant email server depicted as a mailbox in the clouds. Small UI elements on the routers show command prompts and WiFi settings. The scene is set in a stylized, futuristic cityscape with a playful, slightly ominous mood. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 1003531567,
        "name": "reddit2shorts",
        "description": "Make youtube shorts from reddit posts",
        "url": "https://github.com/yogeshdofficial/reddit2shorts",
        "language": "TypeScript",
        "stars": 11,
        "forks": 4,
        "created_at": "2025-06-17T09:36:54Z",
        "updated_at": "2025-09-01T09:03:23Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-08-30T06:21:41Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b5cc17eee0330d32f14c6a57f9ace41e703f6d05c333455976e2a4eeba0576f0/yogeshdofficial/reddit2shorts"
        ],
        "homepage": null,
        "readme_summary": "The reddit2shorts repository is a TypeScript-based tool that automates the creation of YouTube Shorts from Reddit posts. It extracts content from Reddit, generates videos, and optionally uploads them to YouTube or TikTok, utilizing text-to-speech and background media.",
        "key_features": [
            "Generates YouTube Shorts from Reddit posts",
            "Supports random post selection or specific post ID",
            "Configurable number of comments to include",
            "Text-to-speech functionality (Google TTS)",
            "Video upload to YouTube or TikTok",
            "Customizable background audio and video",
            "Uses yt_dlp and ffmpeg for video processing"
        ],
        "primary_use_case": "Automated creation of YouTube Shorts from Reddit content.",
        "open_issues": 0,
        "cover_image_prompt": "A content creator sitting at a digital workstation, transforming Reddit posts represented as glowing text scrolls into engaging YouTube Shorts displayed on a large monitor. The creator uses a stylus to highlight key comments, which are then voiced by a friendly robot assistant. The workstation is surrounded by subtle tech elements like data visualizations and code snippets. The scene is set in a modern, brightly lit studio with a playful atmosphere. The image should be in a 3D isometric illustration style with vibrant colors and clear details, subtly incorporating the 'reddit2shorts' logo."
    },
    {
        "id": 771350543,
        "name": "WrenAI",
        "description": "⚡️ GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered insights in seconds.",
        "url": "https://github.com/Canner/WrenAI",
        "language": "TypeScript",
        "stars": 11199,
        "forks": 1122,
        "created_at": "2024-03-13T06:18:20Z",
        "updated_at": "2025-09-01T10:12:58Z",
        "topics": [
            "agent",
            "anthropic",
            "bedrock",
            "bigquery",
            "business-intelligence",
            "charts",
            "duckdb",
            "genbi",
            "llm",
            "openai",
            "postgresql",
            "rag",
            "spreadsheets",
            "sql",
            "sqlai",
            "text-to-chart",
            "text-to-sql",
            "text2sql",
            "vertex"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-09-01T06:50:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0c6e99873d1eece0343c709ec9770078b0795a4a5855ab98b9b7ba1545eff6e6/Canner/WrenAI"
        ],
        "homepage": "https://getwren.ai/oss",
        "readme_summary": "Wren AI is an open-source GenBI agent that allows users to query databases using natural language. It generates SQL queries (Text-to-SQL), creates charts (Text-to-Chart), and provides AI-powered insights, aiming to simplify business intelligence tasks.",
        "key_features": [
            "Natural language to SQL conversion",
            "AI-generated insights and summaries",
            "Automated chart creation",
            "Semantic layer for accuracy and governance",
            "Embeddable API for custom applications"
        ],
        "primary_use_case": "Simplifying data interaction and analysis by enabling users to query databases and generate insights using natural language, without requiring SQL knowledge.",
        "open_issues": 210,
        "cover_image_prompt": "A skilled cartographer standing over a vast, detailed map made of data points, transforming spoken requests into precise routes marked on the map. The cartographer listens to a traveler's natural language query and uses AI to chart the optimal path, displaying SQL code snippets and generated charts as annotations on the map. The scene is set in a brightly lit, futuristic library filled with glowing data streams. Small UI elements show database schemas and query results. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 746689243,
        "name": "kafka-ui",
        "description": "Open-Source Web UI for managing Apache Kafka clusters",
        "url": "https://github.com/kafbat/kafka-ui",
        "language": "Java",
        "stars": 1405,
        "forks": 165,
        "created_at": "2024-01-22T13:38:08Z",
        "updated_at": "2025-09-01T09:20:44Z",
        "topics": [
            "apache-kafka",
            "big-data",
            "cluster-management",
            "event-streaming",
            "foss",
            "hacktoberfest",
            "kafka",
            "kafka-brokers",
            "kafka-client",
            "kafka-cluster",
            "kafka-connect",
            "kafka-manager",
            "kafka-producer",
            "kafka-streams",
            "kafka-ui",
            "opensource",
            "streaming-data",
            "streams",
            "web-ui"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-26T14:58:18Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/746689243/b6715355-a1a2-4537-863c-a33b8a26a0c8"
        ],
        "homepage": "https://kafbat.io",
        "readme_summary": "Kafka UI is an open-source web interface designed for monitoring and managing Apache Kafka clusters. It provides a user-friendly dashboard to track key metrics such as brokers, topics, partitions, production, and consumption, enabling users to observe data flows, troubleshoot issues, and optimize performance.",
        "key_features": [
            "Topic Insights",
            "Configuration Wizard",
            "Multi-Cluster Management",
            "Metrics Dashboard",
            "Kafka Brokers Overview",
            "Consumer Group Details",
            "Message Browser",
            "Dynamic Topic Management",
            "Pluggable Authentication",
            "Cloud IAM Support",
            "Managed Kafka Service Support",
            "Custom SerDe Plugin Support"
        ],
        "primary_use_case": "Monitoring and managing Apache Kafka clusters.",
        "open_issues": 173,
        "cover_image_prompt": "A seasoned air traffic controller managing a complex network of glowing data streams representing Kafka topics and brokers. The controller sits in front of a large holographic display showing real-time metrics and alerts for each data stream. The control tower is filled with subtle UI elements and visualizations of Kafka configurations. The scene is set in a futuristic control center with a blue and orange color scheme and soft, ambient lighting. Small code snippets are subtly displayed on nearby screens. The image should be in a detailed 3D isometric illustration style with vibrant colors and a clean, modern look."
    },
    {
        "id": 1021753449,
        "name": "his",
        "description": "A command history utility with icons and colors that works on Windows and GNU/Linux.",
        "url": "https://github.com/terroo/his",
        "language": "C++",
        "stars": 53,
        "forks": 3,
        "created_at": "2025-07-17T22:35:00Z",
        "updated_at": "2025-08-31T02:35:26Z",
        "topics": [
            "cli",
            "command-line",
            "cpp",
            "fuzzy-search",
            "history"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-07-24T23:52:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6e8284de975eae555a6d4a110d1a77a72df161f08f17383c8104d84c9bf255f5/terroo/his"
        ],
        "homepage": "https://youtu.be/gILIsK3MiGQ",
        "readme_summary": "`his` is a command history utility designed for both Windows and GNU/Linux operating systems. It enhances the command-line experience by providing a visually appealing and efficient way to access and execute previously used commands, incorporating features like icons and colors for improved usability.",
        "key_features": [
            "Command history",
            "Icons and colors for visual enhancement",
            "Cross-platform compatibility (Windows and GNU/Linux)",
            "Fuzzy search"
        ],
        "primary_use_case": "Efficiently accessing and re-executing commands from the command-line history.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a seasoned explorer in a vast library of scrolls, each representing a past command. The explorer, equipped with a glowing magnifying glass (representing `his`), effortlessly scans the scrolls, instantly highlighting the relevant ones with vibrant colors and icons. A holographic display subtly shows a command-line interface with the `his` utility in action, seamlessly recalling a complex command. The library is filled with soft, warm light, creating an atmosphere of discovery and efficiency. Small digital particles float around the explorer, representing the flow of data. The image should be in a 3D isometric illustration style with rich details and a focus on clarity."
    },
    {
        "id": 835103731,
        "name": "colanode",
        "description": "Open-source and local-first Slack and Notion alternative that puts you in control of your data",
        "url": "https://github.com/colanode/colanode",
        "language": "TypeScript",
        "stars": 3454,
        "forks": 172,
        "created_at": "2024-07-29T07:02:36Z",
        "updated_at": "2025-09-01T09:43:04Z",
        "topics": [
            "chat",
            "chat-application",
            "crdt",
            "editor",
            "electron",
            "knowledge-base",
            "local-first",
            "notion",
            "notion-alternative",
            "realtime-collaboration",
            "self-hosted",
            "slack",
            "sqlite",
            "team-collaboration",
            "wiki",
            "yjs"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-29T21:55:29Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0644a13c284c68ae48a456d70ac6ee1505a3c2986f0a316cee4693a61b03d84a/colanode/colanode"
        ],
        "homepage": "https://colanode.com",
        "readme_summary": "Colanode is an open-source, local-first collaboration workspace designed as an alternative to Slack and Notion. It prioritizes data privacy and control by allowing users to self-host their data while providing real-time chat, rich text pages, customizable databases, and file management capabilities.",
        "key_features": [
            "Real-Time Chat",
            "Rich Text Pages",
            "Customizable Databases",
            "File Management",
            "Local-first workflow with SQLite database",
            "CRDTs for concurrent edits (powered by Yjs)",
            "Self-hosting capability"
        ],
        "primary_use_case": "Team collaboration and knowledge management with a focus on data privacy and local-first functionality.",
        "open_issues": 9,
        "cover_image_prompt": "A skilled architect meticulously constructing a digital fortress, brick by brick, from glowing data blocks. Inside the fortress, teams collaborate seamlessly, represented by miniature figures working together at interactive tables. Each table displays different collaboration tools: chat windows, document editors, and database interfaces. The fortress is surrounded by a protective energy field, symbolizing data privacy. Small UI elements and code snippets float subtly in the background. The scene is set in a clean, futuristic environment with soft, ambient lighting. The composition is isometric and balanced with a blue and green color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]