[
    {
        "id": 967152344,
        "name": "FaceEnhance",
        "description": "Enhance faces in AI generated images",
        "url": "https://github.com/RishiDesai/FaceEnhance",
        "language": "Python",
        "stars": 19,
        "forks": 1,
        "created_at": "2025-04-16T02:34:01Z",
        "updated_at": "2025-04-26T08:56:11Z",
        "topics": [
            "comfyui",
            "controlnet",
            "face",
            "flux",
            "pulid"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-21T09:37:33Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0a37442a2eb370d923dd96fd0e7bf021d1e9e6a2cdb9444e9cf4fdff46617978/RishiDesai/FaceEnhance"
        ],
        "homepage": "https://huggingface.co/spaces/rdesai2/FaceEnhance",
        "readme_summary": "The FaceEnhance repository provides tools and workflows for enhancing faces in AI-generated images. It focuses on improving facial consistency and quality while preserving the original image's context. The repository includes ComfyUI workflows and a Gradio demo for interactive use.",
        "key_features": [
            "Enhances facial consistency and quality in AI-generated images",
            "Preserves original image's background, lighting, and composition",
            "ComfyUI workflows for face enhancement and embedding distance calculation",
            "Gradio demo for interactive face enhancement"
        ],
        "primary_use_case": "Improving facial fidelity in AI-generated images.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled sculptor meticulously refining a rough clay face, transforming it into a lifelike portrait. The sculptor uses digital tools, subtly projected onto the clay, to enhance details and correct imperfections. The background shows a gallery filled with diverse portraits, some blurry and indistinct, others sharp and clear, representing the range of AI-generated faces. The repository name, 'FaceEnhance,' is subtly etched into the sculptor's workbench. The scene is bathed in soft, focused lighting, highlighting the transformation. This is a 3D isometric illustration with vibrant colors and rich details."
    },
    {
        "id": 915378930,
        "name": "cap",
        "description": "Cap is a lightweight, modern open-source CAPTCHA alternative designed using SHA-256 proof-of-work",
        "url": "https://github.com/tiagorangel1/cap",
        "language": "JavaScript",
        "stars": 517,
        "forks": 7,
        "created_at": "2025-01-11T17:35:52Z",
        "updated_at": "2025-04-26T07:23:59Z",
        "topics": [
            "anti-abuse",
            "anti-bot",
            "anti-scraper",
            "antispam",
            "bun",
            "captcha",
            "defense",
            "hashcash",
            "javascript",
            "proof-of-work",
            "web"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-25T17:27:58Z",
        "media_urls": [
            "https://opengraph.githubassets.com/351d358d65833c91311f2d5309d39975441e2081e2edcc751bb57891a63a7753/tiagorangel1/cap"
        ],
        "homepage": "https://capjs.js.org/",
        "readme_summary": "Cap is a lightweight, modern CAPTCHA alternative that uses SHA-256 proof-of-work to protect against bots and abuse. It offers a small JavaScript widget for client-side challenges and a zero-dependency server component for validation. Cap can be deployed in various environments, including standalone mode with Docker, and is designed to be a privacy-focused and customizable replacement for traditional CAPTCHAs.",
        "key_features": [
            "Lightweight CAPTCHA alternative",
            "SHA-256 proof-of-work",
            "Small JavaScript widget",
            "Zero-dependency server component",
            "Optional server-side solver",
            "Standalone mode with Docker",
            "Customizable frontend and backend",
            "Private (no tracking)",
            "Invisible and floating modes"
        ],
        "primary_use_case": "Protecting APIs from bots, preventing spam on forms, blocking automated login attempts, and securing free-tier abuse.",
        "open_issues": 0,
        "cover_image_prompt": "A diligent watchmaker meticulously crafting intricate clockwork gears, each representing a CAPTCHA challenge, to form a robust barrier against a swarm of robotic insects attempting to bypass it. The watchmaker uses a magnifying glass to ensure each gear is perfectly aligned and computationally complex, making it difficult for the robots to replicate. Subtle UI elements displaying SHA-256 hash calculations are projected onto the watchmaker's workbench. The scene is set in a brightly lit, steampunk-inspired workshop. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 310933773,
        "name": "winapps",
        "description": "Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration.",
        "url": "https://github.com/Fmstrat/winapps",
        "language": "Shell",
        "stars": 9144,
        "forks": 421,
        "created_at": "2020-11-07T21:19:24Z",
        "updated_at": "2025-04-26T08:56:50Z",
        "topics": [],
        "quality_score": 0.6000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2024-08-18T15:48:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3b9845d839b5f3efad676bd6b6d8969e2eb29380bb06bec32bec564b6805a41b/Fmstrat/winapps"
        ],
        "homepage": "",
        "readme_summary": "WinApps allows users to run Windows applications on Linux systems as if they were native applications. It achieves this by running a Windows RDP server in a background VM and creating shortcuts for installed applications, integrating them into the GNOME/KDE desktop. It also provides Nautilus integration for opening files with Windows applications and supports any installed application on the system.",
        "key_features": [
            "Runs Windows applications in Linux (Ubuntu/Fedora)",
            "Integrates Windows apps into GNOME/KDE desktop environments",
            "Provides Nautilus integration for opening files with Windows apps",
            "Supports any installed application on the system",
            "Automatically detects applications through registry scanning",
            "Offers high-resolution icons and mime type support for configured applications",
            "Access to home directory files via \\tsclient\\home mount"
        ],
        "primary_use_case": "Running Windows applications seamlessly within a Linux environment.",
        "open_issues": 225,
        "cover_image_prompt": "Imagine a skilled artisan in a workshop, seamlessly integrating a stained-glass window (representing a Windows application) into a modern, minimalist Linux home. The artisan carefully fits the window into the wall, making it appear as a natural part of the structure. Tools and blueprints with subtle UI elements are scattered around the workshop. Digital particles subtly connect the window to the surrounding Linux environment. The scene is bathed in soft, ambient light, creating a sense of harmony and integration. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 477528511,
        "name": "bore",
        "description": "🕳 bore is a simple CLI tool for making tunnels to localhost",
        "url": "https://github.com/ekzhang/bore",
        "language": "Rust",
        "stars": 9657,
        "forks": 409,
        "created_at": "2022-04-04T02:47:54Z",
        "updated_at": "2025-04-26T09:09:51Z",
        "topics": [
            "cli",
            "localhost",
            "networking",
            "proxy",
            "rust",
            "self-hosted",
            "tcp",
            "tunnel"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-04-14T21:52:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/bb75698ad7d5065d8a35f8aceec5b71b5bb96b041f779b5c39d1da3a0b63e488/ekzhang/bore"
        ],
        "homepage": "http://bore.pub",
        "readme_summary": "Bore is a CLI tool that creates TCP tunnels to localhost, enabling users to expose local ports to the internet. It's designed for simple installation, self-hosting, and efficient TCP traffic forwarding. Bore allows developers to easily share and test local applications without complex configurations.",
        "key_features": [
            "TCP Tunneling",
            "Local Port Forwarding",
            "Self-Hosting",
            "Simple Installation",
            "Minimal Dependencies"
        ],
        "primary_use_case": "Exposing local ports to a remote server, bypassing NAT firewalls for development and testing purposes.",
        "open_issues": 5,
        "cover_image_prompt": "A skilled artisan meticulously crafting a tunnel through a mountain, connecting a bustling town on one side to a remote village on the other. The artisan uses a modern drill with a digital display showing network traffic. Light streams through the tunnel, illuminating data packets flowing seamlessly between the two locations. Small UI elements displaying 'localhost' and a port number are subtly integrated into the mountain face. The scene is set in a vibrant, stylized landscape with clear, bright colors. The image should be in a 3D isometric illustration style with a focus on clarity and detail."
    },
    {
        "id": 907966119,
        "name": "twice",
        "description": "chrome extension asking you to think twice when visit social media sites",
        "url": "https://github.com/chaosprint/twice",
        "language": "JavaScript",
        "stars": 56,
        "forks": 5,
        "created_at": "2024-12-24T18:16:42Z",
        "updated_at": "2025-04-26T08:28:52Z",
        "topics": [],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2025-02-03T14:41:47Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7fda32b7704e7f909c8583cf225d188b2ce6f4ed6cc9470fdf3e6526b89ce1da/chaosprint/twice"
        ],
        "homepage": "",
        "readme_summary": "The 'Twice' Chrome extension helps users be more mindful of their social media habits. It displays a reminder when a user attempts to visit a social media site, encouraging them to pause and reflect on their intention, promoting more intentional browsing habits.",
        "key_features": [
            "Displays a gentle reminder when visiting social media sites",
            "Promotes mindful internet usage",
            "Helps reduce impulsive social media checking"
        ],
        "primary_use_case": "To promote mindful social media usage by prompting users to think twice before visiting social media sites.",
        "open_issues": 2,
        "cover_image_prompt": "A person standing at a crossroads, one path leading to a vibrant social media landscape filled with glowing screens and notifications, the other path leading to a serene garden filled with books and nature. The person is pausing, with a thought bubble showing a question mark above their head. A small, transparent Chrome extension icon hovers near the person's hand, subtly influencing their decision. The scene is set at twilight, with soft, diffused lighting. Small UI elements showing social media feeds are subtly embedded in the social media landscape. The composition is balanced, with a clear contrast between the two paths. The image should be in a digital painting style with clear outlines and a calming color scheme."
    },
    {
        "id": 80792015,
        "name": "shrub",
        "description": "A bonsai plant simulation game for the terminal.",
        "url": "https://github.com/fimbaz/shrub",
        "language": "C",
        "stars": 32,
        "forks": 1,
        "created_at": "2017-02-03T02:59:52Z",
        "updated_at": "2025-04-26T09:05:57Z",
        "topics": [
            "automata",
            "cellular",
            "cellular-automata",
            "evolution",
            "game",
            "genetics",
            "nature",
            "plants",
            "terminal-based"
        ],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2021-03-16T05:29:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/32a1cc5960d78c78f305e63bd1247babfe17ab863599e0c570a4d3467378c22e/fimbaz/shrub"
        ],
        "homepage": "",
        "readme_summary": "Shrub is a terminal-based bonsai plant simulation game written in C. It simulates a small ecosystem with plants, water, wind, dirt, pollen, and seeds, allowing users to observe plant growth, reproduction, and death within a cellular automata-driven world.",
        "key_features": [
            "TUI pet plant simulator",
            "Big scrolly worlds",
            "Water, wind, dirt simulation",
            "Plant growth and reproduction",
            "Pollen and seed dispersal",
            "Genetic simulation",
            "Plant death and decay",
            "Resource view"
        ],
        "primary_use_case": "Simulating a bonsai plant ecosystem within a terminal environment.",
        "open_issues": 0,
        "cover_image_prompt": "A gardener tending to a bonsai tree within a terminal window. The tree's roots extend into lines of code, and its leaves display cellular automata patterns. The gardener carefully prunes the tree with digital shears, influencing its growth and evolution. Pollen particles float in the air, represented by stylized pixels. A small UI panel displays genetic information about the plant. The scene is set in a brightly lit, minimalist workspace. The image should be in a flat design style with clear iconography and a vibrant color scheme, emphasizing the blend of nature and technology."
    },
    {
        "id": 275386910,
        "name": "maigret",
        "description": "🕵️‍♂️ Collect a dossier on a person by username from thousands of sites",
        "url": "https://github.com/soxoj/maigret",
        "language": "Python",
        "stars": 15173,
        "forks": 1038,
        "created_at": "2020-06-27T14:16:42Z",
        "updated_at": "2025-04-26T09:39:34Z",
        "topics": [
            "blueteam",
            "cybersecurity",
            "identification",
            "investigation",
            "namechecker",
            "open-source",
            "osint",
            "osint-framework",
            "osint-python",
            "parsing",
            "python",
            "python3",
            "redteam",
            "scraping",
            "sherlock",
            "social-network",
            "socmint",
            "username",
            "username-checker",
            "username-search"
        ],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-02-18T09:50:29Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/275386910/d6d7e536-6597-40dc-a204-391431ce57db"
        ],
        "homepage": "https://t.me/osint_maigret_bot",
        "readme_summary": "Maigret is an OSINT tool that allows users to gather information about individuals based on their usernames across a vast number of websites. It parses profile pages, extracts personal information, and performs recursive searches to uncover related accounts and data. The tool supports searching by tags, detects censorship and captchas, and includes features for request retries and checking Tor, I2P, and domain sites.",
        "key_features": [
            "Profile page parsing and information extraction",
            "Recursive search by usernames and IDs",
            "Search by tags (site categories, countries)",
            "Censorship and captcha detection",
            "Request retries",
            "Support for Tor, I2P, and domain checking"
        ],
        "primary_use_case": "Collecting a dossier on a person by username from thousands of sites without requiring API keys.",
        "open_issues": 273,
        "cover_image_prompt": "A detective, reminiscent of Jules Maigret, meticulously piecing together a dossier on a person using fragments of information found across a vast digital landscape. The detective stands before a large corkboard covered with interconnected profiles, usernames, and website logos, each linked by threads representing the connections Maigret uncovers. A magnifying glass highlights a username on one of the profiles. Subtle digital elements like code snippets and website icons float around the scene, subtly connecting the investigation to the digital world. The scene is set in a dimly lit, classic detective's office with a focused spotlight on the corkboard. The image should be in a digital painting style with clear outlines and a slightly noir aesthetic."
    }
]