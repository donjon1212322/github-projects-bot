[
    {
        "id": 914071495,
        "name": "firefox-translator",
        "description": "Use Firefox Translation Models for on-device translation on Android",
        "url": "https://github.com/DavidVentura/firefox-translator",
        "language": "Kotlin",
        "stars": 208,
        "forks": 8,
        "created_at": "2025-01-08T22:26:55Z",
        "updated_at": "2025-09-30T10:04:03Z",
        "topics": [],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-09-30T10:03:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9edf66125792e0aa8ac8a63616e855d9f8b3b34b9baa6c35a599a515ed56ed93/DavidVentura/firefox-translator"
        ],
        "homepage": "",
        "readme_summary": "The firefox-translator repository hosts an Android translator app that leverages Firefox Translation Models for on-device, offline translation. It supports text and image translation, automatic language detection, transliteration for non-latin scripts, and includes a built-in word dictionary.",
        "key_features": [
            "Complete offline translation using on-device models",
            "Automatic language detection",
            "Transliteration for non-latin scripts",
            "Built-in word dictionary",
            "Image translation"
        ],
        "primary_use_case": "Offline text and image translation on Android devices.",
        "open_issues": 9,
        "cover_image_prompt": "Imagine a skilled linguist in a cozy study, surrounded by stacks of books in various languages. The linguist holds a smartphone, effortlessly translating text and images from different sources into a single, understandable language. Digital particles flow from the phone, visually representing the translation process. Small UI elements on nearby screens display the app's interface and language options. The scene is bathed in warm, inviting light, creating a sense of ease and accessibility. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1065631155,
        "name": "ghostscan",
        "description": "A modern, Rust-powered Linux scanner that unmasks hidden rootkits, stealthy eBPF tricks, and ghost processes in one fast sweep (45+ scanners)",
        "url": "https://github.com/h2337/ghostscan",
        "language": "Rust",
        "stars": 65,
        "forks": 1,
        "created_at": "2025-09-28T05:45:03Z",
        "updated_at": "2025-09-30T07:41:17Z",
        "topics": [
            "antivirus",
            "linux-security",
            "malware-detection",
            "rootkit-detection",
            "scanner",
            "security",
            "security-scanner",
            "security-tools"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-09-29T07:10:22Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d2540af5448b69d0228c37071a4e97600ec0372c1f66460a5322873fc08db5b6/h2337/ghostscan"
        ],
        "homepage": "",
        "readme_summary": "ghostscan is a Rust-based Linux security scanner designed for incident response. It performs a fast, one-shot sweep to detect hidden rootkits, eBPF tricks, and ghost processes by analyzing various system aspects like the kernel, procfs, bpffs, and systemd.",
        "key_features": [
            "Hidden LKM detection",
            "Kernel taint analysis",
            "Ftrace redirection detection",
            "Syscall table integrity verification",
            "BPF object and program analysis",
            "Hidden PID and process detection",
            "Suspicious ptrace edge detection",
            "Detection of processes running from deleted binaries",
            "Hidden listener detection",
            "ld.so.preload tamper detection",
            "Cron and Systemd ghost job detection",
            "SSH foothold detection",
            "OverlayFS whiteout detection",
            "PAM/NSS module analysis",
            "Library search hijack detection",
            "Kernel text RO verification",
            "Sudoers analysis"
        ],
        "primary_use_case": "Linux incident response and rootkit detection.",
        "open_issues": 0,
        "cover_image_prompt": "A seasoned detective, equipped with a magnifying glass that emits digital particles, meticulously examines the foundation of a towering server building. The magnifying glass reveals hidden anomalies and ghostly figures lurking within the server's structure, representing rootkits and hidden processes. Small UI elements display system logs and security metrics. The scene is set in a dimly lit server room with dramatic lighting. The composition is focused and clear, emphasizing the detective's scrutiny. The image should be in a digital painting style with clean lines and a dark, mysterious color scheme."
    },
    {
        "id": 958273723,
        "name": "every-pdf",
        "description": "✍️ A powerful, all-in-one desktop PDF toolkit to edit, convert, merge, and secure your documents. Built with Electron, Next.js, and Python.",
        "url": "https://github.com/DDULDDUCK/every-pdf",
        "language": "HTML",
        "stars": 897,
        "forks": 57,
        "created_at": "2025-03-31T23:42:15Z",
        "updated_at": "2025-09-30T08:49:10Z",
        "topics": [
            "cross-platform",
            "desktop-application",
            "electron",
            "fastapi",
            "nextjs",
            "pdf",
            "pdf-converter",
            "pdf-viewer",
            "python"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-08-12T13:47:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ee18769fd16edc85a9dcfb61ea81f4ca17b1fe8b08c128d655830d4192c7ec5e/DDULDDUCK/every-pdf"
        ],
        "homepage": "https://github.com/DDULDDUCK/every-pdf/releases",
        "readme_summary": "The 'every-pdf' repository provides a cross-platform desktop application for PDF editing, conversion, merging, and security. It's built using Electron, Next.js, and Python, offering a comprehensive toolkit for managing PDF documents.",
        "key_features": [
            "PDF Editor",
            "Convert PDF",
            "Split Pages",
            "Merge Files",
            "Watermark",
            "Manage Pages",
            "Encrypt/Decrypt"
        ],
        "primary_use_case": "Desktop PDF editing, conversion, merging, and security.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled artisan sitting at a workbench, carefully shaping and refining a stack of paper documents into a perfectly formed, glowing PDF icon. The artisan uses various tools, each representing a different function: scissors for splitting, glue for merging, a stamp for watermarking, and a lock for encryption. Subtle UI elements float around the scene, displaying options for conversion and editing. The workbench is bathed in soft, focused light, highlighting the transformation process. The image should be in a detailed 3D isometric illustration style with a warm color scheme."
    },
    {
        "id": 951665915,
        "name": "Mate-Engine",
        "description": "A free Desktop Mate alternative with a lightweight interface and custom VRM support, though with more features.",
        "url": "https://github.com/shinyflvre/Mate-Engine",
        "language": "ShaderLab",
        "stars": 1911,
        "forks": 133,
        "created_at": "2025-03-20T03:41:52Z",
        "updated_at": "2025-09-30T09:37:51Z",
        "topics": [
            "anime",
            "desktop",
            "desktop-mate",
            "desktop-pet",
            "mate-engine",
            "pet"
        ],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-09-30T02:19:47Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2fe90d53eef5232e1086063c55e2cc82e0088edb6771f033fe610ce7afd0166e/shinyflvre/Mate-Engine"
        ],
        "homepage": "",
        "readme_summary": "Mate Engine is a free, open-source, and moddable alternative to Desktop Mate, designed to provide users with more freedom and fewer limitations. It supports custom VRM avatars, custom shaders, and offers a variety of features not found in Desktop Mate, such as animation modding and built-in SDK.",
        "key_features": [
            "Open Source",
            "Mod Support",
            "Custom VRM Support",
            "Custom Shaders",
            ".ME File Format",
            "Dance to Music",
            "Animation Modding",
            "Built-In SDK"
        ],
        "primary_use_case": "Creating and customizing desktop companions (avatars) with VRM support and modding capabilities.",
        "open_issues": 28,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling a miniature VRM avatar inside a transparent desktop clock. The clock's gears are replaced with intricate animation controls, allowing the clockmaker to bring the avatar to life. The avatar dances and interacts with UI elements projected onto the clock face. Small code snippets and shader graphs float around the scene, subtly connecting the metaphor to software development. The scene is set in a cozy workshop with warm, inviting lighting. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 1026808170,
        "name": "TubeSummary",
        "description": null,
        "url": "https://github.com/n0vella/TubeSummary",
        "language": "TypeScript",
        "stars": 48,
        "forks": 4,
        "created_at": "2025-07-26T16:51:01Z",
        "updated_at": "2025-09-30T09:44:14Z",
        "topics": [],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-08-02T09:30:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/80297d419ab4677f7fd6ffc3883dc7a1e6526836fa67b99eeac5e822901b4d06/n0vella/TubeSummary"
        ],
        "homepage": null,
        "readme_summary": "TubeSummary is a browser extension that uses AI to generate summaries of YouTube videos. It allows users to quickly extract key insights and ask follow-up questions about the content, enhancing learning and productivity. The extension supports multiple LLM providers and offers customizable prompts and credentials.",
        "key_features": [
            "Summarize YouTube videos instantly",
            "AI-powered follow-up Q&A",
            "Support for multiple LLM providers (OpenAI-compatible)",
            "Customizable prompts and provider credentials",
            "Works on Firefox and Chrome"
        ],
        "primary_use_case": "Quickly summarizing YouTube videos and extracting key insights using AI.",
        "open_issues": 0,
        "cover_image_prompt": "A librarian stands in a grand library, holding a glowing magnifying glass over a mountain of scattered video reels. The magnifying glass focuses the chaotic reels into a single, clear summary sheet that floats beside them. Small UI elements showing a YouTube video and the TubeSummary extension are subtly visible on nearby screens. Digital particles representing AI flow from the magnifying glass to the summary sheet. The scene is set in a warmly lit, classic library with high ceilings. The composition is focused and clear, with a golden color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]