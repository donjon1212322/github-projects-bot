[
    {
        "id": 952018616,
        "name": "magnitude",
        "description": "Open-source, vision-first browser agent",
        "url": "https://github.com/magnitudedev/magnitude",
        "language": "TypeScript",
        "stars": 3307,
        "forks": 137,
        "created_at": "2025-03-20T15:50:12Z",
        "updated_at": "2025-07-14T10:02:28Z",
        "topics": [
            "ai",
            "automation",
            "browser",
            "framework",
            "javascipt",
            "playwright",
            "rpa",
            "selenium",
            "test",
            "typescript"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T03:24:03Z",
        "media_urls": [
            "https://opengraph.githubassets.com/45a690dc73e4981f750ff29ae6ca3dac66b2a3245d25ca5300762ba335c4d0ba/magnitudedev/magnitude"
        ],
        "homepage": "https://magnitude.run",
        "readme_summary": "Magnitude is an open-source, vision-first browser agent that uses AI to enable control of browsers with natural language. It allows users to navigate, interact with, and extract data from web interfaces, and includes a built-in test runner. It can be used for automating tasks, integrating apps, extracting data, and testing web apps.",
        "key_features": [
            "Vision-based browser navigation using natural language",
            "Precise interaction with web elements using mouse and keyboard",
            "Intelligent data extraction from web pages",
            "Built-in test runner with visual assertions"
        ],
        "primary_use_case": "Automating web tasks, integrating applications without APIs, extracting data, and testing web applications.",
        "open_issues": 13,
        "cover_image_prompt": "A skilled cartographer using a magical lens to navigate a complex web of interconnected islands. The lens reveals hidden pathways and structures within the islands, representing the agent's ability to understand and interact with diverse web interfaces. The cartographer is surrounded by floating UI elements and data streams, subtly connecting the scene to software. A large screen in the background displays the 'Magnitude' logo integrated into a map interface. The scene is set in a bright, airy workshop filled with maps and navigational tools. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1003496502,
        "name": "social-poster",
        "description": "A powerful CLI tool for posting to multiple social media platforms with Puppeteer-based authentication. No restrictive APIs - just browser automation that works like a human.",
        "url": "https://github.com/profullstack/social-poster",
        "language": "JavaScript",
        "stars": 11,
        "forks": 1,
        "created_at": "2025-06-17T08:33:13Z",
        "updated_at": "2025-07-14T04:10:15Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-07-12T13:53:24Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7e82c60f620ff7e1d21d70c89f9d5211948b3a23f487c0468f73c729cb19ddf3/profullstack/social-poster"
        ],
        "homepage": "",
        "readme_summary": "The Social Poster is a CLI tool designed to automate social media posting across various platforms like X, TikTok, and LinkedIn. It uses Puppeteer for browser-based authentication, bypassing API restrictions, and offers features like AI-powered content generation, session management, and dry-run mode for previewing posts. The tool supports text, links, images, and videos, enabling users to efficiently manage their social media presence.",
        "key_features": [
            "Multi-platform posting",
            "Auto recording",
            "AI-powered content generation",
            "Browser-based authentication",
            "Session management",
            "Rich content support",
            "Platform targeting",
            "Dry run mode",
            "Status monitoring"
        ],
        "primary_use_case": "Automated posting to multiple social media platforms.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled artisan crafting personalized messages onto various social media platforms using a set of specialized tools. The artisan stands at a central workbench, carefully selecting text, images, and links, then stamps each element onto corresponding platform icons (X, TikTok, Pinterest, LinkedIn, Reddit, Facebook). Subtle digital interfaces glow softly around the workbench, displaying AI-generated content suggestions and real-time posting previews. The scene is bathed in warm, inviting light, emphasizing the ease and control the artisan has over the entire process. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 577753426,
        "name": "LMOps",
        "description": "General technology for enabling AI capabilities w/ LLMs and MLLMs",
        "url": "https://github.com/microsoft/LMOps",
        "language": "Python",
        "stars": 4053,
        "forks": 321,
        "created_at": "2022-12-13T12:56:21Z",
        "updated_at": "2025-07-14T02:38:46Z",
        "topics": [
            "agi",
            "gpt",
            "language-model",
            "llm",
            "lm",
            "lmops",
            "nlp",
            "pretraining",
            "prompt",
            "promptist",
            "x-prompt"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-06-30T11:40:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/502f97a1b4b733700df1fd7d6cb0858251e6216a5674605e368a6de80c987bb6/microsoft/LMOps"
        ],
        "homepage": "https://aka.ms/GeneralAI",
        "readme_summary": "LMOps is a research initiative focused on building AI products with foundation models. It provides technologies for prompt optimization, handling longer context, LLM alignment, faster inference, and customization. The repository aims to advance the development and deployment of AI capabilities using LLMs.",
        "key_features": [
            "Automatic Prompt Optimization",
            "Extensible Prompts",
            "Structured Prompting for Longer Context",
            "LLM Alignment",
            "LLM Acceleration for Faster Inference",
            "LLM Customization"
        ],
        "primary_use_case": "Enabling AI capabilities with Large Language Models (LLMs) and Generative AI models.",
        "open_issues": 58,
        "cover_image_prompt": "A skilled architect meticulously crafting a blueprint for a towering skyscraper, representing a complex AI model. The blueprint is filled with intricate details and glowing lines, symbolizing the underlying code and algorithms. The architect uses advanced tools and interfaces, subtly displaying the repository name 'LMOps' on a digital screen. The scene is set in a futuristic design studio with soft, ambient lighting. The image should be in a 3D isometric illustration style with clean lines and vibrant colors, conveying precision and innovation."
    },
    {
        "id": 447609265,
        "name": "instill-core",
        "description": "ðŸ”® Instill Core is a full-stack AI infrastructure tool for data, model and pipeline orchestration, designed to streamline every aspect of building versatile AI-first applications",
        "url": "https://github.com/instill-ai/instill-core",
        "language": "Python",
        "stars": 2262,
        "forks": 116,
        "created_at": "2022-01-13T13:27:40Z",
        "updated_at": "2025-07-14T09:10:11Z",
        "topics": [
            "ai",
            "api",
            "cli",
            "developer-tools",
            "etl",
            "generative-ai",
            "golang",
            "gpt",
            "hacktoberfest",
            "llm",
            "low-code",
            "no-code",
            "open-source",
            "pipeline",
            "python",
            "stable-diffusion",
            "typescript",
            "unstructured-data"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T09:10:06Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1b80255c8f47c0227364dbe6169660933b158575489893809ec1d48cc63f1c6b/instill-ai/instill-core"
        ],
        "homepage": "https://www.instill-ai.com",
        "readme_summary": "Instill Core is a full-stack AI infrastructure tool designed to streamline the development of AI-first applications. It offers a complete unstructured data solution, including ETL processing, AI-readiness, open-source LLM hosting, and RAG capabilities. The platform focuses on orchestrating data, models, and pipelines to simplify AI application development.",
        "key_features": [
            "ETL processing",
            "AI-readiness",
            "Open-source LLM hosting",
            "RAG capabilities",
            "Data orchestration",
            "Model orchestration",
            "Pipeline orchestration"
        ],
        "primary_use_case": "Building versatile AI-first applications by streamlining data, model, and pipeline orchestration.",
        "open_issues": 35,
        "cover_image_prompt": "A skilled architect overseeing the construction of a towering AI city, where data streams flow like rivers, models stand as magnificent skyscrapers, and pipelines act as efficient transportation networks. The architect holds a blueprint displaying a simplified view of the city's infrastructure. Subtle tech elements, such as glowing data particles and miniature UI screens, are integrated into the scene. The city is set against a vibrant sunset backdrop, symbolizing the dawn of AI-first applications. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 783038627,
        "name": "redka",
        "description": "Redis re-implemented with SQL",
        "url": "https://github.com/nalgeon/redka",
        "language": "Go",
        "stars": 3872,
        "forks": 115,
        "created_at": "2024-04-06T19:10:02Z",
        "updated_at": "2025-07-14T09:52:57Z",
        "topics": [
            "database",
            "key-value",
            "postgres",
            "redis",
            "sqlite"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T09:52:47Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/783038627/6aedc9a7-e25a-4b0e-a6ba-3169932ee993"
        ],
        "homepage": "",
        "readme_summary": "Redka is a Redis reimplementation that uses SQL as its underlying data store, offering persistence and ACID transactions. It can be used as an embedded cache in Go applications or as a standalone server, supporting both SQLite and PostgreSQL backends. Redka aims to provide Redis-like data structures with the benefits of a relational database.",
        "key_features": [
            "Redis API compatibility with SQL backend",
            "Data persistence beyond RAM limits",
            "ACID transaction support",
            "SQL views for data analysis",
            "SQLite and PostgreSQL backend options",
            "In-process Go API and standalone server modes"
        ],
        "primary_use_case": "Embedded cache for Go applications using SQLite or PostgreSQL.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled sculptor meticulously chiseling away at a massive block of granite, revealing a perfectly formed Redis logo hidden within. The sculptor uses SQL commands as their tools, each command represented by glowing runes etched onto the chisels. Digital particles float around the sculpture, subtly forming data structures like lists and sets. A small screen in the background displays a simplified SQL query and its corresponding Redis output. The scene is set in a brightly lit workshop with a clean, focused composition. The image should be in a 3D isometric illustration style with rich details and vibrant colors, conveying the idea of Redis functionality being carved from SQL."
    }
]