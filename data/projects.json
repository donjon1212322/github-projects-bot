[
    {
        "id": 1001684671,
        "name": "RapidRAW",
        "description": "A beautiful, non-destructive, and GPU-accelerated RAW image editor built with performance in mind.",
        "url": "https://github.com/CyberTimon/RapidRAW",
        "language": "Rust",
        "stars": 1733,
        "forks": 34,
        "created_at": "2025-06-13T20:16:40Z",
        "updated_at": "2025-07-17T09:43:59Z",
        "topics": [
            "editing",
            "image-processing",
            "lightroom",
            "masks",
            "raw"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-16T17:36:25Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1a827efef3e005eb8e9146d58a9b649e3d07bbc64b551d32448bbf52eb03d19d/CyberTimon/RapidRAW"
        ],
        "homepage": "",
        "readme_summary": "RapidRAW is a GPU-accelerated RAW image editor designed for photographers seeking a fast and intuitive editing experience. It offers non-destructive editing, masking capabilities, and a lightweight cross-platform package. While not focused on perfect color accuracy, it prioritizes a fluid creative process with features like auto adjustments, library filters, and batch exporting.",
        "key_features": [
            "Non-destructive editing",
            "GPU-accelerated",
            "RAW image support",
            "Masking",
            "Lightweight package",
            "Cross-platform (Windows, macOS, Linux)",
            "Auto Adjustment Feature",
            "Library Filters",
            "Double Click Zoom",
            "Native Linux Taskbar",
            "Mask containers",
            "Curves tool",
            "Batch export",
            "Async thumbnail generation",
            "Image rating filter",
            "Metadata panel"
        ],
        "primary_use_case": "RAW image editing for photographers who prioritize speed and a clean, simple workflow.",
        "open_issues": 41,
        "cover_image_prompt": "A skilled artisan meticulously crafting a photograph using a digital easel and palette. The easel displays a RAW image transforming into a vibrant, polished masterpiece with subtle GPU-accelerated effects shimmering around it. The palette features intuitive sliders and masking tools. The artisan's workspace is bathed in soft, creative lighting, with the RapidRAW logo subtly displayed on the easel's frame. Small UI elements and data visualizations float around the scene, connecting the artistic process to software. The composition is clean and focused, with a warm color scheme. The image should be in a digital painting style with clear outlines and rich details."
    },
    {
        "id": 100093863,
        "name": "brotab",
        "description": "Control your browser's tabs from the command line",
        "url": "https://github.com/balta2ar/brotab",
        "language": "Python",
        "stars": 441,
        "forks": 37,
        "created_at": "2017-08-12T06:26:09Z",
        "updated_at": "2025-07-17T02:13:48Z",
        "topics": [
            "automation",
            "browser",
            "browser-extension",
            "chrome-extension",
            "cli",
            "command-line",
            "command-line-tool",
            "commandline",
            "firefox",
            "firefox-extension",
            "javascript",
            "productivity",
            "python"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-01-22T20:02:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b7e139b16a068a1e88273963181c6c84d445d90bfc9947f0fce90117a56f7228/balta2ar/brotab"
        ],
        "homepage": null,
        "readme_summary": "BroTab is a command-line tool for managing browser tabs. It allows users to list, close, reorder, open, and activate tabs directly from the terminal. BroTab supports various operations like searching tabs, moving them between windows, and updating tab properties, enhancing productivity for users who prefer command-line interfaces.",
        "key_features": [
            "List browser tabs",
            "Close browser tabs",
            "Reorder browser tabs",
            "Open URLs in tabs",
            "Activate specific tabs",
            "Search tabs",
            "Move tabs between windows",
            "Update tab properties (URL, muted state)"
        ],
        "primary_use_case": "Managing browser tabs from the command line.",
        "open_issues": 58,
        "cover_image_prompt": "A conductor standing before a massive orchestra of browser tabs, each instrument representing a different website. The conductor wields a command-line baton, precisely controlling the tabs' arrangement and volume. UI elements float around the orchestra, displaying commands and tab IDs. The scene is set in a grand concert hall with digital particles swirling around the tabs. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 698675911,
        "name": "brewkit",
        "description": "Container-native build system",
        "url": "https://github.com/ispringtech/brewkit",
        "language": "Go",
        "stars": 23,
        "forks": 2,
        "created_at": "2023-09-30T16:12:49Z",
        "updated_at": "2025-07-17T08:28:09Z",
        "topics": [],
        "quality_score": 0.5,
        "contributors_count": 0,
        "last_commit_date": "2025-05-14T12:06:58Z",
        "media_urls": [
            "https://opengraph.githubassets.com/855a249d431dca65b3bb323e2997bf4e0cc6047a837e5c6e46ce2dbe1cbc680c/ispringtech/brewkit"
        ],
        "homepage": null,
        "readme_summary": "BrewKit is a container-native build system that leverages BuildKit to provide repeatable, host-agnostic builds. It focuses on containerizing the build process and offers features like aggressive caching, mounted secrets, and JSON/JSONNET based build definitions. BrewKit aims to be a single tool for building projects across Docker environments.",
        "key_features": [
            "BuildKit as core",
            "Distributed cache",
            "Automatic garbage collection",
            "Aggressive-caching",
            "Mounted secrets",
            "Host configuration agnostic",
            "Output artifacts to Host filesystem",
            "JSON based build-definition format",
            "JSONNET configuration language"
        ],
        "primary_use_case": "Container-native build system for repeatable builds, host agnostic and build process containerization.",
        "open_issues": 3,
        "cover_image_prompt": "A master brewer in a high-tech brewery overseeing a complex system of interconnected containers. Each container represents a different stage of the build process, with ingredients (code) being carefully added and processed. The final product, a perfectly crafted application, emerges from the last container, ready for deployment. Digital displays show build logs and metrics, while robotic arms ensure precise execution. The scene is set in a clean, modern brewery with bright, focused lighting. The image should be in 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 856003244,
        "name": "jessy-go",
        "description": "Jessy is a high-performance JSON library for Go",
        "url": "https://github.com/avpetkun/jessy-go",
        "language": "Go",
        "stars": 68,
        "forks": 0,
        "created_at": "2024-09-11T20:19:09Z",
        "updated_at": "2025-07-17T04:23:26Z",
        "topics": [
            "fast",
            "go",
            "json"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-05-12T02:06:14Z",
        "media_urls": [
            "https://opengraph.githubassets.com/4868a62b1a1db347aa33145a8cbd5611cadf3f985a38b0d54d0bf85654067497/avpetkun/jessy-go"
        ],
        "homepage": "",
        "readme_summary": "Jessy is a high-performance JSON library for Go designed as a drop-in replacement for the standard encoding/json package. It prioritizes speed and reduced memory usage through techniques like unsafe memory access and pre-cached encoders. Jessy offers both compatibility modes and faster, non-compatible options, along with customization through interfaces for specialized encoding needs.",
        "key_features": [
            "High-performance JSON library for Go",
            "Drop-in replacement for encoding/json",
            "Focus on speed and reduced memory usage",
            "Provides both compatibility and fast marshal/unmarshal options",
            "Customizable encoding through interfaces"
        ],
        "primary_use_case": "Accelerating JSON serialization and deserialization in Go applications while minimizing memory allocation.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled chef in a bustling kitchen, expertly juggling flaming pans labeled 'JSON Data'. With incredible speed and precision, the chef transforms the raw data into perfectly plated dishes, each representing a structured data format. The kitchen is adorned with subtle digital interfaces displaying benchmark statistics and code snippets, highlighting the chef's efficiency and minimal resource usage. The scene is bathed in warm, inviting light, emphasizing the speed and elegance of the data transformation. This conceptual illustration is in a vibrant, detailed digital painting style."
    },
    {
        "id": 935604638,
        "name": "agenticSeek",
        "description": "Fully Local Manus AI. No APIs, No $200 monthly bills. Enjoy an autonomous agent that thinks, browses the web, and code for the sole cost of electricity. ðŸ”” Official updates only via twitter @Martin993886460 (Beware of fake account)",
        "url": "https://github.com/Fosowl/agenticSeek",
        "language": "Python",
        "stars": 20119,
        "forks": 1991,
        "created_at": "2025-02-19T18:03:06Z",
        "updated_at": "2025-07-17T09:14:26Z",
        "topics": [
            "agentic-ai",
            "agents",
            "ai",
            "autonomous-agents",
            "deepseek-r1",
            "llm",
            "llm-agents",
            "voice-assistant"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-13T10:52:03Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e4a31f421a4660acc5b70701a13086403f01dd0e00fafc6c463131f459e65198/Fosowl/agenticSeek"
        ],
        "homepage": "http://agenticseek.tech",
        "readme_summary": "AgenticSeek is a local, voice-enabled AI assistant that prioritizes user privacy by running entirely on local hardware. It autonomously browses the web, writes code in multiple languages, and plans complex tasks using a smart agent selection system. The project aims to provide a fully private and customizable AI experience without cloud dependencies.",
        "key_features": [
            "Fully local and private operation",
            "Autonomous web browsing",
            "Autonomous coding assistant",
            "Smart agent selection",
            "Plans and executes complex tasks",
            "Voice-enabled interface (in progress)"
        ],
        "primary_use_case": "A fully local, private alternative to cloud-based AI assistants, enabling autonomous web browsing, coding, and task planning without data sharing.",
        "open_issues": 25,
        "cover_image_prompt": "A diligent librarian meticulously organizing digital scrolls into a vast, interconnected network of knowledge. The librarian, wearing spectacles and a focused expression, uses a glowing stylus to categorize and link the scrolls, representing web pages and code repositories. A holographic display shows a simplified user interface with search results and code snippets. The scene is set in a futuristic library with towering shelves filled with data. The image should be in 3D isometric illustration style with clear iconography, a blue and white color scheme, and rich details."
    },
    {
        "id": 28283593,
        "name": "boulder",
        "description": "An ACME-based certificate authority, written in Go. ",
        "url": "https://github.com/letsencrypt/boulder",
        "language": "Go",
        "stars": 5494,
        "forks": 612,
        "created_at": "2014-12-21T00:29:54Z",
        "updated_at": "2025-07-17T08:40:34Z",
        "topics": [
            "acme",
            "boulder",
            "ca",
            "certificate-authority",
            "go",
            "lets-encrypt",
            "pki",
            "rfc8555",
            "tls"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T23:45:56Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3e484f97a7845b071b82ea8e9ae5b78c97b96100763d104d23df118bf267c25b/letsencrypt/boulder"
        ],
        "homepage": "",
        "readme_summary": "Boulder is an ACME-based certificate authority implemented in Go. It provides automated certificate issuance and revocation using the ACME protocol. The architecture is component-based, utilizing gRPC for inter-component communication, and a Docker environment is provided for development.",
        "key_features": [
            "ACME protocol implementation",
            "Certificate issuance and revocation",
            "Component-based architecture (Web Front Ends, Registration Authority, Validation Authority, Certificate Authority, Storage Authority, Publisher, OCSP Responder, CRL Updater)",
            "gRPC for inter-component communication",
            "Docker-based development environment"
        ],
        "primary_use_case": "Running a certificate authority (CA) that implements the ACME protocol, as used by Let's Encrypt.",
        "open_issues": 166,
        "cover_image_prompt": "A master locksmith meticulously crafting digital certificates within a secure vault. The locksmith uses a specialized key-making machine that converts requests (represented as glowing blueprints) into physical certificate keys. These keys are then carefully placed into lockboxes, ready to secure digital assets. UI elements showing ACME protocol details are subtly integrated into the machine. The vault is bathed in soft, secure lighting. The image should be in 3D isometric illustration style with rich details and a focus on clarity."
    }
]