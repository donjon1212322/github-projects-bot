[
    {
        "id": 1003203718,
        "name": "Spline-Path-Control",
        "description": "Create shapes that follow a spline path. Import background image, edit splines, and export for use in VACE.",
        "url": "https://github.com/WhatDreamsCost/Spline-Path-Control",
        "language": "JavaScript",
        "stars": 413,
        "forks": 51,
        "created_at": "2025-06-16T19:34:02Z",
        "updated_at": "2025-07-06T09:23:34Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-06-27T23:24:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1597e2fd739b06b3e7fd8412c5cebef0d52639d13325853b171700f5db0e3d91/WhatDreamsCost/Spline-Path-Control"
        ],
        "homepage": "",
        "readme_summary": "Spline Path Control is a JavaScript tool for creating and animating shapes along spline paths. It allows users to define complex motions with features like easing, tension control, and shape customization. The tool is primarily used to generate control videos, especially for applications like VACE, and exports animations as WebM files.",
        "key_features": [
            "Multi-Spline Editing",
            "Easy To Use Controls",
            "Start Frame Control",
            "Duration Control",
            "Easing Functions (Linear, Ease-in, Ease-out, Ease-in-out)",
            "Tension Adjustment",
            "Shape Customization (circle, square, triangle, size, fill color, border)",
            "Reference Image Import",
            "WebM Export"
        ],
        "primary_use_case": "Creating motion controls for animation, particularly for generating control videos for tools like VACE.",
        "open_issues": 10,
        "cover_image_prompt": "A skilled animator meticulously crafting the path of a graceful swan puppet using digital spline tools. The swan glides along a winding river projected onto a large screen, leaving a trail of shimmering light. The animator uses a digital interface with curve editors and shape customization options. Small UI elements display the Spline Path Control logo and animation parameters. The scene is set in a bright, modern animation studio with a focus on precision and artistry. The image should be in 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 358446986,
        "name": "waydroid",
        "description": "Waydroid uses a container-based approach to boot a full Android system on a regular GNU/Linux system like Ubuntu.",
        "url": "https://github.com/waydroid/waydroid",
        "language": "Python",
        "stars": 9480,
        "forks": 381,
        "created_at": "2021-04-16T02:02:14Z",
        "updated_at": "2025-07-06T09:50:39Z",
        "topics": [
            "android",
            "linux"
        ],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-06-29T19:45:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/56dcb05cc1fc7a4e53abc337dd2b5e6b266acc79c196fddf2e6d698855bfcd3c/waydroid/waydroid"
        ],
        "homepage": "https://waydro.id",
        "readme_summary": "Waydroid enables users to run a full Android system within a container on a GNU/Linux distribution. It leverages Linux namespaces to provide isolation and direct hardware access for the Android environment. This allows users to seamlessly run Android applications on their Linux desktops.",
        "key_features": [
            "Container-based Android system",
            "Runs on GNU/Linux systems",
            "Uses Linux namespaces for isolation",
            "Direct hardware access for Android system",
            "Based on LineageOS"
        ],
        "primary_use_case": "Running Android applications on GNU/Linux systems.",
        "open_issues": 710,
        "cover_image_prompt": "A skilled artisan meticulously crafting a miniature Android robot within a protective Linux fortress. The artisan carefully assembles the robot, representing Android, using various tools and components, while the fortress, symbolizing Linux, provides a secure and robust environment. The robot is then shown seamlessly interacting with the outside world through glowing portals, representing applications running on the host system. Small UI elements displaying Android code and Linux commands are subtly integrated into the fortress walls. The scene is set in a bright, clean workshop with a focus on precision and integration. The image should be in 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 394178477,
        "name": "SeaGlass",
        "description": "An exceptionally comprehensive skin for Linux centered around dynamic colors, translucency, and ease of use",
        "url": "https://github.com/alexhulbert/SeaGlass",
        "language": "Nix",
        "stars": 180,
        "forks": 2,
        "created_at": "2021-08-09T06:37:26Z",
        "updated_at": "2025-07-06T09:31:52Z",
        "topics": [],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-02-02T21:46:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a21da638b2447d505a13b04b86b2222ff64d8fba9021703191da7d2ed6503959/alexhulbert/SeaGlass"
        ],
        "homepage": "",
        "readme_summary": "SeaGlass is a Nix-based repository providing declarative Linux configuration files and scripts for reproducing a personalized setup. It features a dynamic color scheme engine, global window translucency, KDE support in Hyprland, and custom widgets, aiming for a consistent and visually appealing user experience.",
        "key_features": [
            "Dynamic color scheme engine for theming the entire OS and websites",
            "Global window background translucency effects",
            "Support for running KDE widgets and services in Hyprland",
            "Custom monitor configuration and power widgets",
            "Modern zsh config"
        ],
        "primary_use_case": "Declarative Linux configuration for a personalized setup with dynamic theming and translucency.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a skilled artisan in a brightly lit workshop, meticulously crafting a stained-glass window. Each pane of glass represents a different application or website, and the artisan carefully adjusts the colors and transparency of each pane to create a harmonious and visually appealing whole. Digital tools and color palettes are scattered around the workshop, subtly hinting at the software involved. The finished window glows with vibrant, dynamic colors and a subtle translucency. The scene should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 971123250,
        "name": "telert",
        "description": "Command‑line and Python utility that alerts on command completion, code execution and system monitoring events",
        "url": "https://github.com/navig-me/telert",
        "language": "Python",
        "stars": 207,
        "forks": 10,
        "created_at": "2025-04-23T03:50:04Z",
        "updated_at": "2025-07-06T09:37:02Z",
        "topics": [
            "alert",
            "cli",
            "command-line",
            "discord",
            "email",
            "fly-io",
            "microsoft-teams",
            "notification",
            "pushover",
            "railway",
            "render",
            "replit",
            "rest-api",
            "slack",
            "slack-bot",
            "teams",
            "telegram"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-06-20T08:18:34Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/971123250/5433c8f1-bec3-4f76-b609-eb1373884b44"
        ],
        "homepage": "",
        "readme_summary": "Telert is a versatile utility that provides multi-channel notifications for command completion, code execution, and system monitoring. It supports various notification channels, including messaging apps, email, and mobile devices. Telert can be used as a CLI tool, Python library, or a cloud-hosted API, making it suitable for diverse use cases such as long-running tasks, remote server monitoring, and CI/CD pipelines.",
        "key_features": [
            "Multi-channel notifications (Telegram, Teams, Slack, Discord, Email, Pushover)",
            "Command completion alerts",
            "Code execution alerts",
            "System monitoring (processes, logs, network endpoints)",
            "CLI tool and Python library",
            "Docker image available",
            "Cloud-hosted API deployments (Replit, Railway, Render, Fly.io)"
        ],
        "primary_use_case": "Alerting on command completion, code execution, and system monitoring events.",
        "open_issues": 1,
        "cover_image_prompt": "A diligent watchmaker meticulously assembling intricate clockwork gears, each gear representing a different command, process, or endpoint. As the gears mesh perfectly, a cascade of notifications – Telegram messages, Slack alerts, and email envelopes – are released, signaling successful completion and monitoring. The watchmaker's bench is subtly adorned with miniature screens displaying code snippets and server status. The scene is set in a brightly lit workshop filled with tools and components. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 972735507,
        "name": "tablecruncher",
        "description": "A lightweight, powerful CSV editor for macOS, Windows and Linux — with built-in JavaScript macros.",
        "url": "https://github.com/Tablecruncher/tablecruncher",
        "language": "C++",
        "stars": 201,
        "forks": 7,
        "created_at": "2025-04-25T15:14:35Z",
        "updated_at": "2025-07-06T09:13:51Z",
        "topics": [
            "c-plus-plus",
            "cpp",
            "cross-platform",
            "csv",
            "csv-editor",
            "csv-reader",
            "csv-viewer",
            "fltk",
            "gpl",
            "gplv3",
            "linux",
            "macos",
            "opensource",
            "windows"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-05-21T14:26:20Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/972735507/cd4b9698-4eda-4a4c-b513-fddf76991d94"
        ],
        "homepage": "https://tablecruncher.com",
        "readme_summary": "Tablecruncher is a cross-platform CSV editor designed to handle massive files with ease. It features a built-in JavaScript macro language, supports multiple encodings, and offers several color themes. The application is open-source under the GPL v3 license and is available for macOS, Windows, and Linux.",
        "key_features": [
            "Opens huge CSV files effortlessly",
            "Built-in JavaScript macro language",
            "Supports multiple encodings",
            "Four color themes"
        ],
        "primary_use_case": "Editing and viewing large CSV files.",
        "open_issues": 10,
        "cover_image_prompt": "Imagine a skilled cartographer meticulously charting a vast, unexplored territory represented by a massive CSV file. The cartographer uses specialized tools to navigate and organize the data, transforming it into a clear, understandable map. The map reveals hidden patterns and insights within the data. A subtle UI overlay shows a glimpse of the Tablecruncher interface, and the repository's name is subtly etched onto the cartographer's desk. The scene is set in a brightly lit, modern office with a focus on clarity and precision. The image should be in a 3D isometric illustration style with clean lines and a vibrant color scheme."
    },
    {
        "id": 920202654,
        "name": "codecafe",
        "description": "Real-time collaborative code editor built for the web",
        "url": "https://github.com/mrktsm/codecafe",
        "language": "TypeScript",
        "stars": 452,
        "forks": 23,
        "created_at": "2025-01-21T18:34:34Z",
        "updated_at": "2025-07-05T22:44:05Z",
        "topics": [
            "java",
            "liveshare",
            "ot",
            "react",
            "redis",
            "spring-boot",
            "websockets"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-14T01:23:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d79ab71bf5973b53789afc4102b2c3ee84d6dd88de4955af38853bd2b2018c36/mrktsm/codecafe"
        ],
        "homepage": "https://codecafe.app",
        "readme_summary": "CodeCafé is a real-time collaborative code editor designed for seamless, browser-based coding. It features a live preview, operational transformation for conflict-free collaboration, a VS Code-like editing experience, and requires zero setup. It's ideal for pair programming, teaching, and collaborative web development.",
        "key_features": [
            "Pixel-Perfect Live Preview",
            "True Real-Time Collaboration",
            "VS Code Feel",
            "Zero Setup"
        ],
        "primary_use_case": "Real-time collaborative code editing for pair programming, teaching, and building web projects together.",
        "open_issues": 3,
        "cover_image_prompt": "Imagine a bustling café where developers collaborate on code in real-time. One developer sketches UI elements on a digital notepad, instantly reflected on a large screen displaying a live web preview. Another types code on a holographic keyboard, their changes seamlessly merging with others. Digital threads connect each developer, representing the operational transformation ensuring smooth collaboration. Subtle UI elements float in the air, and the café's logo is subtly integrated into a neon sign. The scene is brightly lit, conveying a sense of energy and innovation. Render this in a 3D isometric illustration style with vibrant colors and crisp details."
    }
]