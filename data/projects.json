[
    {
        "id": 999844847,
        "name": "vicut",
        "description": "A Vim-based, scriptable, headless text editor for the command line.",
        "url": "https://github.com/km-clay/vicut",
        "language": "Rust",
        "stars": 34,
        "forks": 0,
        "created_at": "2025-06-10T22:00:36Z",
        "updated_at": "2025-06-18T08:19:17Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-06-18T07:31:34Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ac6ac4cd0a6f8775b14ddb9e8d48fabc4b802320e4b5717527acece682d01efc/km-clay/vicut"
        ],
        "homepage": "",
        "readme_summary": "Vicut is a command-line text editor that leverages Vim's powerful editing capabilities for non-interactive text processing. It allows users to apply Vim commands to files or standard input, extract specific fields, and format the output as plain text, JSON, or custom templates. Vicut combines the expressiveness of Vim with the utility of command-line tools like sed and awk.",
        "key_features": [
            "Apply Vim-style editing commands to files or stdin.",
            "Output in plain text, JSON, or using a format string.",
            "Chain multiple editing/extraction commands.",
            "Multi-threaded stream-style processing.",
            "In-place file editing."
        ],
        "primary_use_case": "Extracting and manipulating text data from files or standard input using Vim commands in a command-line environment.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled sculptor meticulously chiseling away at a rough block of text with Vim commands, revealing a perfectly formed gemstone of structured data. The sculptor's tools are glowing Vim commands like '%s/foo/bar/g' and 'd2W', leaving behind clean, precise cuts. Digital particles flow from the gemstone, transforming into JSON objects and neatly formatted text. Small UI elements display the 'vicut' logo and snippets of Rust code. The scene is set in a minimalist workshop with soft, diffused lighting. The image should be in a 3D isometric illustration style with clean lines and a vibrant color scheme."
    },
    {
        "id": 276821911,
        "name": "dohot",
        "description": "DoHoT: making practical use of DNS over HTTPS over Tor",
        "url": "https://github.com/alecmuffett/dohot",
        "language": "Shell",
        "stars": 256,
        "forks": 12,
        "created_at": "2020-07-03T06:11:24Z",
        "updated_at": "2025-06-18T08:18:47Z",
        "topics": [],
        "quality_score": 0.35,
        "contributors_count": 0,
        "last_commit_date": "2021-11-18T03:53:06Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d3f2e903afe2ed3a0db32899b054645f52d1571958bcafca9769ee7beca6d454/alecmuffett/dohot"
        ],
        "homepage": "",
        "readme_summary": "The DoHoT project aims to promote and simplify the adoption of DNS over HTTPS over Tor for enhanced privacy. It provides resources and documentation to help users understand and implement this technology, addressing privacy concerns related to traditional DNS protocols. The project emphasizes the benefits of combining DoH and Tor to circumvent surveillance and interference with DNS queries.",
        "key_features": [
            "Explanation of DNS over HTTPS over Tor",
            "Encouragement of adoption of DNS over HTTPS over Tor",
            "Simplification of adoption of DNS over HTTPS over Tor"
        ],
        "primary_use_case": "Improving privacy by using DNS over HTTPS over Tor.",
        "open_issues": 2,
        "cover_image_prompt": "A determined traveler, shrouded in a cloak representing Tor, navigating a complex network of interconnected pipes (representing the internet). The traveler holds a glowing orb (representing DNS over HTTPS) protecting their face from prying eyes peering through the pipes. The background shows a cityscape with surveillance cameras, subtly highlighting the privacy concerns. Small UI elements displaying encrypted DNS requests float around the traveler. The scene is set in a slightly dystopian, yet hopeful, future. The image should be in a digital painting style with a focus on dramatic lighting and clear outlines, emphasizing the traveler's journey to secure communication."
    },
    {
        "id": 472962423,
        "name": "TxtNet-Browser",
        "description": "An app that lets you browse the web over SMS",
        "url": "https://github.com/lukeaschenbrenner/TxtNet-Browser",
        "language": "Java",
        "stars": 1278,
        "forks": 30,
        "created_at": "2022-03-22T22:50:34Z",
        "updated_at": "2025-06-18T10:10:34Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-06-01T22:50:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/dfb55b84db3a8883d47467fb48f363c9973934be1ebba46b70aacfabbb9d46fd/lukeaschenbrenner/TxtNet-Browser"
        ],
        "homepage": "",
        "readme_summary": "TxtNet Browser is an Android app that enables web browsing via SMS, eliminating the need for WiFi or mobile data. It utilizes Brotli compression and a custom encoding format to transmit web content. The app also features a built-in server hosting option, allowing users to act as server hosts and facilitate distributed communication.",
        "key_features": [
            "Browse the web over SMS",
            "No WiFi or mobile data required",
            "Uses Brotli compression",
            "Custom Base-114 encoding",
            "Removes media content, JavaScript, and CSS",
            "Built-in server hosting option",
            "Allows users to host their own server"
        ],
        "primary_use_case": "Browsing the web over SMS without a mobile data connection.",
        "open_issues": 8,
        "cover_image_prompt": "Imagine a person in a remote village, holding up a simple phone to the sky. Beams of light, representing SMS signals, connect the phone to a towering library in the clouds. The library's architecture subtly incorporates UI elements and web page layouts. The person is successfully browsing the library's contents on their phone's screen. The scene is set in a vibrant, sunlit landscape with a clear blue sky. Small digital particles float around the SMS beams, symbolizing data transmission. The composition is clean and focused, emphasizing the connection between the phone and the cloud library. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 486418532,
        "name": "winutil",
        "description": "Chris Titus Tech's Windows Utility - Install Programs, Tweaks, Fixes, and Updates",
        "url": "https://github.com/ChrisTitusTech/winutil",
        "language": "PowerShell",
        "stars": 35993,
        "forks": 1987,
        "created_at": "2022-04-28T02:25:19Z",
        "updated_at": "2025-06-18T09:20:59Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-14T15:32:56Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0af13aca143761192e300667ba2959a13b6d25ccee3f3e4b0798f097717ff796/ChrisTitusTech/winutil"
        ],
        "homepage": "",
        "readme_summary": "Winutil is a PowerShell utility designed to automate and simplify common Windows tasks. It focuses on installing software, debloating unnecessary features, troubleshooting system configurations, and resolving Windows update issues. The utility aims to provide a streamlined and efficient way to maintain and optimize Windows systems.",
        "key_features": [
            "Installs programs",
            "Debloats with tweaks",
            "Troubleshoots with config",
            "Fixes Windows updates"
        ],
        "primary_use_case": "Streamlining Windows system configuration, maintenance, and software installation.",
        "open_issues": 174,
        "cover_image_prompt": "Imagine a skilled mechanic in a brightly lit workshop, tuning up a complex machine representing Windows. The mechanic uses various tools (representing tweaks and fixes) to optimize the machine's performance. Digital readouts display system metrics improving in real-time. A toolbox labeled \"WinUtil\" sits nearby, filled with specialized instruments. The scene is clean and efficient, with a focus on clarity and precision. Subtle UI elements float in the background, showing code snippets and configuration settings. The illustration should be in a 3D isometric style, with vibrant colors and clear details, emphasizing the utility's ability to streamline and enhance Windows systems."
    },
    {
        "id": 956337638,
        "name": "BongoCat",
        "description": "üê± Ë∑®Âπ≥Âè∞Ê°åÂÆ† BongoCatÔºå‰∏∫Ê°åÈù¢Â¢ûÊ∑ª‰πêË∂£ÔºÅ",
        "url": "https://github.com/ayangweb/BongoCat",
        "language": "TypeScript",
        "stars": 7346,
        "forks": 345,
        "created_at": "2025-03-28T04:50:22Z",
        "updated_at": "2025-06-18T10:01:04Z",
        "topics": [
            "bongo-cat",
            "bongocat",
            "cross-platform",
            "desktop-app",
            "desktop-pet",
            "linux",
            "macos",
            "pet",
            "pet-project",
            "rust",
            "tauri",
            "tauri-app",
            "windows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-17T11:35:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/eef975f87fd8c47d6d478ff1a0d5b320d90cf2ea90e7efe43ed2ad63ba5dcdc9/ayangweb/BongoCat"
        ],
        "homepage": "https://github.com/ayangweb/Awesome-BongoCat",
        "readme_summary": "BongoCat is a cross-platform desktop pet application that brings the popular Bongo Cat character to Windows, macOS, and Linux. Inspired by Bongo-Cat-Mver, it allows users to have an interactive cat animation on their desktop, adding a touch of fun and personality to their computing experience. The application is built using TypeScript and Tauri, ensuring compatibility across multiple platforms.",
        "key_features": [
            "Cross-platform support (Windows, macOS, Linux)",
            "Desktop pet application",
            "Inspired by Bongo-Cat-Mver",
            "Adds interactive cat animations to the desktop"
        ],
        "primary_use_case": "Adding a fun, interactive desktop pet (BongoCat) to enhance user experience across different operating systems.",
        "open_issues": 45,
        "cover_image_prompt": "A cute cartoon cat sitting at a computer desk, with multiple screens displaying different operating system logos (Windows, macOS, Linux). The cat is playfully interacting with the screens, tapping on them with its paws, causing musical notes and sound waves to emanate from the screens. The desk is surrounded by various tech-related items like keyboards, mice, and headphones. The scene is set in a cozy, colorful room with soft lighting. Small UI elements showing the BongoCat application are subtly displayed on the screens. The image should be in a 3D isometric illustration style with vibrant colors and a playful, inviting atmosphere."
    },
    {
        "id": 966383042,
        "name": "dead-man-hand",
        "description": "DMH will execute action when you will not be able to. Dead-man-switch software with privacy in mind.",
        "url": "https://github.com/bkupidura/dead-man-hand",
        "language": "Go",
        "stars": 238,
        "forks": 7,
        "created_at": "2025-04-14T20:52:05Z",
        "updated_at": "2025-06-18T09:05:28Z",
        "topics": [
            "golang",
            "privacy"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-04-29T21:13:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f5bc5d2077d8a35e2687b761c4984df85a715f9e9c29839311ac17ecea2375d0/bkupidura/dead-man-hand"
        ],
        "homepage": "",
        "readme_summary": "The dead-man-hand repository provides a privacy-focused dead man's switch software. It allows users to define actions that will be executed when they are no longer available, ensuring that these actions remain confidential until that specific time. The system uses encryption and integrates with Vault for secure key management, supporting multiple action execution methods.",
        "key_features": [
            "Privacy focused action execution",
            "Encryption of actions using age",
            "Integration with Vault for key management",
            "Multiple action execution methods (json_post, bulksms, mail)",
            "High test coverage"
        ],
        "primary_use_case": "Executing predefined actions when the user is no longer available, ensuring privacy and confidentiality of those actions until that time.",
        "open_issues": 0,
        "cover_image_prompt": "An elderly clockmaker meticulously adjusting the gears of a large, ornate clock. Each gear represents a different aspect of the user's digital life. The clock is set to trigger a series of actions, visualized as small, automated robots carrying out tasks like sending emails and posting messages. The clockmaker works in a dimly lit workshop filled with encrypted documents and secure vaults. Subtle digital elements like glowing data streams and UI screens showing encryption keys are integrated into the scene. The repository name, 'Dead Man's Hand,' is subtly engraved on the clock's face. The image should be in a detailed digital painting style with a focus on intricate details and a mysterious atmosphere."
    },
    {
        "id": 895165567,
        "name": "timr-tui",
        "description": "TUI to organize your time: Pomodoro, Countdown, Timer.",
        "url": "https://github.com/sectore/timr-tui",
        "language": "Rust",
        "stars": 155,
        "forks": 11,
        "created_at": "2024-11-27T17:16:56Z",
        "updated_at": "2025-06-18T06:04:54Z",
        "topics": [
            "ratatui",
            "rust",
            "tui"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-09T15:00:31Z",
        "media_urls": [
            "https://opengraph.githubassets.com/12f03a90cf369f2640ac2ff4af807e5ee55dcbb3651558b9021b973c5ff336e7/sectore/timr-tui"
        ],
        "homepage": "",
        "readme_summary": "timr-tui is a terminal-based application built with Rust and Ratatui for managing time using Pomodoro timers, countdowns, and general timers. It offers a CLI interface and customizable keybindings for easy control, allowing users to organize their work and track time efficiently within a terminal environment.",
        "key_features": [
            "Pomodoro timer",
            "Countdown timer",
            "General timer",
            "Customizable styles",
            "CLI interface",
            "Keybindings for control"
        ],
        "primary_use_case": "Organizing time and improving focus using Pomodoro technique, countdowns, and general time tracking within a terminal user interface.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously crafting intricate timepieces within a cozy workshop filled with gears, springs, and miniature screens displaying Ratatui code. The clockmaker is assembling a Pomodoro timer, a countdown clock, and a simple timer, each glowing with a distinct color. Digital particles subtly emanate from the tools, forming visual representations of time intervals and task management. A blueprint on the workbench subtly displays the 'timr-tui' logo. The scene is bathed in warm, inviting light, creating a sense of focused productivity. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]