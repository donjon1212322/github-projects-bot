[
    {
        "id": 1033385606,
        "name": "dnschat",
        "description": "A React Native mobile application that provides a modern, ChatGPT-like chat interface using DNS TXT queries to communicate with an LLM.",
        "url": "https://github.com/mneves75/dnschat",
        "language": "TypeScript",
        "stars": 7,
        "forks": 0,
        "created_at": "2025-08-06T18:24:00Z",
        "updated_at": "2025-08-19T09:28:24Z",
        "topics": [],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-08-19T02:52:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d1c3445232d6569d90f38411fd025c7dfee9556f279528f76b5481f247cc2901/mneves75/dnschat"
        ],
        "homepage": "",
        "readme_summary": "DNSChat is a React Native mobile application that revolutionizes LLM interaction by utilizing DNS TXT queries for communication. It offers a ChatGPT-like interface with features like cross-platform support, native DNS implementation, multi-layer fallback mechanisms, and local storage for persistent conversations. The app aims to provide a more private and resilient way to interact with AI models.",
        "key_features": [
            "DNS-Based AI Chat",
            "Cross-Platform Support",
            "Native DNS Implementation",
            "Multi-Layer Fallback",
            "Local Storage",
            "Modern UI",
            "Advanced DNS Config",
            "Real-Time Logging",
            "Deep Linking"
        ],
        "primary_use_case": "Enabling AI communication through DNS TXT queries for enhanced privacy and network resilience.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a bustling city post office where messages are delivered not by trucks, but by flocks of carrier pigeons, each carrying a tiny scroll. These pigeons fly into a central tower labeled 'DNSChat,' where their messages are decoded and displayed on a large, glowing screen showing a chat interface. A person in the tower is responding to the messages, which are then sent back out via another flock of pigeons. Subtle UI elements float around the tower, showing real-time DNS query logs. The scene is in a 3D isometric illustration style with a vibrant color scheme, emphasizing the unique method of communication."
    },
    {
        "id": 977919152,
        "name": "speakr",
        "description": "Speakr is a personal, self-hosted web application designed for transcribing audio recordings",
        "url": "https://github.com/murtaza-nasir/speakr",
        "language": "HTML",
        "stars": 1672,
        "forks": 141,
        "created_at": "2025-05-05T07:22:51Z",
        "updated_at": "2025-08-19T09:48:52Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-08-19T09:13:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a802f6138d81e8349c128a4ff429f1ed7ad4a895d0f70de2588f129ad21b2784/murtaza-nasir/speakr"
        ],
        "homepage": null,
        "readme_summary": "Speakr is a self-hosted web application that transcribes audio recordings into organized and searchable notes. It offers features like speaker identification, AI-powered summarization, and a chat interface for interacting with the content. Designed for privacy and control, Speakr is suitable for professionals, therapists, students, and anyone needing to transcribe audio recordings.",
        "key_features": [
            "Audio transcription with speaker identification",
            "AI-powered summarization",
            "AI chat interface for interacting with recordings",
            "Tagging system for organizing recordings",
            "Word document export",
            "Secure sharing system",
            "Large file chunking support"
        ],
        "primary_use_case": "Transcribing audio recordings into organized, searchable notes while ensuring data privacy through self-hosting.",
        "open_issues": 6,
        "cover_image_prompt": "Imagine a skilled scribe in a quiet study, meticulously transcribing spoken words from a phonograph into a beautifully organized digital document. The phonograph emits sound waves that transform into text on a nearby computer screen, displaying speaker identification and summary points. Subtle UI elements float around the scribe, showing the Speakr interface with tags and search options. The scene is bathed in warm, inviting light, creating a sense of focused productivity. The image should be in a detailed digital painting style with clear outlines and a touch of magical realism, emphasizing the transformation of audio to insightful notes."
    },
    {
        "id": 1034533752,
        "name": "tilf",
        "description": "Tilf (Tiny Elf) is a free, simple yet powerful pixel art editor built with PySide6. Itâ€™s designed for creating sprites, icons, and small 2D assets with essential drawing tools, live preview, undo/redo, export options and more.",
        "url": "https://github.com/danterolle/tilf",
        "language": "Python",
        "stars": 335,
        "forks": 12,
        "created_at": "2025-08-08T14:43:46Z",
        "updated_at": "2025-08-19T06:40:58Z",
        "topics": [
            "cross-platform",
            "crossplatform",
            "desktop-app",
            "drag-and-drop",
            "drawing",
            "free",
            "graphics",
            "gui",
            "open-source",
            "pixel-art",
            "pyside6",
            "python",
            "qt6",
            "sprites",
            "tiles"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-08-16T15:05:01Z",
        "media_urls": [
            "https://opengraph.githubassets.com/336b4c6315292d612262f5b7e05d8db5b70fbc762c22037ecd9b364b72b1cf64/danterolle/tilf"
        ],
        "homepage": "",
        "readme_summary": "Tilf is a free and open-source pixel art editor designed for creating sprites and small 2D assets. It offers essential drawing tools, real-time preview, undo/redo functionality, and supports multiple platforms (Windows, MacOS, GNU/Linux). The editor focuses on simplicity and ease of use, requiring minimal dependencies and no account registration.",
        "key_features": [
            "Pixel art editing",
            "Cross-platform support (Windows, MacOS, GNU/Linux)",
            "Essential drawing tools (Pencil, Eraser, Fill, Eyedropper, Rectangle, Ellipse)",
            "Undo/Redo functionality",
            "Zoom 1-50x",
            "Import/Export (PNG, JPEG/JPG, BMP)",
            "Real-time preview",
            "Drag & drop images to open"
        ],
        "primary_use_case": "Creating sprites, icons, and small 2D assets.",
        "open_issues": 6,
        "cover_image_prompt": "A meticulous clockmaker, hunched over a workbench, carefully assembling a tiny, intricate pixel art sprite using miniature tools. The sprite depicts a vibrant, retro-style elf character. The clockmaker's magnifying glass reflects the sprite's details, while nearby, a larger screen displays the finished sprite in various applications, like a game icon and website avatar. Subtle UI elements and code snippets are visible on the workbench, connecting the craft to software development. The scene is set in a cozy, sunlit workshop with a warm color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 992172740,
        "name": "easyedit",
        "description": "The easiest way to edit images in one prompt",
        "url": "https://github.com/Nutlope/easyedit",
        "language": "TypeScript",
        "stars": 711,
        "forks": 107,
        "created_at": "2025-05-28T18:23:52Z",
        "updated_at": "2025-08-19T09:55:14Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-06-30T17:53:08Z",
        "media_urls": [
            "https://opengraph.githubassets.com/366ae3a88d55dc13750a5e8c6f81d741f15b5a4d1933a4be0dfaaa09ad171393/Nutlope/easyedit"
        ],
        "homepage": "https://www.easyedit.io/",
        "readme_summary": "EasyEdit allows users to edit images using a single text prompt. It leverages the Flux image model from BFL and Together AI for inference. The application is built using Next.js, Tailwind CSS, and includes observability and analytics tools.",
        "key_features": [
            "Image editing with a single prompt",
            "Powered by Flux through Together.ai",
            "Uses Next.js app router with Tailwind",
            "Observability with Helicone",
            "Website analytics with Plausible"
        ],
        "primary_use_case": "Editing images with a single text prompt.",
        "open_issues": 2,
        "cover_image_prompt": "A skilled digital artist sitting at a modern workstation, effortlessly editing a photograph displayed on a large screen with a single voice command. The artist speaks into a microphone, and the image on the screen instantly transforms to match the spoken request. Floating UI elements display the repository name 'EasyEdit' and subtle code snippets related to image manipulation. The scene is set in a brightly lit studio with a clean, minimalist design. The image should be in a flat design style with clear iconography and vibrant colors."
    },
    {
        "id": 999138733,
        "name": "ip-nose",
        "description": "ip-nose is a Matrix-themed IP geolocation CLI tool built with C++. It offers IP detection, search history, a vibrant, colorized interface, and customizable configuration. Perfect for developers and network enthusiasts who appreciate cyberpunk style in their command line. Easy to compile and install with make.",
        "url": "https://github.com/Karim93160/ip-nose",
        "language": "C++",
        "stars": 27,
        "forks": 3,
        "created_at": "2025-06-09T19:51:20Z",
        "updated_at": "2025-08-19T08:20:39Z",
        "topics": [
            "ip-geo",
            "ip-geolocation",
            "ip-geolocation-api",
            "ip-geolocation-checker",
            "ip-geolocation-finder",
            "ip-geolocation-ip2location",
            "ip-geolocator",
            "ipgeo",
            "ipgeobase",
            "ipgeobase-importer",
            "ipgeolocation",
            "ipgeolocation-api"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-07-15T23:23:48Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/999138733/0a9596f8-6a73-4952-a6a1-dde0858dc177"
        ],
        "homepage": "https://github.com/Karim93160/ip-nose",
        "readme_summary": "ip-nose is a C++ command-line tool for IP geolocation, providing detailed information about IP addresses. It features a Matrix-inspired interface, IP detection, search history, and customizable configuration. It is designed for developers and network enthusiasts who want a stylish and efficient way to geolocate IP addresses.",
        "key_features": [
            "IP Geolocation",
            "IP Detection",
            "Matrix-themed Interface",
            "Search History",
            "Customizable Configuration"
        ],
        "primary_use_case": "IP geolocation and information retrieval from the command line.",
        "open_issues": 1,
        "cover_image_prompt": "A hacker in a neon-lit, Matrix-themed command center, tracing an IP address as it snakes through a digital cityscape. The hacker's console displays a vibrant, color-coded map pinpointing the IP's location, while streams of green code cascade down the walls. The scene shows the hacker focused on the task, with glowing digital particles highlighting the IP's journey. Small UI elements display geolocation data and search history. The composition is cyberpunk-inspired with a dark, futuristic aesthetic and a green and black color scheme. The image should be in digital painting style with sharp details and dramatic lighting."
    },
    {
        "id": 903566213,
        "name": "perspt",
        "description": "Perspt: **Per**sonal **S**pectrum **P**ertaining **T**houghts â€“ the human lens through which we explore the enigma of AI and its implications for humanity.",
        "url": "https://github.com/eonseed/perspt",
        "language": "Rust",
        "stars": 24,
        "forks": 4,
        "created_at": "2024-12-14T23:38:02Z",
        "updated_at": "2025-08-19T08:22:13Z",
        "topics": [],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-07-03T16:59:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1a8a6a4cd128c6c39b5f2ed6c96840fd8226b29e5c996b17adb920124bacaef4/eonseed/perspt"
        ],
        "homepage": "https://eonseed.github.io/perspt/",
        "readme_summary": "Perspt is a high-performance CLI application built with Rust that allows users to interact with various AI models directly from their terminal. It supports multiple providers like OpenAI, Anthropic, and Google Gemini, offering features like real-time streaming, automatic provider detection, and a customizable interface for both interactive chat and scripting.",
        "key_features": [
            "Interactive Chat Interface with Ratatui",
            "Simple CLI Mode for scripting",
            "Real-time Streaming of LLM responses",
            "Automatic Provider Detection",
            "Support for multiple providers (OpenAI, Anthropic, Google Gemini, Groq, Cohere, XAI, DeepSeek, Ollama)",
            "Flexible Authentication and Configuration",
            "Conversation Export",
            "Custom Markdown Parser",
            "Graceful Error Handling"
        ],
        "primary_use_case": "Chatting with various AI models from multiple providers directly in the terminal.",
        "open_issues": 3,
        "cover_image_prompt": "A curious explorer peering through a high-powered telescope (Perspt) at a vast, swirling galaxy representing the AI world. The telescope's lens focuses on constellations shaped like language models, revealing insights and understanding. The explorer's face is illuminated with wonder and knowledge. Small UI elements float around the galaxy, showing chat interfaces and code snippets. The repository name, 'Perspt,' is subtly etched onto the telescope's side. The scene is set against a dark, starry background with vibrant nebulae. The image should be in a digital painting style with clear outlines and a sense of discovery."
    },
    {
        "id": 996250059,
        "name": "depyler",
        "description": "Compiles Python to Rust, helping transition off of Python to Energy Efficient and Safe Rust Code",
        "url": "https://github.com/paiml/depyler",
        "language": "Rust",
        "stars": 120,
        "forks": 6,
        "created_at": "2025-06-04T17:13:41Z",
        "updated_at": "2025-08-19T07:26:57Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-08-19T06:13:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0263dc3c9e62660b015c3392d35a9716b5d35ca5cecd03ecaefd72d5fe7786ba/paiml/depyler"
        ],
        "homepage": null,
        "readme_summary": "Depyler is a Python-to-Rust transpiler designed to help developers migrate their Python code to Rust. It focuses on energy efficiency, safety, and includes features like progressive verification and multi-target support, including Ruchy. It can be used both as a command-line tool and as a library.",
        "key_features": [
            "Python to Rust transpilation",
            "Energy efficiency",
            "Progressive verification",
            "Multi-target support (Ruchy)",
            "Enterprise-grade testing infrastructure",
            "Library usage"
        ],
        "primary_use_case": "Transitioning Python codebases to Rust for improved performance, safety, and energy efficiency.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled alchemist carefully transmuting bubbling Python potions into gleaming Rust ingots within a high-tech laboratory. The alchemist uses intricate tools and glowing runes to ensure a safe and efficient transformation. Small UI screens display Python code being converted into Rust, with energy efficiency metrics visualized as green energy flowing from the Rust ingots. The lab is filled with subtle digital particles and the 'Depyler' logo subtly etched into the workbench. The scene is brightly lit and in a 3D isometric illustration style with vibrant colors and clean details."
    }
]