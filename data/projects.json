[
    {
        "id": 1028755205,
        "name": "Smart_Segments",
        "description": "KRITA Plugin - Smart Segments - AI Segment Anything Model 2",
        "url": "https://github.com/a904guy/Smart_Segments",
        "language": "Python",
        "stars": 8,
        "forks": 0,
        "created_at": "2025-07-30T02:47:12Z",
        "updated_at": "2025-08-04T09:33:47Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-31T00:30:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/323458b1265668ff121bc90320c63b1fc0316aa31a5da085266b3081d9bcf9f6/a904guy/Smart_Segments"
        ],
        "homepage": "",
        "readme_summary": "Smart Segments is a Krita plugin that leverages AI to provide intelligent, one-click object detection and selection. It allows artists to quickly and easily segment their artwork, offering features like real-time preview and seamless integration with Krita's native tools, streamlining the digital art workflow.",
        "key_features": [
            "AI-Powered Segmentation",
            "Interactive Selection",
            "Real-time Preview",
            "Smart Tools Integration",
            "Artist-Friendly Design",
            "One-Click Setup"
        ],
        "primary_use_case": "Intelligent object detection and selection in Krita using AI-powered segmentation.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled artist in a digital studio, using a magical brush that intelligently selects and separates different parts of a digital painting with a single stroke. The brush emits a soft, glowing light, highlighting the selected segments with precision. Around the artist, floating UI elements display the Krita interface and the 'Smart Segments' plugin logo. The studio is filled with vibrant colors and a sense of creative flow. The image should be in a 3D isometric illustration style with rich details and a focus on clarity."
    },
    {
        "id": 1026808170,
        "name": "TubeSummary",
        "description": null,
        "url": "https://github.com/n0vella/TubeSummary",
        "language": "TypeScript",
        "stars": 7,
        "forks": 1,
        "created_at": "2025-07-26T16:51:01Z",
        "updated_at": "2025-08-04T08:22:51Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-08-02T09:30:27Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c1fcc52981f7ff8e7a73976dbfb4b2869ad7f2cbd37909dbfe32e912edf0c5a5/n0vella/TubeSummary"
        ],
        "homepage": null,
        "readme_summary": "TubeSummary is a browser extension that uses AI to generate summaries of YouTube videos. It allows users to quickly understand the content of a video without watching the entire thing. The extension supports multiple LLM providers and offers customizable prompts and credentials.",
        "key_features": [
            "Summarize YouTube videos instantly with a single click",
            "AI-powered follow-up Q&A below the video",
            "Support for multiple LLM providers (OpenAI-compatible)",
            "Prompts and provider credentials fully customizable",
            "Works on latest Firefox, Chrome, and more"
        ],
        "primary_use_case": "Summarizing YouTube videos using AI to quickly extract key insights.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a diligent librarian standing amidst towering shelves of YouTube videos, each represented as a colorful book. The librarian holds a magnifying glass, focusing on a single video, and a beam of light extracts the key information, transforming it into a concise summary displayed on a floating tablet. Subtle UI elements and code snippets float around the librarian, connecting the scene to software. The repository name, 'TubeSummary,' is subtly etched on the librarian's desk. The scene is set in a bright, organized library with a warm, inviting atmosphere. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1005564798,
        "name": "Twocast",
        "description": "AI Podcast Generator for bilingual episodes, Multi Languages, Alternative to NotebookLLM；真人对话AI播客生成器，多语言，多音色",
        "url": "https://github.com/panyanyany/Twocast",
        "language": "TypeScript",
        "stars": 955,
        "forks": 84,
        "created_at": "2025-06-20T12:33:14Z",
        "updated_at": "2025-08-04T09:07:06Z",
        "topics": [
            "podcast",
            "podcast-generator",
            "voice-cloning",
            "voice-synthesis"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-01T03:46:08Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a30df9b0d66af57e78f1cbfaecf3502c084bc6ac3e994b83fd8fa925c059547c/panyanyany/Twocast"
        ],
        "homepage": "https://twocast.app/",
        "readme_summary": "Twocast is an AI podcast generator that creates bilingual, two-person podcasts. It supports multiple input methods, including topics, links, documents, and list pages, and generates podcasts with downloadable audio, outlines, and scripts. The platform integrates with Fish Audio, Minimax, and Google Gemini for voice synthesis and language processing.",
        "key_features": [
            "Two-person Podcast generation",
            "Generates 3-5 minute podcasts with one click",
            "Supports multiple generation methods: Topic, Link, Document (doc/pdf/txt), List Page",
            "Multi-language support",
            "Downloadable audio",
            "Podcast content includes: Audio, Outline, Script",
            "Supports Fish Audio, Minimax, Google Gemini"
        ],
        "primary_use_case": "AI-powered generation of bilingual, two-person podcasts from various input sources like topics, links, documents, and list pages.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled playwright directing two AI actors on a stage. The playwright feeds scripts (documents, links, topics) into a control panel, which then generates outlines and scripts. The AI actors, represented by glowing humanoid figures, then perform a podcast dialogue, their voices synthesized and broadcast through speakers. The stage is surrounded by screens displaying waveforms and podcast outlines. The scene is set in a futuristic studio with dynamic lighting. Digital particles representing language flow between the playwright, the control panel, and the AI actors. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 903039267,
        "name": "BookLore",
        "description": "BookLore is a self-hosted app for managing and reading books & comics (PDF, EPUB, CBZ) with metadata editing, OPDS, reading progress, and multi-user support.",
        "url": "https://github.com/booklore-app/BookLore",
        "language": "Java",
        "stars": 3695,
        "forks": 180,
        "created_at": "2024-12-13T19:54:00Z",
        "updated_at": "2025-08-04T09:42:35Z",
        "topics": [
            "angular",
            "book-management",
            "ebooks",
            "java",
            "library-management-system",
            "metadata-management",
            "oidc",
            "opds",
            "self-hosted",
            "spring-boot"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-30T19:28:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cf6b2458ac50293f156162805067a1b3c1395acf17a2fe1effbb54a00e5a624a/booklore-app/BookLore"
        ],
        "homepage": "",
        "readme_summary": "BookLore is a self-hosted web application designed for organizing, managing, and reading personal book and comic collections. It offers features such as metadata management, multi-user support with permission controls, built-in readers for various ebook formats, and OPDS integration, providing a comprehensive solution for building and exploring a personal digital library.",
        "key_features": [
            "Powerful Book Organization with Libraries and Shelves",
            "Intelligent Metadata Management from multiple sources",
            "Multi-User Access with Permissions",
            "Built-in PDF, ePub, and CBX Reader",
            "OPDS 1.2 Integration",
            "Flexible Authentication (OIDC, JWT)",
            "Smart Batch Upload with BookDrop Folder",
            "Send Books by Email",
            "Mobile-Optimized UI",
            "Open Source & Self-Hosted",
            "Active Development"
        ],
        "primary_use_case": "Managing and reading personal book and comic collections in a self-hosted environment.",
        "open_issues": 126,
        "cover_image_prompt": "Imagine a grand library where books float gently in the air, guided by a friendly librarian who uses a magical interface to organize them. The librarian, with a warm smile, effortlessly categorizes books by genre, author, and even mood, as glowing metadata tags attach themselves to each volume. A subtle UI overlay shows a book's cover and reading progress. The scene is bathed in soft, inviting light, creating an atmosphere of organized discovery. Small digital particles swirl around the books, representing the flow of data. The repository name, 'BookLore,' is subtly etched into a nearby bookshelf. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1006414368,
        "name": "OpenCut",
        "description": "The open-source CapCut alternative",
        "url": "https://github.com/OpenCut-app/OpenCut",
        "language": "TypeScript",
        "stars": 29231,
        "forks": 2692,
        "created_at": "2025-06-22T08:02:17Z",
        "updated_at": "2025-08-04T10:15:07Z",
        "topics": [
            "editor",
            "oss",
            "videoeditor"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-04T01:14:14Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3eb74659762fe7090a4e0295dc5806c3389dcfe832b8d0493dadb6743425332f/OpenCut-app/OpenCut"
        ],
        "homepage": "https://opencut.app",
        "readme_summary": "OpenCut is an open-source video editor designed as an alternative to CapCut. It offers timeline-based editing, multi-track support, and real-time preview capabilities without watermarks or subscriptions. The project aims to provide a simple and privacy-focused video editing solution for web, desktop, and mobile platforms.",
        "key_features": [
            "Timeline-based editing",
            "Multi-track support",
            "Real-time preview",
            "No watermarks or subscriptions"
        ],
        "primary_use_case": "Open-source video editing",
        "open_issues": 100,
        "cover_image_prompt": "A skilled artisan meticulously crafting a complex video sculpture from raw digital clay on a futuristic workbench. The artisan uses advanced tools to shape the clay, adding intricate details and effects. Finished sections of the sculpture float nearby, displaying vibrant colors and dynamic motion. Subtle UI elements and timelines are projected onto the workbench, showing the editing process. The repository's name, 'OpenCut,' is subtly etched into the base of the sculpture. The scene is brightly lit with a clean, modern aesthetic. The image should be in 3D isometric illustration style with crisp details and a vibrant color palette."
    },
    {
        "id": 14434734,
        "name": "binwalk",
        "description": "Firmware Analysis Tool",
        "url": "https://github.com/ReFirmLabs/binwalk",
        "language": "Rust",
        "stars": 12807,
        "forks": 1670,
        "created_at": "2013-11-15T20:45:40Z",
        "updated_at": "2025-08-04T08:51:59Z",
        "topics": [],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-07-15T18:28:58Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f8aa84eaaefeabd7e69ca5a1e6b8a117a40192a3c8fed85c00a48b662dbff190/ReFirmLabs/binwalk"
        ],
        "homepage": null,
        "readme_summary": "Binwalk is a firmware analysis tool written in Rust that identifies and extracts embedded files and data from various file types. It utilizes entropy analysis to detect compression or encryption and can be integrated into other Rust projects. The tool aims to provide fast and detailed analysis results.",
        "key_features": [
            "Identifies embedded files and data.",
            "Extracts embedded files and data.",
            "Supports a wide variety of file types.",
            "Performs entropy analysis to identify compression or encryption.",
            "Can be integrated into Rust projects."
        ],
        "primary_use_case": "Firmware analysis",
        "open_issues": 32,
        "cover_image_prompt": "An archaeologist carefully brushing away sand from an ancient artifact (firmware) to reveal hidden chambers (embedded files) within. The archaeologist uses a magnifying glass that displays subtle code snippets and data visualizations. The artifact rests on a table in a brightly lit tent, with digital particles swirling around it, highlighting the analysis process. The repository name, 'Binwalk,' is subtly etched onto the table. The scene is in a 3D isometric illustration style with clear details and a warm color scheme."
    }
]