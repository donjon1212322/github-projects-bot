[
    {
        "id": 1069003554,
        "name": "Paper2Video",
        "description": "Automatic Video Generation from Scientific Papers",
        "url": "https://github.com/showlab/Paper2Video",
        "language": "Python",
        "stars": 1039,
        "forks": 131,
        "created_at": "2025-10-03T08:50:16Z",
        "updated_at": "2025-10-17T09:47:28Z",
        "topics": [],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-10-15T10:50:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/09207ee16c83bf65f8e9a89fdf8ac4ba7ba178a6d2db94f366b6d092af2391b9/showlab/Paper2Video"
        ],
        "homepage": "https://showlab.github.io/Paper2Video/",
        "readme_summary": "Paper2Video automatically generates presentation videos from scientific papers. It addresses two main problems: creating a presentation video from a paper using PaperTalker (integrating slides, subtitling, cursor grounding, speech synthesis, and talking-head video rendering) and evaluating presentation video quality using the Paper2Video benchmark with designed metrics.",
        "key_features": [
            "Automatic video generation from scientific papers",
            "PaperTalker agent for presentation creation (slides, subtitling, cursor grounding, speech synthesis, talking-head video rendering)",
            "Paper2Video benchmark for evaluating presentation quality"
        ],
        "primary_use_case": "Generating presentation videos from scientific papers",
        "open_issues": 3,
        "cover_image_prompt": "A skilled orator standing on a stage, effortlessly transforming a dense research paper into a captivating presentation video for an eager audience. The orator gestures towards a screen displaying key slides and visualizations extracted from the paper. A beam of light shines down, converting complex text into easily digestible visuals and spoken words. Subtle UI elements float around the scene, representing the automated processes of slide creation, subtitling, and speech synthesis. The stage is set in a modern conference hall with warm, inviting lighting. The image should be in a flat design style with clear iconography and vibrant colors."
    },
    {
        "id": 1019052443,
        "name": "server",
        "description": "Sync-in Server · Secure, open-source platform for file storage, sharing, collaboration, and syncing.",
        "url": "https://github.com/Sync-in/server",
        "language": "TypeScript",
        "stars": 277,
        "forks": 12,
        "created_at": "2025-07-13T16:25:43Z",
        "updated_at": "2025-10-17T09:08:21Z",
        "topics": [
            "collaboration-platform",
            "documents",
            "files",
            "nodejs",
            "privacy",
            "self-hosted",
            "server",
            "sharing-platform",
            "sovereignty",
            "storage-platform",
            "sync-in",
            "synchronization",
            "typescript"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-10-16T22:30:12Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1019052443/9d070500-179f-4b9a-b950-8b876ee77404"
        ],
        "homepage": "https://sync-in.com",
        "readme_summary": "The Sync-in Server is a self-hosted, open-source platform for file storage, sharing, collaboration, and synchronization. It emphasizes data ownership and control, offering features like collaborative spaces, secure file sharing, and granular permission management for various environments.",
        "key_features": [
            "Modern, Fast, and High-Performance Interface",
            "Security & Data Ownership",
            "Advanced User Access Control",
            "Collaboration & Integration (OnlyOffice)",
            "Powerful Full-Text Search",
            "Document Management & Restrictions",
            "WebDAV Access",
            "Desktop Client with file synchronization"
        ],
        "primary_use_case": "Secure, self-hosted file storage, sharing, and collaboration with a focus on data ownership and control.",
        "open_issues": 0,
        "cover_image_prompt": "A digital fortress with a central vault representing the Sync-in server, where files are safely stored. A bridge extends from the fortress, allowing users (represented by diverse figures) to securely share and collaborate on documents. Each user has a key representing their access permissions. The fortress is surrounded by a glowing shield, symbolizing data protection. Small UI elements showing file previews and collaboration tools are subtly integrated into the fortress walls. The scene is set in a clean, modern digital landscape with a blue and green color scheme. The image should be in a 3D isometric illustration style with clear details and vibrant colors."
    },
    {
        "id": 711571791,
        "name": "SummaryYou",
        "description": "Summarize YouTube-Videos, Articles, Images and Documents with AI",
        "url": "https://github.com/talosross/SummaryYou",
        "language": "Kotlin",
        "stars": 149,
        "forks": 15,
        "created_at": "2023-10-29T17:12:04Z",
        "updated_at": "2025-10-17T03:43:53Z",
        "topics": [
            "android-app",
            "chaquopy",
            "chatgpt",
            "groq",
            "llm",
            "llmapp",
            "material-design",
            "python"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-06T22:29:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/5fe926037c8acf6b3ef195a3eaa409729a6201e5352bfe9ddbaeb6981d6a3a2b/talosross/SummaryYou"
        ],
        "homepage": "https://play.google.com/store/apps/details?id=com.talosross.summaryyou",
        "readme_summary": "SummaryYou is an Android application that leverages AI to summarize various types of content, including YouTube videos, articles, images, and documents. It offers features like adjustable summary length, text-to-speech functionality, history tracking, intelligent paywall detection, and a Material Design 3-based user interface.",
        "key_features": [
            "Summarize YouTube-Videos, Articles, Images and Documents with AI",
            "Set length of summary",
            "Read-Out the summaries",
            "History-Section",
            "Intelligent paywall detection",
            "OLED-Dark Mode",
            "Easy to use and user-friendly",
            "Material Design 3 style UI with dynamic color theme"
        ],
        "primary_use_case": "Summarizing various forms of digital content (YouTube videos, articles, images, and documents) using AI.",
        "open_issues": 3,
        "cover_image_prompt": "Imagine a skilled librarian standing amidst towering shelves filled with books, scrolls, screens, and images. The librarian holds a glowing magnifying glass that condenses the essence of each item into a small, radiant orb of light representing a summary. These orbs float into a user's open hand, symbolizing quick access to information. Subtle UI elements are projected onto the shelves, and the repository's name is subtly etched on the librarian's desk. The scene is bathed in warm, inviting light. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 20677163,
        "name": "MediaInfo",
        "description": "Convenient unified display of the most relevant technical and tag data for video and audio files.",
        "url": "https://github.com/MediaArea/MediaInfo",
        "language": "C++",
        "stars": 1708,
        "forks": 182,
        "created_at": "2014-06-10T07:59:01Z",
        "updated_at": "2025-10-14T20:09:31Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-06T07:01:32Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/20677163/29928a01-a90f-4c06-8c63-b2799c9d839e"
        ],
        "homepage": "https://MediaArea.net/MediaInfo",
        "readme_summary": "The MediaInfo repository provides a command-line interface (CLI) and graphical user interfaces (GUIs) for displaying technical and tag data extracted from video and audio files. It supports various operating systems, including Windows, macOS, Linux, Android, and Apple's operating systems, and offers different GUI options based on the platform.",
        "key_features": [
            "CLI for various desktop operating systems",
            "Qt GUI for Windows and Linux",
            "UWP GUI for Windows",
            "VCL GUI for Windows",
            "wxWidgets GUI for Windows and Linux",
            "Build instructions for Windows, macOS, and Linux",
            "Support for x86, x86-64/x64/amd64, and arm64 CPU architectures"
        ],
        "primary_use_case": "Analyzing video and audio files to extract and display their technical metadata and tags.",
        "open_issues": 210,
        "cover_image_prompt": "An archivist in a grand library examines a collection of glowing orbs, each representing a media file (video, audio). The archivist holds a magnifying glass that projects detailed technical data onto a holographic screen. Shelves around the archivist are filled with similar orbs, some displaying UI elements. The library is bathed in soft, ethereal light, with subtle digital particles floating in the air. The repository name, 'MediaInfo,' is subtly etched on the archivist's desk. The composition is focused and clear, with a warm color scheme. The image should be in a 3D isometric illustration style with rich details."
    },
    {
        "id": 964395174,
        "name": "dyad",
        "description": "Free, local, open-source AI app builder ✨ v0 / lovable / Bolt alternative 🌟 Star if you like it!",
        "url": "https://github.com/dyad-sh/dyad",
        "language": "TypeScript",
        "stars": 16244,
        "forks": 1744,
        "created_at": "2025-04-11T06:33:48Z",
        "updated_at": "2025-10-17T09:26:12Z",
        "topics": [
            "ai-app-builder",
            "anthropic",
            "artificial-intelligence",
            "bolt",
            "deepseek",
            "gemini",
            "generative-ai",
            "github",
            "llm",
            "llms",
            "lovable",
            "nextjs",
            "ollama",
            "openai",
            "qwen",
            "react",
            "typescript",
            "v0",
            "vercel"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-17T00:19:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3fc706065807423fba65da8d433de77ef4d073e43afec09369d5fb3d03a35cb2/dyad-sh/dyad"
        ],
        "homepage": "https://dyad.sh",
        "readme_summary": "Dyad is a local, open-source AI app builder that allows users to create AI applications directly on their machines. It emphasizes speed, privacy, and user control, differentiating itself by allowing users to bring their own API keys and offering cross-platform compatibility.",
        "key_features": [
            "Local execution",
            "Bring your own keys",
            "Cross-platform compatibility"
        ],
        "primary_use_case": "Building AI applications locally with user-provided API keys.",
        "open_issues": 220,
        "cover_image_prompt": "An architect at a digital drafting table, designing a futuristic cityscape where each building represents an AI application. The architect uses various AI models (represented by glowing orbs) as building blocks, seamlessly integrating them into the city's design. A holographic display shows the Dyad logo and UI elements, subtly connecting the scene to the software. The setting is a bright, modern studio with a focus on clean lines and intuitive design. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 305646330,
        "name": "waha",
        "description": "WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)",
        "url": "https://github.com/devlikeapro/waha",
        "language": "TypeScript",
        "stars": 5019,
        "forks": 969,
        "created_at": "2020-10-20T08:49:48Z",
        "updated_at": "2025-10-17T10:01:32Z",
        "topics": [
            "ai-bot",
            "bot",
            "http-api",
            "python-bot",
            "whatsapp",
            "whatsapp-api",
            "whatsapp-automation",
            "whatsapp-bot",
            "whatsapp-chat",
            "whatsapp-web",
            "whatsapp-web-api"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-10-17T04:44:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/3a213ffc3a04698e964dedb36bddf00f6eb6c4049e0c2df6b08bb69401b5f49e/devlikeapro/waha"
        ],
        "homepage": "https://waha.devlike.pro/",
        "readme_summary": "WAHA is a WhatsApp HTTP API (REST API) that allows users to automate WhatsApp interactions through HTTP requests. It provides a simple way to send and receive messages, manage sessions, and integrate WhatsApp functionality into other applications. The API supports multiple engines, including browser-based (WEBJS), WebSocket Node.js (NOWEB), and WebSocket Go (GOWS).",
        "key_features": [
            "REST API for WhatsApp automation",
            "Session management",
            "Sending text messages",
            "Receiving messages (implicit)",
            "QR code scanning for authentication",
            "Screenshot retrieval of WhatsApp instance",
            "Multiple engine support (WEBJS, NOWEB, GOWS)",
            "Dockerized deployment"
        ],
        "primary_use_case": "Automating WhatsApp interactions via HTTP API for tasks such as sending notifications, building chatbots, and integrating WhatsApp with other systems.",
        "open_issues": 267,
        "cover_image_prompt": "A diligent robot postman delivering messages via miniature WhatsApp chat windows to various connected devices in a futuristic city. The robot carries a satchel overflowing with glowing message bubbles, each representing an API call. Subtle UI elements on the devices display incoming WhatsApp messages. The city skyline features stylized server racks and communication towers. The scene is set at twilight with neon lights accentuating the digital communication. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 1027371257,
        "name": "zuse",
        "description": "ZUSE is an irc client for the terminal made in Go with Bubbletea",
        "url": "https://github.com/babycommando/zuse",
        "language": "Go",
        "stars": 278,
        "forks": 13,
        "created_at": "2025-07-27T22:12:35Z",
        "updated_at": "2025-10-17T08:25:03Z",
        "topics": [],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2025-07-28T07:19:38Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1027371257/e0b0044f-9b72-4a4c-913a-91dab2f3fcb6"
        ],
        "homepage": null,
        "readme_summary": "ZUSE is a terminal-based IRC client written in Go using the Bubble Tea framework. It aims to provide a clean and distraction-free IRC experience directly within the terminal, allowing users to chat efficiently.",
        "key_features": [
            "Terminal-based IRC client",
            "Built with Go and Bubble Tea",
            "Minimal and distraction-free interface",
            "Keybindings for navigation (scrolling, switching panes, quitting)"
        ],
        "primary_use_case": "Chatting on IRC from the terminal.",
        "open_issues": 1,
        "cover_image_prompt": "A calligrapher meticulously writing messages onto glowing scrolls using a sleek, minimalist pen. The scrolls float upwards, instantly appearing on a large, stylized terminal screen displaying an IRC chat interface. The calligrapher's desk is surrounded by subtle digital particles, and the repository name 'ZUSE' is subtly etched into the pen. The scene is set in a quiet, modern study with soft, focused lighting. The composition is clean and focused, with a calming color scheme. The image should be in a flat design style with clear iconography and vibrant colors."
    },
    {
        "id": 207245092,
        "name": "duckstation",
        "description": "Fast PlayStation 1 emulator for x86-64/AArch32/AArch64/RV64",
        "url": "https://github.com/stenzek/duckstation",
        "language": "C++",
        "stars": 9121,
        "forks": 838,
        "created_at": "2019-09-09T07:00:39Z",
        "updated_at": "2025-10-17T09:45:15Z",
        "topics": [
            "appimage",
            "emulator",
            "enhancements",
            "fast",
            "hardware-renderers",
            "jit-compiler",
            "opengl",
            "playstation",
            "ps1",
            "psx",
            "vulkan"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-10-16T10:50:37Z",
        "media_urls": [
            "https://opengraph.githubassets.com/fc68b58ab64a0467219295cf3fa9e0ba8e84b744c52ae938726de5ddbb0a9af1/stenzek/duckstation"
        ],
        "homepage": "",
        "readme_summary": "DuckStation is a PlayStation 1 emulator focused on playability, speed, and long-term maintainability. It aims for accuracy while maintaining performance on low-end devices, supporting various hardware renderers and CPU architectures.",
        "key_features": [
            "CPU Recompiler/JIT (x86-64, armv7/AArch32, AArch64, RISC-V/RV64)",
            "Hardware renderer supporting D3D11, D3D12, OpenGL, Vulkan and Metal APIs",
            "Upscaling, texture filtering, and true colour (24-bit) in hardware renderers",
            "PGXP for geometry precision, texture correction, and depth buffer emulation",
            "Save state support, with runahead and rewind",
            "Support for multiple disc image formats",
            "Controller presets and per-game configuration"
        ],
        "primary_use_case": "Emulating PlayStation 1 games on various platforms (Windows, Linux, macOS).",
        "open_issues": 0,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling the inner workings of a vintage PlayStation console. Each gear represents a different component of the emulator, fitting perfectly to bring the console to life. A holographic screen displays fragments of classic PS1 games, showcasing the clockwork console's ability to recreate them. The clockmaker's workshop is filled with tools and blueprints, subtly incorporating code snippets and UI elements. The scene is bathed in warm, nostalgic lighting. The image should be in a detailed 3D isometric illustration style with vibrant colors and intricate details."
    }
]