[
    {
        "id": 979326675,
        "name": "Devseeker",
        "description": "Lightweight cli coding agent",
        "url": "https://github.com/iBz-04/Devseeker",
        "language": "Python",
        "stars": 34,
        "forks": 0,
        "created_at": "2025-05-07T10:45:46Z",
        "updated_at": "2025-05-15T10:00:37Z",
        "topics": [
            "agentic-ai",
            "ai-agent",
            "aider",
            "autonomous-agents",
            "claude-code",
            "cli-agent",
            "coding-agents",
            "coding-assistant",
            "copilot",
            "cursor-ai",
            "langchain",
            "llm-agents",
            "python"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-09T13:38:38Z",
        "media_urls": [
            "https://opengraph.githubassets.com/5cbac7ae4e28fef6fd61403d31662417bb7bda9ee60b86a5f072c5ed3889d538/iBz-04/Devseeker"
        ],
        "homepage": "https://pypi.org/project/devseeker",
        "readme_summary": "Devseeker is a CLI coding agent that automates code creation, modification, and management. It allows users to generate new projects or improve existing codebases using natural language prompts. Devseeker supports multiple coding modes, various AI models, and provides features like code review, token usage calculation, and short-term memory for code storage.",
        "key_features": [
            "Manage code files and folders",
            "Create and edit code on command",
            "Store code in short-term memory",
            "Review code changes",
            "Run code files",
            "Calculate token usage",
            "Offer multiple coding modes",
            "Support wide range of AI models"
        ],
        "primary_use_case": "Automated code generation and modification based on natural language prompts.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled architect meticulously crafting a digital blueprint for a software project. The architect uses a specialized stylus that converts natural language prompts into precise code structures displayed on a holographic screen. The blueprint seamlessly integrates with existing code modules, represented as interconnected building blocks. The scene is set in a bright, modern design studio filled with subtle tech elements like data visualizations and UI mockups. The repository name, 'Devseeker,' is subtly displayed on the architect's drafting table. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and rich details."
    },
    {
        "id": 981734201,
        "name": "Starguard",
        "description": "CLI that detects fake-star campaigns, dependency hijacks, licence red-flags and other signs of repository risk. Inspired by the ‚Äú4.5 million fake stars‚Äù study, StarGuard helps CTOs, security teams and investors perform fast, automated open-source due-diligence.",
        "url": "https://github.com/m-ahmed-elbeskeri/Starguard",
        "language": "Python",
        "stars": 305,
        "forks": 6,
        "created_at": "2025-05-11T19:13:45Z",
        "updated_at": "2025-05-15T07:42:34Z",
        "topics": [],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-13T23:54:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/bf4572415ad0603f420c18ba19cd86d9d8e927673aae250a16741234d6addda1/m-ahmed-elbeskeri/Starguard"
        ],
        "homepage": null,
        "readme_summary": "StarGuard is a CLI tool designed to assess the risk associated with GitHub repositories. It automates open-source due diligence by detecting fake stars, dependency vulnerabilities, license issues, and other red flags. StarGuard provides trust scores and reports to help users quickly evaluate the safety and reliability of open-source projects.",
        "key_features": [
            "Detects fake-star campaigns",
            "Identifies dependency hijacks",
            "Flags high-risk licenses",
            "Analyzes contributor activity",
            "Scans for code obfuscation and malicious patterns",
            "Generates trust scores and reports"
        ],
        "primary_use_case": "Automated open-source due diligence for CTOs, security teams, and investors.",
        "open_issues": 3,
        "cover_image_prompt": "A seasoned detective meticulously inspecting a constellation of GitHub repositories through a magnifying glass, revealing hidden red flags like fake stars, dependency vulnerabilities, and risky licenses. The detective's desk is cluttered with reports and data visualizations, subtly incorporating code snippets and security metrics. A holographic display shows the StarGuard logo. The scene is set in a dimly lit, futuristic office with a blue and purple color scheme, creating a sense of vigilance. The image should be in a digital painting style with clean lines and clear details."
    },
    {
        "id": 261826855,
        "name": "apkurlgrep",
        "description": "Extract endpoints from APK files",
        "url": "https://github.com/ndelphit/apkurlgrep",
        "language": "Go",
        "stars": 822,
        "forks": 115,
        "created_at": "2020-05-06T17:09:26Z",
        "updated_at": "2025-05-15T09:28:47Z",
        "topics": [
            "apk",
            "endpoints",
            "hacking",
            "infosec",
            "pentesting"
        ],
        "quality_score": 0.25,
        "contributors_count": 0,
        "last_commit_date": "2020-05-09T14:11:06Z",
        "media_urls": [
            "https://opengraph.githubassets.com/dff0d53e04632cb61cabfa6093e0310bf1a2da0ff7758e7d6bbea5adc64b1614/ndelphit/apkurlgrep"
        ],
        "homepage": null,
        "readme_summary": "ApkUrlGrep is a Go-based tool designed to extract URLs and URL paths from APK files. It aids security researchers and penetration testers in identifying potential endpoints within Android applications. The tool simplifies the process of uncovering hidden URLs, facilitating security assessments.",
        "key_features": [
            "Extracts URLs from APK files",
            "Extracts URL paths from APK files"
        ],
        "primary_use_case": "Extracting endpoints from APK files for security analysis and pentesting.",
        "open_issues": 7,
        "cover_image_prompt": "A detective meticulously examining the disassembled parts of a smartphone, revealing hidden URLs like glowing threads within the device's circuitry. The detective uses a magnifying glass that projects a UI screen displaying extracted URLs. Digital particles representing data flow around the phone, highlighting the process of endpoint extraction. The scene is set in a dimly lit, high-tech lab with scattered APK files. The repository name, 'ApkUrlGrep,' is subtly displayed on a monitor in the background. The image should be in a digital painting style with sharp focus and a color scheme of blues and greens, emphasizing the investigative nature of the tool."
    },
    {
        "id": 705574656,
        "name": "Noi",
        "description": "üöÄ Power Your World with AI - Explore, Extend, Empower.",
        "url": "https://github.com/lencx/Noi",
        "language": "JavaScript",
        "stars": 7530,
        "forks": 569,
        "created_at": "2023-10-16T09:27:58Z",
        "updated_at": "2025-05-15T05:48:59Z",
        "topics": [
            "ai",
            "application",
            "browser",
            "chatgpt",
            "claude",
            "copilot",
            "deepseek",
            "extension",
            "gemini",
            "grok",
            "groq",
            "huggingchat",
            "macos",
            "noi",
            "perplexity",
            "poe",
            "qwen",
            "suno",
            "tools",
            "windows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-01T02:21:19Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a99a1de323d51e3ebacde160b66a8f35dc29d0cd4a55ae6c4c7fbe2e8a9f8a03/lencx/Noi"
        ],
        "homepage": "",
        "readme_summary": "Noi is a JavaScript-based application that functions as an AI-enhanced browser, allowing users to integrate and manage various AI services like ChatGPT, Claude, and Gemini. It offers features such as customizable prompts, batch messaging to multiple AI chats, theming options, a cache mode for quick swapping of links, and cookie data isolation for using multiple accounts on the same website.",
        "key_features": [
            "AI Support for multiple models (ChatGPT, Claude, Gemini, Grok, DeepSeek, GitHub Copilot, HuggingChat)",
            "Customizable browser with the ability to add any URL",
            "Prompts Management (add, sync, batch tag, remove)",
            "Noi Ask (send batch messages to multiple AI chats)",
            "Themes (Light/Dark/System/Monochromatic/Frosted Texture)",
            "Noi Cache Mode (cache links for quick swapping)",
            "Cookie Data Isolation (multiple accounts on the same website)"
        ],
        "primary_use_case": "AI-enhanced, customizable browser designed to streamline digital experience by integrating and managing multiple AI services.",
        "open_issues": 148,
        "cover_image_prompt": "Imagine a skilled conductor leading an orchestra of AI assistants. Each instrument represents a different AI model (ChatGPT, Claude, Gemini, etc.). The conductor, representing Noi, seamlessly orchestrates these AI models to create a harmonious and powerful symphony of information and solutions. The conductor's baton glows with digital energy, subtly connecting the metaphor to software. The scene is set in a futuristic concert hall with vibrant lighting. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 568098118,
        "name": "plane",
        "description": "üî• üî• üî• Open Source JIRA, Linear, Monday, and Asana Alternative. Plane helps you track your issues, epics, and cycles the easiest way on the planet.",
        "url": "https://github.com/makeplane/plane",
        "language": "TypeScript",
        "stars": 35962,
        "forks": 2266,
        "created_at": "2022-11-19T12:55:01Z",
        "updated_at": "2025-05-15T09:53:28Z",
        "topics": [
            "django",
            "docker",
            "issue-tracker",
            "jira",
            "jira-alternative",
            "kanban",
            "linear",
            "nextjs",
            "postgresql",
            "product-management",
            "project-management",
            "python",
            "react",
            "redis",
            "rest-api",
            "typescript",
            "work-management"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-14T12:31:36Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/568098118/40811372-7dd8-4e12-a9da-b46bdd4c3dfe"
        ],
        "homepage": "http://plane.so",
        "readme_summary": "Plane is an open-source project management tool designed as an alternative to Jira, Linear, Monday, and Asana. It helps teams track issues, manage sprints (cycles), and organize product roadmaps. Key features include issue tracking, cycle management, modular project breakdown, customizable views, and AI-powered pages for idea capture.",
        "key_features": [
            "Issues tracking and management with rich text editor and sub-properties",
            "Cycles for sprint tracking with burn-down charts",
            "Modules for dividing projects into smaller parts",
            "Customizable views with filters",
            "Pages for capturing and organizing ideas with AI capabilities"
        ],
        "primary_use_case": "Open-source project management for tracking issues, epics, and cycles.",
        "open_issues": 451,
        "cover_image_prompt": "Imagine a skilled air traffic controller in a brightly lit control tower, expertly managing a fleet of paper airplanes, each representing a project task. The controller uses a large, interactive holographic display showing a Kanban board with colorful lanes and issue cards. Some planes are landing smoothly, others are circling, waiting for clearance, and a few are being rerouted to different lanes. The tower is sleek and modern, with subtle UI elements and data visualizations integrated into the design. The repository name, 'Plane,' is subtly displayed on the tower's facade. The scene is in a 3D isometric illustration style with vibrant colors and a focus on clarity and organization."
    },
    {
        "id": 793866369,
        "name": "Checkmate",
        "description": "Checkmate is an open-source, self-hosted tool designed to track and monitor server hardware, uptime, response times, and incidents in real-time with beautiful visualizations.",
        "url": "https://github.com/bluewave-labs/Checkmate",
        "language": "JavaScript",
        "stars": 5516,
        "forks": 330,
        "created_at": "2024-04-30T02:44:38Z",
        "updated_at": "2025-05-15T05:39:20Z",
        "topics": [
            "good-first-contribution",
            "good-first-issue",
            "good-first-project",
            "help-wanted",
            "incident",
            "infrastructure",
            "infrastructure-monitoring",
            "mui",
            "mui-material",
            "server-monitor",
            "server-monitoring",
            "server-monitoring-tools",
            "statuspage",
            "uptime",
            "uptime-checker",
            "uptime-monitor",
            "uptime-monitoring",
            "uptime-status",
            "uptimerobot"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-14T21:31:54Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/793866369/d0a1ab96-c391-42a8-ae35-3fa3943ee8ba"
        ],
        "homepage": "https://checkmate.so/",
        "readme_summary": "Checkmate is an open-source, self-hosted tool for monitoring server infrastructure. It tracks server hardware, uptime, response times, and incidents in real-time, providing alerts and visualizations. An optional agent, Capture, provides additional insights into server CPU, RAM, disk, and temperature status.",
        "key_features": [
            "Server hardware monitoring",
            "Uptime tracking",
            "Response time monitoring",
            "Incident tracking",
            "Real-time alerts and reports",
            "Visualizations",
            "Agent-based data retrieval (Capture)",
            "Self-hosted"
        ],
        "primary_use_case": "Real-time monitoring of server hardware, uptime, response times, and incidents.",
        "open_issues": 50,
        "cover_image_prompt": "A skilled architect meticulously inspecting a digital blueprint of a skyscraper, ensuring its structural integrity and uptime. The architect uses a holographic interface displaying real-time server metrics and response times, highlighting potential vulnerabilities with color-coded alerts. The blueprint subtly incorporates the 'Checkmate' logo. The scene is set in a futuristic control room with large screens showing visualizations of server performance. The lighting is crisp and professional, emphasizing precision and reliability. The image should be in a 3D isometric illustration style with clean lines and a focus on clarity."
    }
]