[
    {
        "id": 562007145,
        "name": "parsec-vdd",
        "description": "âœ¨ Perfect virtual display for game streaming",
        "url": "https://github.com/nomi-san/parsec-vdd",
        "language": "C#",
        "stars": 4479,
        "forks": 210,
        "created_at": "2022-11-05T02:44:12Z",
        "updated_at": "2025-10-12T07:51:57Z",
        "topics": [
            "headless-display",
            "idd",
            "iddcx",
            "indirect-display",
            "parsec",
            "parsec-client",
            "parsec-cloud",
            "parsec-vdd",
            "vdd",
            "virtual-display"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-08-01T10:21:33Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/562007145/f932d487-da62-4646-876a-cef4e1e06ea6"
        ],
        "homepage": "",
        "readme_summary": "The parsec-vdd repository provides a standalone solution for creating virtual displays on Windows hosts using the Parsec Virtual Display Driver (VDD), independent of the Parsec app. It leverages the IddCx API to generate virtual displays with support for high resolutions and refresh rates, making it suitable for gaming, streaming, or remote work.",
        "key_features": [
            "Standalone virtual display driver",
            "IddCx API usage",
            "High resolution and refresh rate support (up to 4K and 240 Hz)",
            "Virtual display management app (ParsecVDisplay)",
            "Core API for direct control of the driver"
        ],
        "primary_use_case": "Creating virtual displays for gaming, streaming, and remote work on Windows systems.",
        "open_issues": 29,
        "cover_image_prompt": "A stage magician conjuring multiple glowing screens from thin air, each displaying a different application window. The magician's hands emit streams of digital particles that form the virtual displays. A small control panel with sliders and buttons sits nearby, representing display settings. The background features subtle circuit patterns and glowing lines, hinting at the underlying technology. The repository name, 'Parsec VDD,' is subtly projected onto one of the screens. The scene is set in a modern, minimalist studio with soft, diffused lighting. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 1028996364,
        "name": "nightwatcher",
        "description": "Web-based IP camera viewer for fast, simple streaming in any browser ðŸ¦‡",
        "url": "https://github.com/daya0576/nightwatcher",
        "language": "Python",
        "stars": 141,
        "forks": 6,
        "created_at": "2025-07-30T11:17:08Z",
        "updated_at": "2025-10-12T05:46:44Z",
        "topics": [],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-10-02T03:50:51Z",
        "media_urls": [
            "https://opengraph.githubassets.com/25f7b0283a201c3cd4a2e10c472bc14bf5f853bdf186e4d60172db281c367b64/daya0576/nightwatcher"
        ],
        "homepage": "",
        "readme_summary": "Night Watcher is a web-based IP camera viewer designed for fast and simple streaming in any browser. It offers features like custom detection, cross-platform support, and privacy through local models, aiming for a user-friendly experience.",
        "key_features": [
            "Blazing fast streaming",
            "Cross Platform Support",
            "Privacy & Extensibility (Local models and custom detection)",
            "Simplicity"
        ],
        "primary_use_case": "Viewing IP camera streams in a web browser with custom detection capabilities.",
        "open_issues": 0,
        "cover_image_prompt": "A watchful owl perched atop a router, its eyes glowing as it monitors a neighborhood scene displayed on multiple screens. The screens show various camera feeds, some with highlighted areas indicating detected motion. Digital particles flow from the router to the owl, representing the data stream. A small UI element on one screen displays the Night Watcher logo. The scene is set at night with a soft, ambient glow. The image should be in a 3D isometric illustration style with rich details and a calming color scheme."
    },
    {
        "id": 871772837,
        "name": "Grid-Mobile",
        "description": "Grid: Private Location Sharing mobile app for iOS/Android. E2EE with Matrix.",
        "url": "https://github.com/Rezivure/Grid-Mobile",
        "language": "Dart",
        "stars": 269,
        "forks": 14,
        "created_at": "2024-10-12T22:25:15Z",
        "updated_at": "2025-10-12T00:41:24Z",
        "topics": [
            "gps",
            "grid",
            "groups",
            "location",
            "maps",
            "navigation",
            "privacy",
            "sharing",
            "track",
            "tracking"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-09-09T00:49:16Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c2936f6726e54bf7c5fa8597c6e40f0efbdc020715da4f41b1f77b5e65d69168/Rezivure/Grid-Mobile"
        ],
        "homepage": "https://mygrid.app",
        "readme_summary": "Grid-Mobile is a cross-platform mobile application (iOS and Android) built with Flutter for private location sharing. It uses end-to-end encryption (E2EE) and integrates with the Matrix protocol for secure, decentralized communication, offering users control over who can access their location data.",
        "key_features": [
            "End-to-End Encryption (E2EE)",
            "Matrix Protocol Integration",
            "Cross-Platform (iOS and Android)",
            "Real-Time Location Sharing",
            "Self-Hosted Capability"
        ],
        "primary_use_case": "Secure and private location sharing with trusted contacts.",
        "open_issues": 17,
        "cover_image_prompt": "A cartographer meticulously drawing a map with glowing lines connecting various locations, each protected by a small, transparent shield. The cartographer uses a special pen that encrypts the location data as it's drawn. A faint Matrix code overlay appears on the map, subtly indicating the protocol integration. The scene is set in a futuristic, minimalist workshop with soft, ambient lighting. Small UI elements display location sharing settings and encryption status. The composition is clean and focused, using a blue and green color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 62743585,
        "name": "spotify-downloader",
        "description": "Download your Spotify playlists and songs along with album art and metadata (from YouTube if a match is found).",
        "url": "https://github.com/spotDL/spotify-downloader",
        "language": "Python",
        "stars": 22371,
        "forks": 1961,
        "created_at": "2016-07-06T18:19:20Z",
        "updated_at": "2025-10-12T09:52:26Z",
        "topics": [
            "download-music",
            "hacktoberfest",
            "mp3",
            "music",
            "playlists",
            "python",
            "song",
            "song-lyrics",
            "spotdl",
            "spotdl-cli",
            "spotify",
            "youtube-music"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-10-08T10:54:35Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/62743585/b4cd7500-5368-11eb-8890-5be8f41f90b4"
        ],
        "homepage": "https://spotdl.readthedocs.io/en/latest/",
        "readme_summary": "The spotify-downloader repository, also known as spotDL, is a Python-based command-line tool that downloads music from Spotify playlists and songs. It finds matching songs on YouTube, downloads them, and embeds album art, lyrics, and metadata into the downloaded files.",
        "key_features": [
            "Downloads Spotify playlists and songs",
            "Fetches album art",
            "Retrieves lyrics",
            "Embeds metadata",
            "Command-line interface",
            "YouTube integration for song retrieval"
        ],
        "primary_use_case": "Downloading music from Spotify for offline listening and archival purposes.",
        "open_issues": 51,
        "cover_image_prompt": "Imagine a skilled librarian carefully selecting books (songs) from a vast, organized digital library (Spotify). The librarian uses a special tool (spotDL) that automatically finds corresponding copies of these books in another archive (YouTube), then meticulously copies the covers (album art), inserts annotations (lyrics), and stamps each book with detailed information (metadata). The scene is set in a bright, modern library with glowing digital interfaces and subtle code visualizations projected onto the walls. The composition is clean and focused, with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1039587768,
        "name": "osaurus",
        "description": "Native, Apple Siliconâ€“only local LLM server. Similar to Ollama, but built on Apple's MLX for maximum performance on Mâ€‘series chips. SwiftUI app + SwiftNIO server with OpenAIâ€‘compatible endpoints.",
        "url": "https://github.com/dinoki-ai/osaurus",
        "language": "Swift",
        "stars": 1422,
        "forks": 47,
        "created_at": "2025-08-17T15:05:39Z",
        "updated_at": "2025-10-12T08:48:08Z",
        "topics": [
            "llm",
            "swift"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-10-11T00:51:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ad2ec6c3f477a8d9fead16edb205d328d9f6d4ec584c2acd593494377d8f3995/dinoki-ai/osaurus"
        ],
        "homepage": "https://osaurus.ai",
        "readme_summary": "Osaurus is a native, Apple Silicon-only local LLM server, similar to Ollama. It leverages Apple's MLX framework for optimized performance on M-series chips. It features a SwiftUI app and a SwiftNIO server, providing OpenAI and Ollama-compatible endpoints for local LLM inference.",
        "key_features": [
            "Native MLX runtime",
            "Apple Silicon only",
            "OpenAI API compatible",
            "Ollama-compatible",
            "Function/Tool calling",
            "Fast token streaming",
            "Model manager UI",
            "System resource monitor",
            "Self-contained"
        ],
        "primary_use_case": "Local LLM inference on Apple Silicon Macs with OpenAI and Ollama-compatible APIs.",
        "open_issues": 4,
        "cover_image_prompt": "A skilled chef meticulously preparing a complex dish using ingredients labeled \"LLM Models\". The chef uses a high-tech Apple Silicon processor as a cutting board, slicing and dicing the ingredients with precision. A holographic display shows OpenAI and Ollama API endpoints, representing the dish's final presentation. Steam rises from the dish, forming the shape of a neural network. The scene is set in a modern, minimalist kitchen with bright, clean lighting. Small UI elements display system resource usage. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 1041039196,
        "name": "wifi-3d-fusion",
        "description": "WiFi-3D-Fusion is an open-source research project that leverages WiFi CSI signals and deep learning to estimate 3D human pose, fusing wireless sensing with computer vision techniques for next-generation spatial awareness.",
        "url": "https://github.com/MaliosDark/wifi-3d-fusion",
        "language": "Python",
        "stars": 839,
        "forks": 73,
        "created_at": "2025-08-19T22:22:13Z",
        "updated_at": "2025-10-12T09:16:54Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-08-26T21:22:36Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1041039196/ac401968-2dc8-417c-8738-899d5f5b9e03"
        ],
        "homepage": "",
        "readme_summary": "WiFi-3D-Fusion is a research project that uses WiFi Channel State Information (CSI) and deep learning to estimate 3D human pose. It combines wireless sensing and computer vision to achieve spatial awareness, enabling applications like activity recognition and human-computer interaction.",
        "key_features": [
            "3D human pose estimation using WiFi CSI signals",
            "Fusion of wireless sensing and computer vision",
            "Deep learning-based pose estimation",
            "Integration with ESP32 devices for data acquisition",
            "Visualization using Three.js and Open3D",
            "Data capture using Scapy, tcpdump, and Nexmon",
            "Use of OpenMMLab for computer vision tasks",
            "Potential integration with NeRF for RF field modeling"
        ],
        "primary_use_case": "Estimating 3D human pose for spatial awareness applications.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a skilled sculptor shaping a human figure out of shimmering WiFi waves. The sculptor meticulously molds the waves, guided by a faint digital blueprint projected onto the figure. The waves coalesce to form a detailed 3D human pose. Subtle UI elements float nearby, displaying real-time data visualizations of WiFi signal strength and pose estimations. The scene is set in a bright, airy studio with soft, diffused lighting. The composition is clean and focused, highlighting the sculptor and the emerging figure. The color scheme is primarily blues and whites with subtle accents of orange and green. The image should be in a 3D isometric illustration style with rich details and a sense of technological wonder."
    },
    {
        "id": 1044178074,
        "name": "agent-c",
        "description": "Ultra-lightweight AI Agent",
        "url": "https://github.com/bravenewxyz/agent-c",
        "language": "C",
        "stars": 406,
        "forks": 27,
        "created_at": "2025-08-25T09:50:48Z",
        "updated_at": "2025-10-12T09:13:18Z",
        "topics": [
            "agent",
            "ai-agent",
            "openrouter"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-08-26T19:53:06Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7bdb6570fe5a2d5ef0c00e3efe2900a22684c5b3b20f4a4816c1441b152146c0/bravenewxyz/agent-c"
        ],
        "homepage": "https://bravenew.xyz",
        "readme_summary": "Agent-C is an ultra-lightweight AI agent written in C that interacts with the OpenRouter API to execute shell commands. It features a small binary size, conversation memory, and cross-platform compatibility (macOS and Linux).",
        "key_features": [
            "Tool Calling (shell command execution)",
            "Optimized Binaries (small size)",
            "Conversation Memory (sliding window)",
            "Cross-Platform (macOS and Linux)"
        ],
        "primary_use_case": "Creating AI agents that can execute shell commands using the OpenRouter API.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled craftsman meticulously assembling a complex clockwork robot that represents an AI agent. The robot is powered by a glowing OpenRouter API key, which acts as its heart. The robot's hands are shown typing commands on a miniature shell interface projected onto a nearby surface. A memory bank, depicted as a series of interconnected gears, stores conversation history. The scene is set in a clean, minimalist workshop with soft, diffused lighting. Small UI elements and code snippets are subtly integrated into the background. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 1041924588,
        "name": "growchief",
        "description": "The Ultimate all-in social media automation (outreach) tool ðŸ¤–",
        "url": "https://github.com/growchief/growchief",
        "language": "TypeScript",
        "stars": 3118,
        "forks": 202,
        "created_at": "2025-08-21T08:06:06Z",
        "updated_at": "2025-10-12T08:48:29Z",
        "topics": [
            "automation",
            "n8n",
            "nestjs",
            "nodejs",
            "outreach",
            "social-media",
            "temporal"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-09-09T16:29:41Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1041924588/da104dc8-8aa2-40f9-8a7f-8435149dbb51"
        ],
        "homepage": "https://growchief.com",
        "readme_summary": "GrowChief is an open-source social media automation tool designed to automate interactions on social media platforms, such as sending connection requests and follow-up messages. It's built with features like concurrency handling, enrichment workflows, working hour consideration, proxy support, and human-like automation using Playwright and Patchright for stealth.",
        "key_features": [
            "Concurrency handling",
            "Enrichment workflow",
            "Working hours consideration",
            "Proxy support",
            "Human-like automation",
            "Playwright and Patchright integration",
            "Secure account authentication"
        ],
        "primary_use_case": "Automating social media interactions and outreach campaigns.",
        "open_issues": 2,
        "cover_image_prompt": "A diligent robot gardener tending to a lush garden where each plant represents a social media profile. The robot is carefully watering some plants (sending connection requests) and pruning others (following up with messages). Small UI screens float around the garden, displaying automation workflows and analytics. Digital particles flow from the robot's tools, nourishing the plants. The repository name, 'GrowChief,' is subtly engraved on the robot's watering can. The scene is set in a vibrant, futuristic greenhouse with soft, diffused lighting. The image should be in 3D isometric illustration style with rich details and a cheerful color scheme."
    }
]