[
    {
        "id": 725725007,
        "name": "Upscale-A-Video",
        "description": " [CVPR 2024] Upscale-A-Video: Temporal-Consistent Diffusion Model for Real-World Video Super-Resolution",
        "url": "https://github.com/sczhou/Upscale-A-Video",
        "language": "Python",
        "stars": 1296,
        "forks": 76,
        "created_at": "2023-11-30T18:38:24Z",
        "updated_at": "2025-07-18T09:22:41Z",
        "topics": [
            "aigc-enhancement",
            "deflicker",
            "video-diffusion-model",
            "video-super-resolution"
        ],
        "quality_score": 0.6000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2024-09-27T10:50:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/11b9f3186da591c34ef40890dfaa49e6b5fc0e0defd6740490013739a93048d8/sczhou/Upscale-A-Video"
        ],
        "homepage": "",
        "readme_summary": "Upscale-A-Video is a diffusion-based model designed for video super-resolution. It takes low-resolution videos and optional text prompts as input to generate high-resolution, temporally consistent videos. The model is suitable for enhancing real-world videos and AIGC content.",
        "key_features": [
            "Temporal-consistent video super-resolution",
            "Diffusion-based model",
            "Text prompt conditioning",
            "AIGC video enhancement",
            "YouHQ dataset"
        ],
        "primary_use_case": "Real-world video super-resolution",
        "open_issues": 35,
        "cover_image_prompt": "Imagine an old film reel being fed into a futuristic machine. The machine glows with digital light as it processes the grainy footage. Emerging from the other side is a crystal-clear, high-resolution video displayed on a sleek monitor. Subtle UI elements on the machine show options for text prompts and resolution settings. The scene is set in a modern editing suite with soft, diffused lighting. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, subtly incorporating the 'Upscale-A-Video' logo. The composition is clean and focused, emphasizing the transformation from low-quality to high-quality video."
    },
    {
        "id": 8530120,
        "name": "jbake",
        "description": "Java based open source static site/blog generator for developers & designers.",
        "url": "https://github.com/jbake-org/jbake",
        "language": "Java",
        "stars": 1139,
        "forks": 330,
        "created_at": "2013-03-03T01:33:47Z",
        "updated_at": "2025-07-14T13:17:37Z",
        "topics": [
            "asciidoc",
            "asciidoctor",
            "html",
            "java",
            "jbake",
            "markdown",
            "static-site-generator"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2023-02-26T11:19:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7d4092eea30542e37131ffab45ccc289b7b8d3f7e4d56f8bfb2b3045b88c598f/jbake-org/jbake"
        ],
        "homepage": "http://jbake.org",
        "readme_summary": "JBake is a Java-based static site and blog generator designed for developers and designers. It supports popular markup languages like AsciiDoc and Markdown and provides a flexible platform for creating static websites. A Docker image is available for simplified deployment and usage.",
        "key_features": [
            "Static site generation",
            "Blog generation",
            "Java-based",
            "Supports AsciiDoc and Markdown",
            "Uses Gradle build system",
            "Docker image available"
        ],
        "primary_use_case": "Generating static websites and blogs for developers and designers.",
        "open_issues": 142,
        "cover_image_prompt": "A skilled architect meticulously crafting a grand website blueprint from raw materials like text documents and images. The architect uses specialized tools that transform these elements into a beautifully structured and functional website, complete with interactive blog posts. The scene is set in a bright, modern design studio filled with digital blueprints and glowing screens displaying website code. Small UI elements showcasing the JBake interface are subtly incorporated. The composition is clean and focused with a vibrant color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1009856713,
        "name": "notebookllama",
        "description": "A fully open-source, LlamaCloud-backed alternative to NotebookLM",
        "url": "https://github.com/run-llama/notebookllama",
        "language": "Python",
        "stars": 1166,
        "forks": 154,
        "created_at": "2025-06-27T20:48:40Z",
        "updated_at": "2025-07-18T06:42:26Z",
        "topics": [],
        "quality_score": 0.8499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-17T17:33:51Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cc7716dba2117fa01ab0c66cf5d449055a195cae0c763744b4e1d0f012cf0e1e/run-llama/notebookllama"
        ],
        "homepage": null,
        "readme_summary": "NotebookLlama is an open-source alternative to NotebookLM, leveraging LlamaCloud for backend support. It allows users to create a digital notebook by integrating various API services and provides tools for automated agent and pipeline creation, simplifying the process of managing and interacting with notes and documents.",
        "key_features": [
            "Open-source alternative to NotebookLM",
            "Backed by LlamaCloud",
            "Uses uv for dependency management",
            "Requires API keys for OpenAI, ElevenLabs, and LlamaCloud",
            "Automated agent and pipeline creation",
            "Docker Compose for backend services"
        ],
        "primary_use_case": "Creating and managing a digital notebook powered by LlamaCloud, allowing users to organize and interact with their notes and documents.",
        "open_issues": 6,
        "cover_image_prompt": "Imagine a diligent librarian, surrounded by towering stacks of physical books, seamlessly integrating them into a glowing, cloud-shaped digital library. The librarian uses a magical quill that transforms handwritten notes and printed pages into interactive digital documents displayed on hovering screens. Small UI elements show the LlamaCloud logo and snippets of Python code. The scene is set in a warmly lit, futuristic library with a clean, organized composition. The image should be in a 3D isometric illustration style with vibrant colors and rich details, conveying the ease of integrating physical notes into a digital knowledge base."
    },
    {
        "id": 975891605,
        "name": "stoolap",
        "description": "NewSQL That Starts Simple. High-performance SQL database with MVCC, columnar indexes, and HTAP capabilities. Pure Go and zero dependencies.",
        "url": "https://github.com/stoolap/stoolap",
        "language": "Go",
        "stars": 284,
        "forks": 10,
        "created_at": "2025-05-01T05:09:11Z",
        "updated_at": "2025-07-18T06:44:20Z",
        "topics": [
            "database",
            "embed",
            "golang",
            "mvcc",
            "newsql",
            "sql",
            "zero-dependency"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-06-17T01:13:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2484a8797565b4056c845ab96c686978820d51fb2af9d9ed2341ec9fc03cefe0/stoolap/stoolap"
        ],
        "homepage": "https://stoolap.io/",
        "readme_summary": "Stoolap is a high-performance NewSQL database written in pure Go with zero dependencies. It offers ACID transactions with MVCC, columnar indexes for fast analytics, and HTAP capabilities, making it suitable for applications requiring both transactional and analytical processing in a single engine. It also boasts PostgreSQL compatibility via a wire protocol server.",
        "key_features": [
            "Pure Go Implementation with zero dependencies",
            "ACID Transactions with MVCC",
            "Lock-Free Design",
            "Columnar indexes for fast analytical processing",
            "HTAP Capabilities",
            "Memory-First Design",
            "Vectorized Execution",
            "Rich SQL Support",
            "JSON Support",
            "Go SQL Driver",
            "PostgreSQL Compatibility"
        ],
        "primary_use_case": "Hybrid transactional/analytical processing (HTAP) workloads",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled architect meticulously constructing a towering skyscraper, each floor representing a different layer of an application. The architect uses special columnar building blocks that allow for rapid construction and analysis. Data flows seamlessly through the building, powering both the structural integrity (transactions) and the overall design (analytics). A holographic display shows real-time performance metrics and data insights. The scene is set in a bright, futuristic cityscape. Small UI elements display SQL queries and data structures. The image should be in 3D isometric illustration style with clean lines and vibrant colors."
    }
]