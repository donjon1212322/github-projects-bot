[
    {
        "id": 262382962,
        "name": "shutter-encoder",
        "description": "A professional video compression tool accessible to all, mostly based on FFmpeg.",
        "url": "https://github.com/paulpacifico/shutter-encoder",
        "language": "Java",
        "stars": 1378,
        "forks": 68,
        "created_at": "2020-05-08T17:12:35Z",
        "updated_at": "2025-06-04T08:24:16Z",
        "topics": [
            "converter",
            "ffmpeg",
            "gui",
            "java"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-03T17:28:54Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/262382962/a7a2f180-af11-11ea-95ae-b0f450259b3b"
        ],
        "homepage": "https://www.shutterencoder.com",
        "readme_summary": "Shutter Encoder is a professional-grade video compression tool built upon FFmpeg, designed to be accessible to all users. It provides a graphical user interface (GUI) for simplifying the video compression process. The application is written in Java.",
        "key_features": [
            "Video compression",
            "FFmpeg-based",
            "GUI for ease of use",
            "Cross-platform (Java)"
        ],
        "primary_use_case": "Professional video compression for a wide range of users.",
        "open_issues": 130,
        "cover_image_prompt": "A skilled artisan meticulously crafting a video masterpiece from raw footage using a sophisticated encoder's workbench. The artisan carefully adjusts settings on the workbench, transforming fragmented clips into a seamless, high-quality video stream. Digital particles representing various video codecs swirl around the workbench, subtly connecting the craft to software. The scene is set in a brightly lit workshop with a focus on precision and quality. Small UI elements displaying encoding parameters are subtly incorporated. The composition is clean and focused with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details."
    },
    {
        "id": 689924323,
        "name": "OsintTube",
        "description": "üîç An Easy-to-Use YouTube OSINT Tool",
        "url": "https://github.com/rdWei/OsintTube",
        "language": "Python",
        "stars": 49,
        "forks": 5,
        "created_at": "2023-09-11T07:35:05Z",
        "updated_at": "2025-06-03T19:33:08Z",
        "topics": [
            "osint",
            "osint-python",
            "osint-tool",
            "youtube",
            "youtube-osint"
        ],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2024-06-09T03:54:09Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d7e1d33fe8761af152581bbba13c4bbcdb3e111c26421174241c5e700a2edec1/rdWei/OsintTube"
        ],
        "homepage": "",
        "readme_summary": "OsintTube is a Python-based tool designed for performing Open Source Intelligence (OSINT) analysis on YouTube channels. It provides an interactive shell to extract various data points, including channel description, location, video count, subscriber count, views, estimated video duration, join date, category, and estimated earnings. The tool aims to simplify the process of gathering information from YouTube channels for investigative purposes.",
        "key_features": [
            "Retrieves channel description",
            "Retrieves channel location",
            "Retrieves total number of videos",
            "Retrieves number of subscribers",
            "Retrieves total channel views",
            "Estimates video duration",
            "Retrieves channel join date",
            "Retrieves channel category",
            "Estimates channel earnings"
        ],
        "primary_use_case": "YouTube OSINT analysis",
        "open_issues": 0,
        "cover_image_prompt": "A detective meticulously examining a YouTube video timeline with a magnifying glass, uncovering hidden clues and data points within the video's metadata. The detective is surrounded by floating screens displaying channel information, subscriber counts, and estimated earnings. Subtle digital particles highlight key OSINT data points within the video stream. The scene is set in a dimly lit, high-tech office with a focused atmosphere. Small code snippets related to YouTube API calls are subtly displayed on nearby monitors. The composition is clean and focused with a blue and green color scheme. The image should be in a digital painting style with clear outlines and rich details."
    },
    {
        "id": 791194177,
        "name": "tldx",
        "description": "Domain Availability Research Tool",
        "url": "https://github.com/brandonyoungdev/tldx",
        "language": "Go",
        "stars": 461,
        "forks": 9,
        "created_at": "2024-04-24T09:07:11Z",
        "updated_at": "2025-06-04T10:06:36Z",
        "topics": [
            "cli",
            "developer-tools",
            "domain",
            "golang"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-02T18:59:22Z",
        "media_urls": [
            "https://opengraph.githubassets.com/5e472825355de015fbff23aa870d9948cd000025ecb59b12ea40f4c413a25a94/brandonyoungdev/tldx"
        ],
        "homepage": "https://brandonyoung.dev/blog/introducing-tldx/",
        "readme_summary": "tldx is a command-line tool designed to help users quickly brainstorm and identify available domain names. It achieves this by generating domain permutations based on keywords, prefixes, suffixes, and TLDs, and then concurrently checking their availability using WHOIS lookups. The tool streams results as they are found and offers options for filtering by domain length.",
        "key_features": [
            "Smart keyword-based domain permutations (prefixes, suffixes, TLDs)",
            "Fast and concurrent WHOIS availability checks",
            "Streams results as they're found",
            "Optional filtering by domain length"
        ],
        "primary_use_case": "Brainstorming and finding available domain names quickly.",
        "open_issues": 4,
        "cover_image_prompt": "A skilled cartographer meticulously charting unexplored islands on a vast ocean, each island representing a potential domain name. The cartographer uses a magical telescope that instantly reveals whether an island is already inhabited (unavailable) or pristine (available). The telescope displays subtle UI elements showing domain extensions (.com, .io, .ai) as it scans. The scene is set in a sunlit, airy workshop filled with maps and nautical instruments. Small digital particles float around the telescope, representing the permutation process. The image should be in a vibrant, detailed 3D isometric illustration style with a focus on clarity and readability."
    },
    {
        "id": 863835427,
        "name": "pangolin",
        "description": "Tunneled Mesh Reverse Proxy Server with Identity and Access Control and Dashboard UI",
        "url": "https://github.com/fosrl/pangolin",
        "language": "TypeScript",
        "stars": 9279,
        "forks": 237,
        "created_at": "2024-09-27T02:16:47Z",
        "updated_at": "2025-06-04T10:02:02Z",
        "topics": [
            "crowdsec",
            "docker",
            "home-lab",
            "identity-management",
            "iot",
            "letsencrypt",
            "reverse-proxy",
            "self-hosted",
            "single-sign-on",
            "traefik",
            "wireguard"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-06-03T02:42:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/18223ff2ea34ecfb5d22cbec7a8bba87b4f024be9be600b0d4f635f230406131/fosrl/pangolin"
        ],
        "homepage": "https://fossorial.io",
        "readme_summary": "Pangolin is a self-hosted tunneled reverse proxy server designed to securely expose private resources on distributed networks. It provides features like reverse proxy through WireGuard, identity and access management, a simple dashboard UI, and easy deployment options. Pangolin acts as a central hub, connecting isolated networks through encrypted tunnels, enabling easy access to remote services without opening ports.",
        "key_features": [
            "Reverse Proxy Through WireGuard Tunnel",
            "Identity & Access Management",
            "Simple Dashboard UI",
            "Easy Deployment",
            "Modular Design"
        ],
        "primary_use_case": "Securely expose private resources on distributed networks through a tunneled reverse proxy with identity and access control.",
        "open_issues": 69,
        "cover_image_prompt": "Imagine a central control tower, bathed in soft, futuristic light, acting as a secure hub. Encrypted data streams flow into the tower from various remote locations, represented by small, glowing buildings in the distance. Inside the tower, a conductor orchestrates access, granting permissions to users represented by avatars with unique keys. A large screen displays real-time security metrics and access logs. The tower is surrounded by a protective energy field, symbolizing secure access control. Small UI elements float nearby, subtly displaying the Pangolin logo and dashboard interface. The scene is in a clean, 3D isometric illustration style with a focus on clarity and intuitive understanding."
    },
    {
        "id": 69675577,
        "name": "exporter_exporter",
        "description": "A reverse proxy designed for Prometheus exporters",
        "url": "https://github.com/QubitProducts/exporter_exporter",
        "language": "Go",
        "stars": 363,
        "forks": 56,
        "created_at": "2016-09-30T14:51:45Z",
        "updated_at": "2025-06-04T07:06:21Z",
        "topics": [
            "cadvisor",
            "ceh",
            "infra",
            "nginx",
            "prometheus",
            "prometheus-exporter",
            "proxy"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2024-01-25T20:55:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/85809dbbc08a23625b9739d61eb91157e15b70c4dc070fefecd40f4ff30bbb1d/QubitProducts/exporter_exporter"
        ],
        "homepage": "",
        "readme_summary": "The exporter_exporter repository offers a reverse proxy solution tailored for Prometheus exporters. It consolidates access to multiple exporters through a single port, simplifying firewall management and providing TLS encryption. Additionally, it verifies metrics and supports script execution for generating custom metrics, making it a versatile tool for monitoring infrastructure.",
        "key_features": [
            "Reverse proxy for Prometheus exporters",
            "Single port access for multiple exporters",
            "TLS with client certificate authentication",
            "Metrics verification",
            "Script execution for metrics generation"
        ],
        "primary_use_case": "Providing a single entry point for querying multiple Prometheus exporters, simplifying firewall configurations and enhancing security.",
        "open_issues": 9,
        "cover_image_prompt": "Imagine a skilled traffic controller managing a bustling highway of data streams. The controller, positioned in a brightly lit, futuristic control tower, efficiently directs various data 'vehicles' (representing Prometheus exporters) through a single, secure gateway. Each vehicle displays unique metrics, visible as glowing symbols. The control tower subtly displays the repository name on its facade. The scene is set against a backdrop of a stylized server landscape. The image should be in a 3D isometric illustration style with clean lines, vibrant colors, and a focus on clarity and efficiency."
    },
    {
        "id": 774497032,
        "name": "PraisonAI",
        "description": "PraisonAI is a production-ready Multi AI Agents framework, designed to create AI Agents to automate and solve problems ranging from simple tasks to complex challenges. It provides a low-code solution to streamline the building and management of multi-agent LLM systems, emphasising simplicity, customisation, and effective human-agent collaboration.",
        "url": "https://github.com/MervinPraison/PraisonAI",
        "language": "Python",
        "stars": 4655,
        "forks": 649,
        "created_at": "2024-03-19T16:45:25Z",
        "updated_at": "2025-06-04T09:32:09Z",
        "topics": [
            "agents",
            "ai",
            "ai-agent-framework",
            "ai-agent-sdk",
            "ai-agents",
            "ai-agents-framework",
            "ai-agents-sdk",
            "ai-framwork",
            "aiagent",
            "aiagentframework",
            "aiagents",
            "aiagentsframework",
            "framework",
            "multi-agent",
            "multi-agent-collaboration",
            "multi-agent-system",
            "multi-agent-systems",
            "multi-agents",
            "multi-ai-agent",
            "multi-ai-agents"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-06-04T09:32:06Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f9f80a9422b2e16344bc3a67a77a3c8f3769e83838de95b5af56a2d19b3cc9a6/MervinPraison/PraisonAI"
        ],
        "homepage": "https://docs.praison.ai",
        "readme_summary": "PraisonAI is a production-ready Multi AI Agents framework designed for building and managing multi-agent LLM systems. It offers a low-code solution that emphasizes simplicity, customization, and effective human-agent collaboration. The framework supports features like automated agent creation, self-reflection, reasoning, multi-modal capabilities, and integration with tools like LangChain.",
        "key_features": [
            "Automated AI Agents Creation",
            "Self Reflection AI Agents",
            "Reasoning AI Agents",
            "Multi Modal AI Agents",
            "Multi Agent Collaboration",
            "AI Agent Workflow",
            "Add Custom Knowledge",
            "Agents with Short and Long Term Memory",
            "Chat with PDF Agents",
            "Code Interpreter Agents",
            "RAG Agents",
            "Async & Parallel Processing",
            "Auto Agents",
            "Math Agents",
            "Structured Output Agents",
            "LangChain Integrated Agents",
            "Callback Agents",
            "Mini AI Agents",
            "Custom Tools",
            "YAML Configuration",
            "LLM Support"
        ],
        "primary_use_case": "Automating and solving problems ranging from simple tasks to complex challenges using multi-agent LLM systems.",
        "open_issues": 18,
        "cover_image_prompt": "Imagine a team of skilled architects collaborating on a complex blueprint within a futuristic control room. Each architect represents an AI agent, specializing in different aspects of the project. One architect focuses on structural integrity (reasoning), another on aesthetic design (multi-modal), and a third on cost efficiency (math agent). Holographic displays show data flowing between them, symbolizing the agents' collaboration and workflow. A central AI core, glowing softly, represents PraisonAI, orchestrating the entire process. The scene is bathed in cool blue light, with subtle UI elements and code snippets floating in the background, connecting the metaphor to software. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1213463,
        "name": "cgroup-utils",
        "description": "cgroup-utils helps your cgroups life",
        "url": "https://github.com/peo3/cgroup-utils",
        "language": "Python",
        "stars": 111,
        "forks": 22,
        "created_at": "2011-01-02T03:21:57Z",
        "updated_at": "2025-06-03T22:19:09Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2020-03-28T17:20:33Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2a7b21f2d7fa417c40cbbd4fbdee33b878648e7e629f2a29f66380c9857712f5/peo3/cgroup-utils"
        ],
        "homepage": "",
        "readme_summary": "cgroup-utils provides a suite of command-line tools for interacting with Linux control groups. It enables users to monitor resource usage, configure cgroup settings, manage processes within cgroups, and visualize the cgroup hierarchy. The utilities simplify cgroup management for both system administrators and developers.",
        "key_features": [
            "Provides utility tools for managing Linux control groups (cgroups).",
            "Offers commands like `cgutil top` for monitoring cgroup activities.",
            "Includes commands for configuring cgroups (`cgutil configs`), managing events (`cgutil event`), and listing processes within cgroups (`cgutil pgrep`).",
            "Provides tools for managing cgroup directories (`cgutil mkdir`, `cgutil rmdir`).",
            "Offers a command to display cgroup statistics (`cgutil stats`).",
            "Includes a command to visualize the cgroup tree structure (`cgutil tree`)."
        ],
        "primary_use_case": "Managing and monitoring Linux control groups for resource management and process isolation.",
        "open_issues": 1,
        "cover_image_prompt": "A meticulous gardener tending to a garden of Linux containers, carefully pruning and shaping them with specialized tools. Each container is represented by a small, transparent greenhouse with processes visible inside. The gardener uses tools labeled 'cgutil top', 'cgutil stats', and 'cgutil event' to monitor and adjust the resources of each container. A subtle UI overlay shows cgroup configurations and resource usage. The scene is set in a lush, vibrant garden with soft, diffused lighting. The image should be in a 3D isometric illustration style with clean lines and detailed textures."
    },
    {
        "id": 79252808,
        "name": "js-lingui",
        "description": "üåç üìñ A readable, automated, and optimized (3 kb) internationalization for JavaScript",
        "url": "https://github.com/lingui/js-lingui",
        "language": "TypeScript",
        "stars": 5115,
        "forks": 404,
        "created_at": "2017-01-17T17:26:46Z",
        "updated_at": "2025-06-04T03:21:55Z",
        "topics": [
            "hacktoberfest",
            "i18n",
            "icu",
            "internationalization",
            "intl",
            "javascript",
            "localization",
            "messageformat",
            "react",
            "react-components",
            "react-native",
            "translation"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-28T06:20:58Z",
        "media_urls": [
            "https://opengraph.githubassets.com/5ab904cbcd8e3370e4e8bad4168e828ebee2a458b38ec648207b6b3c54418fe7/lingui/js-lingui"
        ],
        "homepage": "https://lingui.dev",
        "readme_summary": "Lingui is a JavaScript internationalization framework that provides tools and libraries for translating applications. It supports ICU MessageFormat, React components, and offers tooling for managing the i18n workflow. Lingui aims to be lightweight, unopinionated, and compatible with existing i18n solutions.",
        "key_features": [
            "Clean and readable code with ICU MessageFormat",
            "Universal usage across JavaScript projects, including React and React Native",
            "Full rich-text support with React components",
            "Powerful tooling for managing i18n workflow (CLI, Vite Plugin, ESLint Plugin)",
            "Unopinionated integration with existing workflows (message keys, auto-generated messages)",
            "Lightweight and optimized core library",
            "Active community support",
            "Compatible with react-intl"
        ],
        "primary_use_case": "Internationalizing JavaScript applications for global audiences.",
        "open_issues": 38,
        "cover_image_prompt": "A skilled translator meticulously weaving threads of different languages into a vibrant tapestry. The translator sits at a loom, with spools of colorful threads representing various languages. The tapestry displays a clear, unified message understandable to all. Small UI elements float around the loom, showing code snippets and translation keys. The scene is set in a bright, airy workshop filled with light. The composition is focused and clean, with a warm color scheme. The image should be in a flat design style with clear iconography and subtle digital elements."
    },
    {
        "id": 116014572,
        "name": "whatsapp-web-reveng",
        "description": "Reverse engineering WhatsApp Web.",
        "url": "https://github.com/sigalor/whatsapp-web-reveng",
        "language": "JavaScript",
        "stars": 6250,
        "forks": 816,
        "created_at": "2018-01-02T12:48:44Z",
        "updated_at": "2025-06-03T21:30:46Z",
        "topics": [
            "encryption",
            "node",
            "reverse-engineering",
            "whatsapp",
            "whatsapp-web"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2024-04-22T11:38:56Z",
        "media_urls": [
            "https://opengraph.githubassets.com/029951aaff1e748ee575c2f37f4405d27672d9f560d6feb590f43811c1336eda/sigalor/whatsapp-web-reveng"
        ],
        "homepage": null,
        "readme_summary": "This repository provides a reverse-engineered implementation of the WhatsApp Web API, focusing on WebSocket communication and encryption. It aims to provide a complete description of the API, enabling the development of custom WhatsApp Web clients. The project includes tools and instructions for setting up the environment using Nix or bare metal installations with Python and Node.js.",
        "key_features": [
            "Complete description and re-implementation of the WhatsApp Web API",
            "WebSocket communication",
            "Nix environment support",
            "JavaScript decryption routine",
            "Python dependencies for encryption and QR code generation"
        ],
        "primary_use_case": "Reverse engineering the WhatsApp Web API to create a custom client.",
        "open_issues": 137,
        "cover_image_prompt": "Imagine a skilled cartographer meticulously tracing the intricate routes of a vast, hidden network on a digital map. The cartographer uses specialized tools to decode encrypted messages flowing across the map, revealing the underlying structure of the network. Small screens display snippets of code and decrypted data, subtly connecting the scene to software. The setting is a dimly lit, high-tech study filled with maps and research materials. The image should be in a detailed technical illustration style with clear labels and vibrant colors, emphasizing the complexity and precision of the reverse engineering process."
    },
    {
        "id": 972282547,
        "name": "ipspot",
        "description": "IPSpot: A Python Tool to Fetch the System's IP Address",
        "url": "https://github.com/openscilab/ipspot",
        "language": "Python",
        "stars": 40,
        "forks": 4,
        "created_at": "2025-04-24T20:28:33Z",
        "updated_at": "2025-06-03T14:09:44Z",
        "topics": [
            "cli",
            "geolocation",
            "geolocation-api",
            "ip",
            "ipv4",
            "ipv6",
            "monitoring",
            "network",
            "private-ip",
            "private-ip-address",
            "public-ip",
            "public-ip-address"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-05-18T22:28:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9ef89926ab3e339d4e31666ea74dc2ce80575011671d153dea7d4e9ea760bc69/openscilab/ipspot"
        ],
        "homepage": "",
        "readme_summary": "IPSpot is a Python library designed for retrieving a system's IP address and associated geolocation data. It supports both public and private IPv4 addresses, utilizing multiple API providers to ensure reliability. The tool offers a simple and modular approach to IP and geolocation lookups.",
        "key_features": [
            "Retrieves system's IP address",
            "Supports public and private IPv4 detection",
            "Uses multiple API providers with fallback mechanism",
            "Provides geolocation information"
        ],
        "primary_use_case": "Retrieving the current system's IP address and location information.",
        "open_issues": 9,
        "cover_image_prompt": "A detective with a magnifying glass, representing IPSpot, meticulously examines a globe, pinpointing locations as digital data streams flow around it. The globe glows with identified IP addresses, both public and private, displayed as subtle holographic overlays. The detective's desk is adorned with UI elements showing IP information and geolocation data. The scene is set in a dimly lit, high-tech office with a focused atmosphere. The image should be in a digital painting style with clear outlines and rich details."
    }
]