[
    {
        "id": 973688295,
        "name": "rustnet",
        "description": "A cross-platform network monitoring terminal UI tool built with Rust.",
        "url": "https://github.com/domcyrus/rustnet",
        "language": "Rust",
        "stars": 520,
        "forks": 10,
        "created_at": "2025-04-27T14:29:47Z",
        "updated_at": "2025-09-20T09:47:42Z",
        "topics": [],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-09-18T11:15:28Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2e5e7f53691c5b75eedead77ef4840047cb06aa4dd425cc67fe2014f1cc0c317/domcyrus/rustnet"
        ],
        "homepage": "",
        "readme_summary": "RustNet is a cross-platform network monitoring tool built in Rust that provides real-time visibility into network connections. It offers features like deep packet inspection, connection lifecycle management, and a terminal user interface for monitoring TCP, UDP, ICMP, ARP, and QUIC connections, along with process identification and service name resolution.",
        "key_features": [
            "Real-time Network Monitoring",
            "Connection States Display (TCP, QUIC, DNS, SSH)",
            "Deep Packet Inspection (HTTP, HTTPS/TLS, DNS, SSH, QUIC)",
            "Connection Lifecycle Management with configurable timeouts",
            "Process Identification (with experimental eBPF support)",
            "Service Name Resolution",
            "Cross-platform Support",
            "Advanced Filtering with keyword support",
            "Terminal User Interface (TUI)",
            "Multi-threaded Processing",
            "Optional Logging"
        ],
        "primary_use_case": "Real-time network monitoring and analysis with detailed connection information and protocol inspection.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled air traffic controller in a futuristic control tower, overseeing a complex network of glowing air routes representing network connections. The controller uses a holographic display to monitor data packets flowing through the routes, identifying potential bottlenecks and security threats. Small screens show real-time connection states and DPI data. The tower is bathed in soft, blue light, with subtle digital particles swirling around the connections. The repository name, 'RustNet,' is subtly displayed on the main screen. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 1050983239,
        "name": "paasword",
        "description": "This is not your Password Manager, it is your Password Master / 我们不是密码的生产者，我们只是密码的主理人",
        "url": "https://github.com/biliyoyo520/paasword",
        "language": "Python",
        "stars": 10,
        "forks": 1,
        "created_at": "2025-09-05T08:56:35Z",
        "updated_at": "2025-09-20T08:20:56Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-16T09:44:47Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1b859168da58583f3e523446466d589d5650ae2557c436fef334ced354f2a561/biliyoyo520/paasword"
        ],
        "homepage": "https://blog.yoyo250.fun/archives/coding/16.html",
        "readme_summary": "Password Master is a password generator that uses GPG private key signatures to derive high-strength passwords from user inputs. It supports time forgery, allowing users to generate passwords valid for specific timeframes, enhancing security and control.",
        "key_features": [
            "GPG private key signing for password derivation",
            "Unique password generation for each input",
            "Time forgery support for generating future or past passwords",
            "Terminal box rendering with CJK/ASCII alignment",
            "Plain text output option for scripting",
            "Time drift reporting for verification"
        ],
        "primary_use_case": "Generating secure, unique passwords based on user input and GPG key signatures, with optional time-based restrictions.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled clockmaker meticulously crafting unique keys inside a secure vault. The clockmaker uses a special GPG-branded hammer and chisel to shape each key based on the time displayed on a large clock. Some keys glow with a futuristic aura, representing passwords valid for future dates, while others have an antique look, representing past passwords. Small screens display GPG signature data and timestamp information. The vault is dimly lit with a focus on the clockmaker's workbench. The image should be in a detailed 3D isometric illustration style with a color scheme of gold, silver, and deep blue."
    },
    {
        "id": 875443471,
        "name": "NotelyVoice",
        "description": "A 100% private AI voice transcription app that converts speech to text in 50+ languages. Built with Compose Multiplatform for Android & iOS using Whisper AI - no cloud uploads, all processing happens on-device for complete privacy.",
        "url": "https://github.com/tosinonikute/NotelyVoice",
        "language": "C++",
        "stars": 375,
        "forks": 13,
        "created_at": "2024-10-20T01:52:39Z",
        "updated_at": "2025-09-20T09:40:19Z",
        "topics": [
            "android",
            "audio-player",
            "compose-ios",
            "compose-multiplatform",
            "compose-multiplatform-sample",
            "dagger-hilt",
            "ios",
            "ios-app",
            "jetpack-compose",
            "kotlin-coroutines",
            "kotlin-multiplatform",
            "kotlin-multiplatform-sample",
            "notes-app",
            "speech-recognition",
            "speech-to-text",
            "sqldelight",
            "swift",
            "whisper-ai",
            "whisper-api"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-09-18T10:56:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/296310c0aaa9f2e24e69d397f1c7d56d2d4971611bae1a6e86d430d8219f16a8/tosinonikute/NotelyVoice"
        ],
        "homepage": "https://tosinonikute.com/notelyvoice/",
        "readme_summary": "NotelyVoice is a cross-platform, private AI voice transcription and note-taking application built with Compose Multiplatform. It leverages Whisper AI for on-device speech-to-text conversion in 50+ languages, ensuring user privacy by avoiding cloud uploads. The app is available on Android and iOS.",
        "key_features": [
            "Rich Text Editing",
            "Simple Search",
            "Smart Filtering",
            "Organization with folders and tags",
            "Advanced Speech-to-Text",
            "Offline Capability",
            "Seamless Integration",
            "Audio Recording",
            "Unlimited Transcriptions",
            "Theming (dark and light)",
            "Cross-Platform support (Android & iOS)",
            "Share Audio Functionality",
            "Share Texts"
        ],
        "primary_use_case": "Voice transcription and note-taking for students, professionals, doctors, and researchers.",
        "open_issues": 12,
        "cover_image_prompt": "An old-fashioned scribe sitting at a desk, diligently transcribing spoken words emanating from a glowing, ethereal voice. The scribe's quill transforms the voice into neatly written notes on parchment. A subtle UI element showing a transcription interface hovers nearby. The scene is set in a cozy, dimly lit study with stacks of books and a warm, inviting atmosphere. Digital particles subtly flow from the voice to the quill, representing the AI processing. The composition is focused and clean, with a golden color scheme. The image should be in a detailed digital painting style with clear outlines."
    },
    {
        "id": 1054129020,
        "name": "repomix_wx",
        "description": "gui repomix (https://github.com/yamadashy/repomix)",
        "url": "https://github.com/UN-9BOT/repomix_wx",
        "language": "Python",
        "stars": 1,
        "forks": 0,
        "created_at": "2025-09-10T12:05:49Z",
        "updated_at": "2025-09-19T21:49:43Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-09-10T12:18:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0bc7ed13b09bc817f14d5606bf36e1d35053f2cad020554a9cc40a690cf2d663/UN-9BOT/repomix_wx"
        ],
        "homepage": "",
        "readme_summary": "The repository provides a GUI wrapper around the `repomix` CLI tool, enabling users to generate compact repository overviews for LLM prompts. It offers features like project directory selection, file exclusion, command preview, and output style selection, with options persisted in a state file.",
        "key_features": [
            "Choose project/repo directory",
            "Included files list (auto-excludes exact and glob patterns)",
            "Exclusions: exact file paths and glob ignore patterns",
            "Command preview with auto-wrap",
            "Run `repomix` in selected root",
            "Output style selector",
            "Common flags toggles",
            "Persist options/state",
            "Scrollable UI, compact options"
        ],
        "primary_use_case": "Generating compact repository overviews for use in LLM prompts.",
        "open_issues": 0,
        "cover_image_prompt": "An architect standing before a miniature city made of code files, using a special lens to condense the city into a single, easily digestible blueprint. The architect carefully selects which buildings (files) to include and exclude, while a small screen displays the `repomix` command being generated. Digital particles flow from the city to the blueprint, representing the summarized repository overview. The scene is set in a bright, modern studio with a focus on clarity and precision. The image should be in a 3D isometric illustration style with clean lines and a vibrant color scheme."
    },
    {
        "id": 976357404,
        "name": "akniga-scraper",
        "description": "A small akniga.org downloader written in golang.",
        "url": "https://github.com/nyakokitsu/akniga-scraper",
        "language": "Go",
        "stars": 2,
        "forks": 1,
        "created_at": "2025-05-02T01:02:54Z",
        "updated_at": "2025-09-19T20:12:12Z",
        "topics": [
            "akniga",
            "akniga-org",
            "downloader",
            "scraper"
        ],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2025-05-02T01:24:46Z",
        "media_urls": [
            "https://opengraph.githubassets.com/375d808dd981ef8e6fc028fa64a37cf1a40b3275a61e51b956ab89b17ee3071f/nyakokitsu/akniga-scraper"
        ],
        "homepage": "",
        "readme_summary": "The akniga-scraper is a Go-based tool designed to download content from akniga.org. It automates the process of obtaining necessary cookies and book IDs, decrypting the audio HLS link, and ultimately downloading the audio content.",
        "key_features": [
            "Downloads audio from akniga.org",
            "Automates cookie and book ID retrieval",
            "Decrypts HLS link using a key extracted from the website's JavaScript",
            "Uses ffmpeg for audio downloading"
        ],
        "primary_use_case": "Downloading audiobooks from akniga.org for offline listening.",
        "open_issues": 0,
        "cover_image_prompt": "A librarian meticulously retrieving a specific audiobook from a towering digital bookshelf labeled 'akniga.org'. The librarian uses a special key to unlock a hidden compartment within the book, revealing a flowing stream of audio notes. Small UI elements display the decryption process and the downloaded audio file. The scene is set in a futuristic library with soft, ambient lighting. The image should be in a flat design style with clear iconography and a limited color palette of blues and greens. The composition is clean and focused, emphasizing the librarian's actions and the flow of audio data."
    },
    {
        "id": 1055829527,
        "name": "h3xassist",
        "description": "Meeting assistant that records, transcribes, and summarizes online meetings with AI. Python backend, Next.js frontend, real-time dashboard.",
        "url": "https://github.com/ih3xcode/h3xassist",
        "language": "TypeScript",
        "stars": 6,
        "forks": 1,
        "created_at": "2025-09-12T21:54:55Z",
        "updated_at": "2025-09-20T06:27:44Z",
        "topics": [
            "ai-summarization",
            "automation",
            "browser-automation",
            "fastapi",
            "google-meet",
            "linux",
            "meeting-assistant",
            "meeting-recorder",
            "microsoft-teams",
            "nextjs",
            "outlook-integration",
            "playwright",
            "python",
            "real-time",
            "speaker-diarization",
            "speech-recognition",
            "transcription",
            "websocket",
            "whisperx"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-09-12T22:32:16Z",
        "media_urls": [
            "https://opengraph.githubassets.com/739e10b13e01f0bfed5519387db889a596f8d0587a2eff0d67f870f07d074037/ih3xcode/h3xassist"
        ],
        "homepage": "",
        "readme_summary": "H3xAssist is an automated meeting assistant that records, transcribes, and summarizes online meetings. It supports platforms like Microsoft Teams and Google Meet, offering features like real-time dashboards, AI-generated summaries, and speaker diarization. The system integrates with Outlook calendars and provides a responsive web interface for configuration and usage.",
        "key_features": [
            "Automatic Meeting Join",
            "Audio Recording",
            "Speech Recognition",
            "AI Summarization",
            "Calendar Integration",
            "Modern Web Interface",
            "Mobile Friendly",
            "Real-time Updates"
        ],
        "primary_use_case": "Automating the process of recording, transcribing, and summarizing online meetings.",
        "open_issues": 1,
        "cover_image_prompt": "A diligent librarian sits at a large desk, meticulously organizing stacks of audio reels into labeled folders. Each reel represents a recorded meeting, and the librarian uses a glowing magnifying glass to transcribe snippets onto digital tablets. A holographic display above the desk shows a summarized report of key discussion points. The scene is set in a modern, well-lit library with subtle UI elements floating around, displaying meeting titles and participant names. The repository name, 'H3xAssist,' is subtly etched onto the librarian's desk. The image should be in a 3D isometric illustration style with a clean, organized composition and a calming color scheme."
    }
]