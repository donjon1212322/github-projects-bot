[
    {
        "id": 1018534005,
        "name": "runtime",
        "description": null,
        "url": "https://github.com/runtime-org/runtime",
        "language": "TypeScript",
        "stars": 28,
        "forks": 2,
        "created_at": "2025-07-12T13:18:17Z",
        "updated_at": "2025-08-18T09:27:52Z",
        "topics": [],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-08-14T09:13:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/4ef0ade2bdccdab29fb93291f9e2943470cd5b082c2495110e2a601ad64dd3d1/runtime-org/runtime"
        ],
        "homepage": null,
        "readme_summary": "Runtime is a skills-based browser agent that interacts with Chromium-based browsers like Chrome and Edge. It utilizes predefined actions (skills) instead of direct DOM manipulation, resulting in faster and more reliable automation. This approach eliminates vendor lock-in and API dependencies, offering an efficient way to work with web applications.",
        "key_features": [
            "Skills-based approach to browser automation",
            "Interaction with Chromium-based browsers (Chrome, Edge)",
            "Faster performance compared to DOM manipulation methods",
            "No vendor lock-in or API dependencies",
            "Predefined actions (skills) for websites"
        ],
        "primary_use_case": "Automating interactions with web applications and office tools using a skills-based approach for faster and more reliable performance.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled artisan meticulously crafting a web browser from raw materials, shaping its interface with precision tools. The artisan uses a blueprint labeled 'Skills-Based Agent' and incorporates glowing components representing pre-defined skills like 'search,' 'add to cart,' and 'track delivery.' A holographic display shows the browser interacting with various websites seamlessly. The scene is set in a bright, futuristic workshop filled with digital schematics and UI elements. The composition is clean and focused, with a vibrant color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 152307081,
        "name": "PixiEditor",
        "description": "PixiEditor is a Universal Editor for all your 2D needs",
        "url": "https://github.com/PixiEditor/PixiEditor",
        "language": "C#",
        "stars": 4268,
        "forks": 174,
        "created_at": "2018-10-09T19:11:51Z",
        "updated_at": "2025-08-18T10:09:41Z",
        "topics": [
            "2d",
            "avaloniaui",
            "csharp",
            "dotnet-core",
            "dotnetcore",
            "editor",
            "game-development",
            "graphics",
            "graphics-editor",
            "linux-desktop",
            "painting",
            "pixel-art",
            "pixi",
            "procedural-drawing",
            "procedural-generation",
            "raster-graphics",
            "sprites",
            "tabs",
            "vector-graphics"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-08-18T09:34:01Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/152307081/66c3bc0b-ba35-4ae8-beb6-d50d054262a9"
        ],
        "homepage": "https://pixieditor.net",
        "readme_summary": "PixiEditor is a versatile 2D graphics editor designed for a wide range of applications, including pixel art, painting, vector graphics, and animation. It features a node-based render system that allows for extensive customization and supports various export formats. The editor aims to provide an intuitive and familiar interface for all 2D editing needs.",
        "key_features": [
            "Pixel art toolset",
            "Painting toolset",
            "Vector graphics toolset",
            "Animation capabilities with timeline",
            "Node-based render system for customization",
            "Support for multiple export formats (png, jpg, svg, gif, mp4)"
        ],
        "primary_use_case": "Universal 2D graphics editing for sprites, animations, image editing, and logo creation.",
        "open_issues": 151,
        "cover_image_prompt": "A skilled artisan in a bright workshop meticulously crafting a digital mosaic, using tools to shape individual pixels into a cohesive and vibrant image. The artisan's workbench displays a variety of pixel art tools and vector shapes, seamlessly integrated on a single canvas. Exported images in various formats like PNG, JPG, SVG, and GIF float around the workspace, showcasing the editor's versatility. A timeline interface subtly glows in the background, hinting at animation capabilities. The scene is bathed in soft, diffused light, creating a welcoming and creative atmosphere. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 998067126,
        "name": "wicketkeeper",
        "description": "A privacy-friendly, self-hostable Proof-of-Work (PoW) CAPTCHA",
        "url": "https://github.com/a-ve/wicketkeeper",
        "language": "Go",
        "stars": 120,
        "forks": 4,
        "created_at": "2025-06-07T19:47:25Z",
        "updated_at": "2025-08-18T09:20:51Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-19T13:07:09Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/998067126/1478c100-fca4-4387-961a-f3458bb3fad2"
        ],
        "homepage": "https://wicketkeeper.io",
        "readme_summary": "Wicketkeeper is a privacy-focused CAPTCHA system that uses Proof-of-Work to protect web forms from bots. It replaces traditional visual puzzles with a computational challenge, making it easier for users while remaining costly for bots. The system includes a Go backend, a JavaScript client widget, and a full-stack demo application, offering a configurable and containerized solution for bot prevention.",
        "key_features": [
            "Proof-of-Work Engine",
            "Stateless & Secure",
            "Replay Attack Prevention",
            "Embeddable Client Widget",
            "Configurable",
            "Containerized",
            "Full-Stack Demo"
        ],
        "primary_use_case": "Protecting web forms from bots using a privacy-friendly, self-hostable Proof-of-Work (PoW) CAPTCHA.",
        "open_issues": 0,
        "cover_image_prompt": "A diligent gatekeeper, clad in futuristic armor, stands before a digital portal, carefully inspecting incoming data streams represented as glowing orbs. The gatekeeper uses a specialized tool that emits a soft, blue light to perform a proof-of-work challenge on each orb, verifying its authenticity. Approved orbs pass through the portal, leaving a trail of shimmering particles, while suspicious orbs are redirected. Small UI elements displaying security metrics and challenge results float subtly in the background. The scene is set in a clean, minimalist environment with a focus on clarity and security. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 990474618,
        "name": "rustoku",
        "description": "Lightning-fast Sudoku ðŸ¦€",
        "url": "https://github.com/huangsam/rustoku",
        "language": "Rust",
        "stars": 29,
        "forks": 3,
        "created_at": "2025-05-26T07:07:24Z",
        "updated_at": "2025-08-18T06:56:28Z",
        "topics": [
            "bitflags",
            "cargo",
            "clap",
            "crates-io",
            "criterion",
            "learn-to-code",
            "puzzle",
            "rust",
            "rust-rand",
            "sudoku",
            "thiserror"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-21T08:47:28Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b1e24c54f22f1b9bb58b9b084c736e2be4331b04da5a102ccbde31971b9d6d00/huangsam/rustoku"
        ],
        "homepage": "https://crates.io/crates/rustoku-cli",
        "readme_summary": "Rustoku is a Rust library and CLI tool for solving and generating Sudoku puzzles. It focuses on speed, clarity, and human-like solving techniques, offering features like step-by-step solve paths and configurable puzzle generation with guaranteed unique solutions.",
        "key_features": [
            "Fast Sudoku solving with clear solve paths",
            "Unique and configurable puzzle generation",
            "Human-like puzzle solving techniques"
        ],
        "primary_use_case": "Solving and generating Sudoku puzzles",
        "open_issues": 0,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling a giant Sudoku grid from glowing gears and springs. Each gear represents a number, and the springs symbolize the constraints of the puzzle. The clockmaker uses a magnifying glass to examine the grid, ensuring perfect alignment and a single, solvable solution. A small screen displays the Rustoku logo and real-time solving statistics. The workshop is filled with intricate tools and blueprints, illuminated by a warm, focused light. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 986669929,
        "name": "cpdown",
        "description": "ðŸ“¥ cpdown - Copy to clipboard any webpage content/youtube subtitle as clean markdown with one click or shortcut",
        "url": "https://github.com/ysm-dev/cpdown",
        "language": "TypeScript",
        "stars": 397,
        "forks": 18,
        "created_at": "2025-05-20T00:45:12Z",
        "updated_at": "2025-08-18T09:26:25Z",
        "topics": [
            "extension",
            "llm",
            "markdown",
            "productivity",
            "react",
            "subtitle",
            "wxt",
            "youtube"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-08-18T01:42:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f9c1ed5f909583054d24bd296e052d2c55d71c93d2d7f8da1342f982ea14d094/ysm-dev/cpdown"
        ],
        "homepage": "https://chromewebstore.google.com/detail/cpdown/knnaflplggjdedobhbidojmmnocfbopf",
        "readme_summary": "cpdown is a browser extension that allows users to copy webpage content and YouTube subtitles as clean, formatted markdown. It utilizes Defuddle or Mozilla Readability to extract the main content, removes unnecessary HTML elements, and provides features like token counting and keyboard shortcut support. The extension is designed to improve productivity by simplifying the process of converting web content into a usable markdown format.",
        "key_features": [
            "Copy webpage content as clean markdown",
            "Copy YouTube subtitles as clean markdown",
            "Extract main content using Defuddle or Mozilla Readability",
            "Remove unnecessary HTML elements",
            "Show token count for LLM usage",
            "Keyboard shortcut support"
        ],
        "primary_use_case": "Copying webpage content and YouTube subtitles as clean markdown for various purposes, including note-taking, content creation, and LLM input.",
        "open_issues": 3,
        "cover_image_prompt": "A diligent librarian meticulously transforming messy stacks of papers into neatly organized markdown documents on a digital screen. The librarian uses a special tool that extracts the core content, removing unnecessary clutter, and presents it in a clean, readable format. The screen displays a split view, showing the original webpage on one side and the formatted markdown on the other. Subtle UI elements and code snippets float around the scene, connecting the metaphor to software. The setting is a bright, modern library with warm lighting. The image should be in a flat design style with clear iconography and a pastel color scheme."
    }
]