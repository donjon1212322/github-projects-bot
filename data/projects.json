[
    {
        "id": 300549409,
        "name": "goshs",
        "description": "A SimpleHTTPServer written in Go, enhanced with features and with a nice design - https://goshs.de",
        "url": "https://github.com/patrickhener/goshs",
        "language": "Go",
        "stars": 423,
        "forks": 28,
        "created_at": "2020-10-02T08:24:17Z",
        "updated_at": "2025-04-03T09:52:37Z",
        "topics": [
            "file-sharing",
            "file-upload",
            "go",
            "golang",
            "http",
            "http-server",
            "https-server",
            "javascript",
            "server",
            "simplehttpserver",
            "webdav-server",
            "webserver"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-03-31T13:29:17Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/300549409/d75bac15-6aea-482c-b7fb-353acda1f1dd"
        ],
        "homepage": "",
        "readme_summary": "Goshs is a Go-based HTTP server designed as a more feature-rich alternative to Python's SimpleHTTPServer. It supports secure file sharing with HTTPS, authentication, WebDAV, and fine-grained access control through ACLs. It offers various modes of operation, including read-only and upload-only, and can be customized with themes and command-line options.",
        "key_features": [
            "Download and upload files via HTTP/S",
            "Basic and certificate-based authentication",
            "WebDAV support",
            "Read-Only and Upload-Only modes",
            "File-based ACLs",
            "Command-line interface",
            "Themes (Dark/Light)"
        ],
        "primary_use_case": "Serving files over HTTP/S with enhanced features like authentication, WebDAV support, and ACLs, acting as a replacement for Python's SimpleHTTPServer.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a friendly server robot, dressed as a concierge, standing in front of a grand digital hotel. The robot is handing out neatly packaged files (downloads) to some guests and receiving files (uploads) from others, all with a welcoming smile. Some guests are showing digital certificates for secure access. A small display on the robot's chest shows a simple file directory. The hotel has both light and dark themed windows. The scene is bright and inviting, set in a clean, modern digital space. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 953415105,
        "name": "neo146",
        "description": "connect like it's 1984 - neo146 provides a minimal (and experimental!) information gateway that serves as an emergency network connection method inspired by dial-up, allowing you to access content via certain protocols like SMS.",
        "url": "https://github.com/ooguz/neo146",
        "language": "Go",
        "stars": 31,
        "forks": 1,
        "created_at": "2025-03-23T10:10:26Z",
        "updated_at": "2025-04-03T08:43:39Z",
        "topics": [
            "dial-up",
            "emergency-communications",
            "gateway",
            "gateway-services",
            "information-gateway",
            "low-bandwidth",
            "sms-gateway",
            "sms-service"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-04-01T20:07:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a380b963cf492514609f38d9ad8deac94f5fddd20c256af78fd2b4e3f8bf3580/ooguz/neo146"
        ],
        "homepage": "https://neo146.net",
        "readme_summary": "neo146 is a minimal information gateway providing emergency network access via SMS. It offers functionalities like converting web pages to Markdown, retrieving Twitter feeds, searching the web, accessing Wikipedia summaries, and providing weather forecasts, all accessible through SMS commands and HTTP endpoints. The project aims to provide a low-bandwidth communication channel inspired by dial-up services.",
        "key_features": [
            "HTTP-SMS gateway",
            "HTTP-Markdown gateway",
            "URL to Markdown conversion",
            "Twitter user timeline retrieval",
            "Web search using DuckDuckGo",
            "Wikipedia article summary",
            "Weather forecast"
        ],
        "primary_use_case": "Emergency network connection via SMS for accessing information during internet outages or censorship.",
        "open_issues": 0,
        "cover_image_prompt": "An old-fashioned telephone operator sitting at a switchboard, connecting a frantic caller to a vital piece of information displayed on a small screen. The operator wears a headset and manually plugs cables into the board, routing the caller's request through a network of SMS messages represented by glowing lines. The screen shows a simplified weather forecast and a news headline. The switchboard is subtly labeled \"neo146\". The scene is set in a dimly lit, vintage telephone exchange with a sense of urgency. The image should be in a digital painting style with clear outlines and a retro color scheme."
    },
    {
        "id": 191318242,
        "name": "googlemaps-scraper",
        "description": "Google Maps reviews scraping",
        "url": "https://github.com/gaspa93/googlemaps-scraper",
        "language": "Python",
        "stars": 425,
        "forks": 151,
        "created_at": "2019-06-11T07:32:50Z",
        "updated_at": "2025-04-03T09:30:21Z",
        "topics": [
            "google-maps",
            "google-maps-scraping",
            "python",
            "reviews",
            "scraper"
        ],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2024-04-26T22:41:12Z",
        "media_urls": [
            "https://opengraph.githubassets.com/70b6e7efdcc7a303dafd61168a1d184348f51db87fd8c7558b4dffbdcf264768/gaspa93/googlemaps-scraper"
        ],
        "homepage": "",
        "readme_summary": "The googlemaps-scraper repository provides tools to scrape reviews from Google Maps places. It allows users to extract a defined number of the most recent reviews or incrementally monitor reviews by storing them in MongoDB. The scraper supports sorting reviews and scraping POI metadata.",
        "key_features": [
            "Scrapes Google Maps reviews from specified URLs.",
            "Allows retrieval of a specified number of reviews.",
            "Offers incremental scraping and storage of reviews in MongoDB.",
            "Provides options to scrape POI metadata and sort reviews by relevance, date, or rating."
        ],
        "primary_use_case": "Extracting and monitoring Google Maps reviews for specific points of interest.",
        "open_issues": 10,
        "cover_image_prompt": "A cartographer meticulously charting a vast, sprawling city map using a magnifying glass that extracts individual reviews from buildings and landmarks. The cartographer carefully pins each review onto the map, creating a dynamic, evolving representation of the city's sentiment. Small UI elements displaying Google Maps reviews are subtly integrated into the map's design. The scene is set in a sunlit workshop filled with maps and tools, with a warm, inviting atmosphere. The image should be in a detailed 3D isometric illustration style with vibrant colors and clear labels."
    },
    {
        "id": 606695903,
        "name": "DataSurgeon",
        "description": " Quickly Extracts IP's, Email Addresses, Hashes, Files, Credit Cards, Social Security Numbers and a lot More From Text",
        "url": "https://github.com/Drew-Alleman/DataSurgeon",
        "language": "Rust",
        "stars": 799,
        "forks": 63,
        "created_at": "2023-02-26T09:32:09Z",
        "updated_at": "2025-04-03T09:21:12Z",
        "topics": [
            "bug-bounty",
            "ctf-tools",
            "cybersecurity",
            "email",
            "file-search",
            "hacking",
            "incident-response",
            "infosec",
            "ip-address",
            "osint",
            "pentesting",
            "recon",
            "reconnaissance",
            "regex",
            "rust",
            "rust-lang",
            "search",
            "search-tools",
            "security-tools",
            "windows"
        ],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2024-02-28T17:43:25Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/606695903/b3f3c1e9-0ca9-42d2-9283-86c5e454a2f2"
        ],
        "homepage": "",
        "readme_summary": "DataSurgeon is a versatile tool written in Rust designed for extracting sensitive information like emails, IPs, credit card numbers, and more from various file types and text. It supports multiple operating systems, offers plugin support for extending functionality, and can output data in CSV format. The tool is primarily used for incident response, data loss prevention, penetration testing, and CTF challenges.",
        "key_features": [
            "Supports Windows, Linux, and MacOS",
            "Recursive file analysis within directories",
            "Plugin Support",
            "CSV Output",
            "Extraction of emails, phone numbers, social security numbers, credit cards, Bitcoin wallets, URLs, IPv4/IPv6 addresses, MAC addresses, SRV DNS Records, Google API Private Key IDs, AWS Keys, CVE Numbers, Files, Windows Registries, and various hashes"
        ],
        "primary_use_case": "Incident response, DLP, penetration testing, and CTF challenges by extracting sensitive information from text and files.",
        "open_issues": 4,
        "cover_image_prompt": "A skilled surgeon meticulously extracting sensitive data (emails, IPs, credit card numbers) from a chaotic pile of documents and digital files. The surgeon uses specialized tools that glow with digital energy, highlighting the extracted information. Extracted data flows into clearly labeled containers, representing organized and secure information. The scene is set in a clean, futuristic operating room with subtle UI elements displaying real-time data analysis. The DataSurgeon logo is subtly displayed on a monitor in the background. The image should be in a 3D isometric illustration style with bright, contrasting colors and sharp details."
    },
    {
        "id": 914092741,
        "name": "ClatScope",
        "description": "ClatScope Info Tool – The best and most versatile OSINT utility for retrieving geolocation, DNS, WHOIS, phone, email, data breach information and much more (60 features). Perfect for investigators, pentesters, or anyone looking for an effective reconnaissance / OSINT tool. CLI version is always released before the GUI version.",
        "url": "https://github.com/Clats97/ClatScope",
        "language": "Python",
        "stars": 925,
        "forks": 135,
        "created_at": "2025-01-08T23:54:32Z",
        "updated_at": "2025-04-03T07:04:21Z",
        "topics": [
            "intelligence",
            "investigation",
            "osint",
            "osint-python",
            "osint-reconnaissance",
            "osint-resources",
            "osint-tool",
            "trending",
            "trending-repositories"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-03-28T21:52:30Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8ce34a8ed83850ee5bfaa408c44c44717d8ee09963a03a95c04fdc145408d3f4/Clats97/ClatScope"
        ],
        "homepage": "",
        "readme_summary": "ClatScope Info Tool is a Python-based OSINT utility designed for gathering and analyzing information from various online resources. It provides a range of features, including IP geolocation, DNS lookups, email analysis, phone number parsing, and data breach checks, making it suitable for investigators and pentesters needing reconnaissance capabilities.",
        "key_features": [
            "IP Information (Geolocation, ISP)",
            "Deep Account & Username Search",
            "Phone Number Parsing",
            "DNS & Reverse DNS Lookup",
            "Email Lookup & Header Analysis",
            "Email Breach Search",
            "Person Search",
            "WHOIS Lookup",
            "Password Strength Check",
            "Reverse Phone Search",
            "Robots.txt / Sitemap.xml Check",
            "SSL Certificate Search"
        ],
        "primary_use_case": "OSINT (Open-Source Intelligence) data gathering and analysis for investigators and pentesters.",
        "open_issues": 0,
        "cover_image_prompt": "A detective in a high-tech office, surrounded by glowing screens displaying maps, phone records, and email threads, meticulously piecing together clues to solve a complex case. The detective uses a magnifying glass that transforms into a digital interface, revealing hidden connections and data breaches within the information streams. Small code snippets and data visualizations float around the scene, subtly connecting the investigation to software. The office is dimly lit with a blue and purple color scheme, creating a sense of mystery and intrigue. The image should be in a digital painting style with clean lines and clear details, emphasizing the detective's focus and the intricate web of information."
    },
    {
        "id": 872988980,
        "name": "Z",
        "description": "Z Anti-Anti-Debugger for Linux",
        "url": "https://github.com/JavaHammes/Z",
        "language": "C",
        "stars": 31,
        "forks": 4,
        "created_at": "2024-10-15T12:21:50Z",
        "updated_at": "2025-04-03T06:34:14Z",
        "topics": [],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-02-18T20:57:15Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f14a740d18d144d93e8a1aa36758d0e8ec6f51b2b81e572fe323cb6966acea1f/JavaHammes/Z"
        ],
        "homepage": "",
        "readme_summary": "Z Anti-Anti-Debugger is a Linux debugger designed to bypass anti-debugging mechanisms. It provides precise control over program execution and supports custom LD_PRELOAD libraries. The debugger offers a range of commands for execution control, breakpoint management, and general debugging tasks.",
        "key_features": [
            "Bypasses anti-debugging mechanisms",
            "Provides explicit control over program execution",
            "Supports custom LD_PRELOAD libraries with marker function",
            "Offers general and execution control commands",
            "Includes breakpoint management (software and hardware)"
        ],
        "primary_use_case": "Debugging Linux applications that employ anti-debugging techniques.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled locksmith meticulously crafting an intricate lock, representing an application, while a mischievous gremlin, symbolizing anti-debugging measures, tries to tamper with it. The locksmith uses specialized tools, glowing with digital energy, to reinforce the lock against the gremlin's interference. Small screens display snippets of code and memory addresses, subtly connecting the scene to software debugging. The setting is a futuristic workshop bathed in focused, warm lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 659537006,
        "name": "GeoPincer",
        "description": "OpenStreetMap Overpass Script to find locations with a given set of nodes",
        "url": "https://github.com/tloja/GeoPincer",
        "language": "Python",
        "stars": 60,
        "forks": 3,
        "created_at": "2023-06-28T03:45:20Z",
        "updated_at": "2025-04-02T20:28:21Z",
        "topics": [],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2023-07-10T01:40:46Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b825336c5711a1f7054efb22bc00e0002bf29cd440c161c0e06b4e585231b483/tloja/GeoPincer"
        ],
        "homepage": null,
        "readme_summary": "GeoPincer is a Python script that utilizes the OpenStreetMap Overpass API to identify locations based on their proximity to a given set of nodes, such as establishments or notable places. It allows users to specify a search area and a distance range to refine the search, returning the results as Google Maps URLs.",
        "key_features": [
            "Leverages OpenStreetMap's Overpass API",
            "Searches for locations based on a set of nodes (establishments)",
            "Allows specifying a base area to search within",
            "Uses a default range of 500 meters between nodes, adjustable with the `--distance` argument",
            "Supports querying U.S. regions using predefined dictionaries",
            "Returns matching locations as Google Maps URLs"
        ],
        "primary_use_case": "Finding locations based on proximity to a set of known establishments or points of interest using OpenStreetMap data.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a cartographer using a pair of oversized, glowing compass calipers to pinpoint a hidden oasis in a vast desert landscape. The calipers' points are labeled \"Office Depot\" and \"Sam's Club,\" and they are drawing a circle on a map of \"Texas.\" At the center of the circle, a shimmering Google Maps pin rises from the sand, marking the discovered location. Subtle digital overlays show snippets of OpenStreetMap data and Overpass API code. The scene is bathed in the warm light of the setting sun, creating a sense of discovery and precision. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 808015120,
        "name": "PromptWizard",
        "description": "Task-Aware Agent-driven Prompt Optimization Framework",
        "url": "https://github.com/microsoft/PromptWizard",
        "language": "Python",
        "stars": 3098,
        "forks": 258,
        "created_at": "2024-05-30T08:05:17Z",
        "updated_at": "2025-04-03T09:46:26Z",
        "topics": [],
        "quality_score": 0.7000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-01-10T05:43:22Z",
        "media_urls": [
            "https://opengraph.githubassets.com/82bf99e42030b87fd693367f2b93634956f16bd0dfb3a80950bf5c345af02e15/microsoft/PromptWizard"
        ],
        "homepage": null,
        "readme_summary": "PromptWizard is a framework for optimizing prompts using a self-evolving mechanism where the LLM generates, critiques, and refines its own prompts and examples. It leverages feedback-driven refinement, diverse example generation, and self-generated Chain of Thought to improve task performance. The framework supports optimizing prompts with and without examples or training data.",
        "key_features": [
            "Feedback-driven refinement of prompts and examples by LLMs",
            "Generation of diverse and robust synthetic examples",
            "Self-generated Chain of Thought (CoT) steps with positive, negative, and synthetic examples"
        ],
        "primary_use_case": "Task-aware agent-driven prompt optimization for Large Language Models (LLMs).",
        "open_issues": 6,
        "cover_image_prompt": "A prompt optimization wizard, surrounded by glowing orbs representing prompts, stands before a large, evolving crystal ball. The crystal ball displays a clear, optimized prompt emerging from a chaotic swirl of initial drafts. The wizard uses a magical quill to refine the prompts based on feedback from spectral entities representing different tasks. Small screens around the scene show metrics and iterative improvements. The scene is set in a futuristic laboratory with soft, ethereal lighting. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]