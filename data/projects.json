[
    {
        "id": 1018267033,
        "name": "alman",
        "description": "Smart alias manager with TUI for shell aliases and command-line efficiency ðŸš€",
        "url": "https://github.com/vaibhav-mattoo/alman",
        "language": "Rust",
        "stars": 56,
        "forks": 2,
        "created_at": "2025-07-11T23:04:06Z",
        "updated_at": "2025-07-28T10:01:51Z",
        "topics": [
            "alias-management",
            "aliases-setup",
            "bash",
            "cli",
            "command-history",
            "command-line",
            "fish",
            "linux",
            "macos",
            "open-source",
            "productivity",
            "rust",
            "shell-aliases",
            "shell-scripting",
            "terminal",
            "tui",
            "workflow",
            "wsl",
            "zsh"
        ],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-14T16:34:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e47242b19922ae996d6a0d34257ab4dec879f15f87b8e6117d95ddf006de8da7/vaibhav-mattoo/alman"
        ],
        "homepage": "https://github.com/vaibhav-mattoo/alman",
        "readme_summary": "Alman is a command-line tool and TUI that helps users manage shell aliases. It provides intelligent suggestions based on command history and allows users to organize aliases across multiple files and shells, streamlining their command-line workflow.",
        "key_features": [
            "Intelligent alias suggestions based on command history",
            "TUI for managing aliases",
            "Cross-shell support (Bash, Zsh, Fish)",
            "Alias organization across multiple files"
        ],
        "primary_use_case": "Managing and creating shell aliases to improve command-line efficiency.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled librarian meticulously organizing a vast collection of scrolls, each representing a shell command. The librarian uses a magical lens to identify common patterns and create elegant shortcuts, represented by glowing runes that attach to the scrolls. A holographic display shows a simplified command line interface with frequently used aliases. The scene is set in a bright, airy library with a futuristic design. The image should be in a 3D isometric illustration style with clean lines and a vibrant color scheme, emphasizing clarity and organization."
    },
    {
        "id": 847016830,
        "name": "virshle",
        "description": "Virtual machines from the command line and TOML files.",
        "url": "https://github.com/pipelight/virshle",
        "language": "Rust",
        "stars": 43,
        "forks": 1,
        "created_at": "2024-08-24T15:58:59Z",
        "updated_at": "2025-07-28T09:09:03Z",
        "topics": [
            "cloud-hypervisor",
            "virtual-machine",
            "virtualization"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-27T18:05:44Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e6d9321ab3461a2fc2c1b61735b7e7cbd27c1a6cda4a3ba39c1ae560013de749/pipelight/virshle"
        ],
        "homepage": "",
        "readme_summary": "Virshle is a command-line utility for managing virtual machines. It leverages cloud-hypervisor and linux-kvm for virtualization and openvswitch for network configuration. Virshle allows users to define VM templates using TOML files, simplifying the creation and management of virtual machines on local or clustered nodes.",
        "key_features": [
            "Virtual machine management via command line",
            "Configuration using TOML files",
            "Support for cloud-hypervisor and linux-kvm",
            "Network configuration using openvswitch",
            "VM template definitions",
            "Local node setup and management",
            "Multiple node configuration (cluster)"
        ],
        "primary_use_case": "Managing multiple virtual machines from the command line using TOML configuration files.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled conductor orchestrating a symphony of virtual machines, each represented by a unique instrument. The conductor stands before a digital score, adjusting parameters that control the VMs' performance. The instruments play in harmony, creating a seamless virtual environment. Subtle UI elements float around the scene, displaying configuration settings and resource allocation. The repository name, 'Virshle,' is subtly embedded in the conductor's stand. The scene is set in a futuristic concert hall with dynamic lighting. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 1003770515,
        "name": "ytsurf",
        "description": "simple shell script that allows you to search for YouTube videos from your terminal",
        "url": "https://github.com/Stan-breaks/ytsurf",
        "language": "Shell",
        "stars": 56,
        "forks": 3,
        "created_at": "2025-06-17T16:33:01Z",
        "updated_at": "2025-07-28T09:08:53Z",
        "topics": [],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-07-27T20:21:09Z",
        "media_urls": [
            "https://opengraph.githubassets.com/dbc87ef9eb1985916fda56c7e58a1400e6b4b6949b2efb555a2709f5063bea60/Stan-breaks/ytsurf"
        ],
        "homepage": "",
        "readme_summary": "ytsurf is a shell script that allows users to search for YouTube videos directly from their terminal. It provides features like interactive selection using `fzf` or `rofi`, video downloading, format selection, and configuration options, making it a convenient tool for command-line YouTube access.",
        "key_features": [
            "Search YouTube from the terminal",
            "Interactive selection with fzf or rofi",
            "Download videos or audio",
            "Select video format/quality",
            "External config file for default options",
            "Result caching",
            "Playback history",
            "Audio-only mode",
            "Channel search",
            "Limit search results"
        ],
        "primary_use_case": "Searching and playing YouTube videos from the command line.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a street performer in a bustling city square, holding a smartphone. He types a song request into a shell terminal projected onto the square's fountain. The fountain erupts with a vibrant display of water jets synchronized to the requested music video, which plays on the water screen. Passersby stop to watch, captivated by the impromptu performance. Subtle UI elements float around the fountain, displaying search results and video quality options. The repository name, 'ytsurf,' is subtly etched into the fountain's base. The scene is in a vibrant, digital painting style with dynamic lighting and a focus on clear, intuitive visual elements."
    },
    {
        "id": 15019962,
        "name": "tldr",
        "description": "ðŸ“š Collaborative cheatsheets for console commands",
        "url": "https://github.com/tldr-pages/tldr",
        "language": "Markdown",
        "stars": 56998,
        "forks": 4592,
        "created_at": "2013-12-08T07:34:43Z",
        "updated_at": "2025-07-28T10:10:23Z",
        "topics": [
            "android",
            "bsd",
            "cheatsheet",
            "cheatsheets",
            "command-line",
            "console",
            "documentation",
            "examples",
            "hacktoberfest",
            "help",
            "linux",
            "macos",
            "man-page",
            "manpages",
            "manual",
            "osx",
            "shell",
            "terminal",
            "tldr",
            "windows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-28T06:37:05Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/15019962/aa6a8d00-b4a3-11ea-92f4-5cca1da75be2"
        ],
        "homepage": "https://tldr.sh",
        "readme_summary": "The tldr-pages repository offers a collection of community-maintained, simplified help pages for command-line tools, serving as a more approachable alternative to traditional man pages. It provides practical examples for various commands across different operating systems and can be accessed through multiple clients or a web interface, making it easier for users to quickly understand and utilize command-line tools.",
        "key_features": [
            "Community-maintained help pages for command-line tools",
            "Simpler and more approachable alternative to traditional man pages",
            "Collection of practical examples for common command-line tools across various operating systems (UNIX, Linux, macOS, Windows, etc.)",
            "Multiple client options for accessing the pages (Python, Rust, Node.js)",
            "Web client available for browsing without installation"
        ],
        "primary_use_case": "Providing concise and practical examples for command-line tools to help users quickly understand and use them.",
        "open_issues": 181,
        "cover_image_prompt": "A librarian meticulously organizing a vast collection of scrolls, each representing a command-line tool. The librarian uses a special magnifying glass to distill complex manuals into concise, easily digestible summaries, which then glow with clarity. These summaries are then neatly filed into labeled drawers for quick access. Subtle UI elements float around the librarian, displaying simplified command examples. The scene is set in a bright, organized library with a warm, inviting atmosphere. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 357897199,
        "name": "netbird",
        "description": "Connect your devices into a secure WireGuardÂ®-based overlay network with SSO, MFA and granular access controls.",
        "url": "https://github.com/netbirdio/netbird",
        "language": "Go",
        "stars": 17408,
        "forks": 808,
        "created_at": "2021-04-14T12:27:20Z",
        "updated_at": "2025-07-28T09:43:29Z",
        "topics": [
            "golang",
            "mesh",
            "mesh-networks",
            "nat-traversal",
            "netbird",
            "vpn",
            "wireguard",
            "wireguard-vpn",
            "wiretrustee",
            "zero-trust-network-access"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-25T20:52:48Z",
        "media_urls": [
            "https://opengraph.githubassets.com/292116e559ddfe6cf521ad6475b240206b9c51b3dfd782433183cf9eb1d80f0c/netbirdio/netbird"
        ],
        "homepage": "https://netbird.io",
        "readme_summary": "NetBird is a platform that simplifies the creation of secure private networks by combining a WireGuard-based overlay network with a centralized access control system. It offers features like peer-to-peer connections, SSO & MFA support, and a user-friendly web UI. NetBird aims to eliminate the complexities of traditional VPN setups, making secure remote access and network management more accessible.",
        "key_features": [
            "WireGuard-based overlay network",
            "Centralized access control system",
            "Peer-to-peer connections",
            "SSO & MFA support",
            "Admin Web UI",
            "Public API",
            "Terraform provider",
            "Linux, Mac, and Windows support"
        ],
        "primary_use_case": "Creating secure, configuration-free private networks for organizations or home use.",
        "open_issues": 826,
        "cover_image_prompt": "Imagine a skilled air traffic controller managing a complex network of glowing drones, each representing a device, seamlessly flying through a secure, interconnected airspace. The controller, positioned at a central console displaying a simplified map of the network, effortlessly assigns routes and access permissions with intuitive gestures. Some drones carry encrypted data packets, visually represented as glowing cubes, safely traversing the network. The backdrop features subtle UI elements and the NetBird logo subtly integrated into the console. The scene is bathed in a soft, futuristic glow, emphasizing security and ease of use. This should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 812975380,
        "name": "agent-zero",
        "description": "Agent Zero AI framework",
        "url": "https://github.com/agent0ai/agent-zero",
        "language": "Python",
        "stars": 11297,
        "forks": 2189,
        "created_at": "2024-06-10T09:10:45Z",
        "updated_at": "2025-07-28T09:09:08Z",
        "topics": [
            "agent",
            "ai",
            "assistant",
            "autonomous",
            "linux",
            "zero"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-21T11:44:39Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/812975380/186b70cc-fae4-4cd9-ae08-7dbe09b6b649"
        ],
        "homepage": "https://agent-zero.ai",
        "readme_summary": "Agent Zero is an AI framework for building dynamic, general-purpose personal assistants. It leverages the operating system as a tool, enabling the agent to write code and use the terminal to create custom tools. The framework also supports multi-agent cooperation, where agents can delegate tasks to subordinate agents.",
        "key_features": [
            "General-purpose Assistant",
            "Computer as a Tool",
            "Multi-agent Cooperation"
        ],
        "primary_use_case": "Creating a personal, adaptable AI assistant that uses the computer's operating system as a tool to accomplish tasks.",
        "open_issues": 95,
        "cover_image_prompt": "A skilled architect overseeing a construction site where digital blueprints are being used to build a futuristic city. The architect is reviewing plans on a holographic display, while robotic arms construct buildings based on the digital designs. Data streams flow between the blueprints and the construction site, ensuring seamless integration. The city is powered by glowing nodes representing AI agents working together. Small UI elements show code snippets and agent communication logs. The scene is set in a bright, optimistic future with a blue and green color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 829640443,
        "name": "tensorzero",
        "description": "TensorZero is an open-source stack for industrial-grade LLM applications. It unifies an LLM gateway, observability, optimization, evaluation, and experimentation.",
        "url": "https://github.com/tensorzero/tensorzero",
        "language": "Rust",
        "stars": 9058,
        "forks": 579,
        "created_at": "2024-07-16T21:00:53Z",
        "updated_at": "2025-07-28T09:59:08Z",
        "topics": [
            "ai",
            "ai-engineering",
            "anthropic",
            "artificial-intelligence",
            "deep-learning",
            "genai",
            "generative-ai",
            "gpt",
            "large-language-models",
            "llama",
            "llm",
            "llmops",
            "llms",
            "machine-learning",
            "ml",
            "ml-engineering",
            "mlops",
            "openai",
            "python",
            "rust"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-07-26T22:09:59Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/829640443/26b7c5c4-c12c-4e89-beaf-a4233f1dac87"
        ],
        "homepage": "https://tensorzero.com",
        "readme_summary": "TensorZero is an open-source stack designed for building and managing industrial-grade LLM applications. It unifies key components like an LLM gateway, observability tools, optimization strategies, evaluation frameworks, and experimentation features. It allows users to access LLMs through a unified API, optimize performance, and implement robust testing and deployment strategies.",
        "key_features": [
            "LLM Gateway with low latency",
            "Observability for inferences and feedback",
            "Optimization of prompts, models, and inference strategies",
            "Evaluation of inferences and workflows",
            "Experimentation with A/B testing and routing"
        ],
        "primary_use_case": "Building and managing industrial-grade LLM applications",
        "open_issues": 237,
        "cover_image_prompt": "A skilled architect overseeing the construction of a grand, futuristic city where each building represents a different LLM application component (Gateway, Observability, Optimization, Evaluation, Experimentation). The architect holds a glowing tablet displaying a unified control panel, seamlessly managing the flow of data and resources between the buildings. Subtle digital particles flow between the structures, visualizing the data exchange. The city is bathed in a soft, ethereal light, symbolizing efficiency and harmony. The TensorZero logo is subtly integrated into the city's skyline. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]