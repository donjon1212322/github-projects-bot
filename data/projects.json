[
    {
        "id": 941322864,
        "name": "cyberimage",
        "description": "Stable Diffusion WebUI",
        "url": "https://github.com/RamboRogers/cyberimage",
        "language": "Python",
        "stars": 11,
        "forks": 1,
        "created_at": "2025-03-02T02:32:08Z",
        "updated_at": "2025-03-05T19:33:42Z",
        "topics": [
            "ai",
            "comfyui",
            "flux",
            "stable-diffusion-webui"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-03-04T01:45:13Z",
        "media_urls": [
            "https://opengraph.githubassets.com/04dac7fdfcdf23a84d1613ee634ed9e7faaceb1ec155bf818916cc2b4329d036/RamboRogers/cyberimage"
        ],
        "homepage": "",
        "readme_summary": "CyberImage is an AI image generation platform utilizing Stable Diffusion.  It offers a user-friendly web interface, supports batch processing and negative prompts, and integrates with AI assistants via the Model Context Protocol (MCP) using a JSON-RPC API.  The platform prioritizes speed, precision, and user privacy.",
        "key_features": [
            "Stable Diffusion AI model integration",
            "Web UI with cyberpunk theme",
            "Fast and precise image generation",
            "Gallery with multiple view options, search, filtering, and batch operations",
            "Queue system for managing image generation jobs",
            "API with JSON-RPC interface for external access",
            "Model Context Protocol (MCP) support for AI assistant integration",
            "Batch image generation",
            "Negative prompt support",
            "Customizable parameters",
            "Smart model caching and memory optimization",
            "Real-time progress tracking",
            "Image enhancement feature using OpenAI API",
            "Mobile-responsive design",
            "Dark mode support",
            "Local image storage",
            "No data collection, privacy-focused design"
        ],
        "primary_use_case": "AI-powered image generation platform with a web UI and API access",
        "open_issues": 0
    },
    {
        "id": 941298693,
        "name": "BookmarkCanvas",
        "description": "IntelliJ Plugin that offers an infinite canvas to organize code bookmarks",
        "url": "https://github.com/mwalkerr/BookmarkCanvas",
        "language": "Kotlin",
        "stars": 9,
        "forks": 0,
        "created_at": "2025-03-02T00:28:07Z",
        "updated_at": "2025-03-05T21:06:56Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-03-04T23:15:38Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ade8d768d7fc078ecbd3eb85ecf5ed5945feae6c37a648b029a4308c66ccd575/mwalkerr/BookmarkCanvas"
        ],
        "homepage": null,
        "readme_summary": "This IntelliJ plugin provides a visual canvas for managing bookmarks.  Users can add, arrange, connect, and navigate bookmarks, saving and loading layouts.  It supports configuration of context display and layout styles for enhanced code organization and understanding.",
        "key_features": [
            "Add bookmarks to a visual canvas from various IntelliJ IDE locations (tool window, modal dialog, canvas itself)",
            "Navigate to bookmarks by double-clicking on the canvas",
            "Remove, move, and zoom/pan the canvas",
            "Save/load canvas layouts",
            "Create and remove connections between bookmarks",
            "Configure context shown around bookmarks (lines of code)",
            "Configure canvas layout (grid, freeform)",
            "Change node titles",
            "Show/hide code for nodes"
        ],
        "primary_use_case": "Organize and visualize bookmarks within IntelliJ IDEs for improved navigation and understanding of relationships between bookmarked code locations",
        "open_issues": 0
    },
    {
        "id": 863050120,
        "name": "fastrtc",
        "description": "The python library for real-time communication",
        "url": "https://github.com/freddyaboulton/fastrtc",
        "language": "Python",
        "stars": 2503,
        "forks": 203,
        "created_at": "2024-09-25T16:19:19Z",
        "updated_at": "2025-03-06T00:43:06Z",
        "topics": [
            "artificial-intelligence",
            "llm",
            "python",
            "real-time",
            "speech-to-text",
            "text-to-speech"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-06T00:43:02Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2850521fbb8db76187514fb38abc6adb93e62423eb330adeb98de22c9b8d8c47/freddyaboulton/fastrtc"
        ],
        "homepage": "https://fastrtc.org/",
        "readme_summary": "FastRTC is a Python library enabling real-time audio/video streaming via WebRTC or WebSockets.  It features automatic UI generation, voice detection, and integration with FastAPI for custom backend development.  Use cases include creating voice-enabled applications and integrating with various APIs like those from Google and OpenAI.",
        "key_features": [
            "Automatic Voice Detection and Turn Taking",
            "Automatic UI with Gradio",
            "Automatic WebRTC Support",
            "Websocket Support",
            "Automatic Telephone Support",
            "Customizable backend with FastAPI"
        ],
        "primary_use_case": "Building real-time audio and video streaming applications in Python using WebRTC or WebSockets",
        "open_issues": 12
    },
    {
        "id": 894891699,
        "name": "PdfDing",
        "description": "Selfhosted PDF manager, viewer and editor offering a seamless user experience on multiple devices.",
        "url": "https://github.com/mrmn2/PdfDing",
        "language": "Python",
        "stars": 829,
        "forks": 37,
        "created_at": "2024-11-27T07:29:55Z",
        "updated_at": "2025-03-05T22:49:45Z",
        "topics": [
            "document-management",
            "lightweight",
            "pdf",
            "pdf-editor",
            "pdf-management",
            "pdf-viewer",
            "self-hosted"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-03-02T22:07:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/35f1dc5bbea49d9ecbd739fa5cb75e26fa39708fc8fe9c00d097463edba9476d/mrmn2/PdfDing"
        ],
        "homepage": "https://demo.pdfding.com",
        "readme_summary": "PdfDing is a self-hosted application for managing, viewing, and editing PDFs.  It offers a user-friendly interface with features like annotation tools, access controls, and various customization options.  Users can install it using Docker, Docker Compose, or Helm for Kubernetes deployments.",
        "key_features": [
            "Seamless browser based PDF viewing on multiple devices",
            "Multi-level tagging, starring and archiving functionalities",
            "Add annotations, highlighting and drawings to PDFs",
            "Clean, intuitive UI with dark mode, inverted color mode, custom theme colors and multiple layouts",
            "SSO support via OIDC",
            "Share PDFs with an external audience via a link or a QR Code with optional access control",
            "Markdown Notes",
            "Progress bars show the reading progress of each PDF"
        ],
        "primary_use_case": "Self-hostable PDF manager, viewer, and editor",
        "open_issues": 12
    },
    {
        "id": 920354355,
        "name": "codecapy",
        "description": "The only PR bot that actually tests your code.",
        "url": "https://github.com/Scrapybara/codecapy",
        "language": "Python",
        "stars": 131,
        "forks": 4,
        "created_at": "2025-01-22T02:09:43Z",
        "updated_at": "2025-03-05T19:44:08Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-02-27T04:08:34Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9e6023854a3183b074732ca41fd1f23da7b51c08964eace2dcdf5d38ab90c09c/Scrapybara/codecapy"
        ],
        "homepage": "https://codecapy.ai",
        "readme_summary": "CodeCapy is a GitHub app that automates UI testing for pull requests. It generates and executes UI tests based on code changes, providing feedback directly in PR comments.  It supports flexible test environment configuration through a `capy.yaml` file and integrates with GitHub Actions.",
        "key_features": [
            "Automatically detects new pull requests (PRs)",
            "Generates natural language end-to-end UI tests based on code changes",
            "Executes tests in isolated Scrapybara instances",
            "Posts test results to PR comments",
            "Supports custom test environment configuration via `capy.yaml` file",
            "Provides various step types for configuring tests: `bash`, `create-env`, `instruction`, `wait`",
            "Uses GitHub Actions for integration"
        ],
        "primary_use_case": "Automated UI testing for pull requests",
        "open_issues": 0
    },
    {
        "id": 365250183,
        "name": "nicegui",
        "description": "Create web-based user interfaces with Python. The nice way.",
        "url": "https://github.com/zauberzeug/nicegui",
        "language": "Python",
        "stars": 11455,
        "forks": 687,
        "created_at": "2021-05-07T13:55:05Z",
        "updated_at": "2025-03-05T21:37:07Z",
        "topics": [
            "frontend",
            "gui",
            "interaction",
            "interface",
            "interfaces",
            "python",
            "robotics",
            "scripting",
            "toolkit",
            "webapp",
            "website"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-03-04T09:31:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/30142de771c889135e1a0c10b330b10ab540db2521ed1cb7a63d35faaaff6bc3/zauberzeug/nicegui"
        ],
        "homepage": "https://nicegui.io",
        "readme_summary": "NiceGUI is a Python-based UI framework for building web-based GUIs.  It offers a wide range of UI elements and features, enabling rapid development of interactive applications for various use cases, including dashboards and tools for robotics, smart homes, and machine learning.  The framework supports features such as data binding, custom routes, and a testing framework.",
        "key_features": [
            "browser-based graphical user interface",
            "implicit reload on code change",
            "webserver or native mode operation",
            "standard GUI elements (label, button, checkbox, etc.)",
            "grouping with rows, columns, cards, dialogs",
            "HTML and Markdown support",
            "plotting, 3D scenes, virtual joysticks",
            "data binding and refreshable functions",
            "notifications, dialogs, menus",
            "shared/individual web pages",
            "user/general persistence",
            "custom routes/data responses",
            "keyboard input capture",
            "Tailwind CSS auto-complete",
            "pytest testing framework"
        ],
        "primary_use_case": "creating micro web apps, dashboards, and tools for robotics, smart home, and machine learning",
        "open_issues": 51
    },
    {
        "id": 325671936,
        "name": "reconftw",
        "description": "reconFTW is a tool designed to perform automated recon on a target domain by running the best set of tools to perform scanning and finding out vulnerabilities",
        "url": "https://github.com/six2dez/reconftw",
        "language": "Shell",
        "stars": 6049,
        "forks": 970,
        "created_at": "2020-12-30T23:52:52Z",
        "updated_at": "2025-03-06T00:29:21Z",
        "topics": [
            "bug-bounty",
            "bugbounty",
            "dns",
            "fuzzing",
            "hacking",
            "nuclei",
            "osint",
            "penetration-testing",
            "pentest",
            "pentest-tool",
            "pentesting",
            "recon",
            "reconnaissance",
            "scanner",
            "security",
            "security-tools",
            "subdomain",
            "vulnerabilities"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-03-05T13:01:21Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/325671936/e190df94-4fc5-4335-9b73-23e04e060768"
        ],
        "homepage": "",
        "readme_summary": "reconFTW automates reconnaissance, performing subdomain enumeration with various techniques and vulnerability checks.  It also includes OSINT, directory fuzzing, and more, aiming to provide comprehensive target information.  Integration with Axiom and Faraday is supported.",
        "key_features": [
            "Subdomain enumeration using passive, bruteforce, permutation, certificate transparency, source code scraping, and analytics techniques",
            "Vulnerability checks (XSS, Open Redirects, SSRF, CRLF, LFI, SQLi, SSL tests, SSTI, DNS zone transfers)",
            "OSINT techniques",
            "Directory fuzzing",
            "Dorking",
            "Ports scanning",
            "Screenshots",
            "Nuclei scanning",
            "Axiom and Faraday integration"
        ],
        "primary_use_case": "Automated reconnaissance for security assessments",
        "open_issues": 29
    },
    {
        "id": 16005513,
        "name": "wireless-ids",
        "description": "Ability to detect suspicious activity such as (WEP/WPA/WPS) attack by sniffing the air for wireless packets.",
        "url": "https://github.com/SYWorks/wireless-ids",
        "language": "Python",
        "stars": 257,
        "forks": 82,
        "created_at": "2014-01-17T16:48:45Z",
        "updated_at": "2025-03-05T17:38:50Z",
        "topics": [],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2014-02-26T14:37:38Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d499eb92ce7a63be01fd38d947725fd3860a277ab29a6e4e11543b4e2ee8c763/SYWorks/wireless-ids"
        ],
        "homepage": "https://www.facebook.com/media/set/?set=a.767725556588881.1073741830.281645261863582",
        "readme_summary": "This Python-based Wireless IDS sniffs air traffic for suspicious activities like WEP/WPA/WPS attacks.  It detects various attack types, including deauthentication floods, rogue access points, and specific attack packets from tools like Aircrack-NG and MDK3.  The system offers logging and customizable settings for enhanced monitoring.",
        "key_features": [
            "Detect mass deauthentication packets indicating WPA attacks",
            "Detect continuous data sent to access point using broadcast MAC address (WEP attacks)",
            "Detect unusual communication between wireless client and access point using EAP authentication (WPS bruteforce attacks)",
            "Detect changes in connection to another access point (Rogue AP detection)",
            "Detect Rogue Access Points responding to probes",
            "Display similar Access Point names (Evil Twins detection)",
            "Display probing SSIDs by wireless devices",
            "Detect Korek Chopchop packets (WEP attacks)",
            "Detect Fragmentation PRGA packets (WEP attacks)",
            "Detect WPA Downgrade attacks by MDK3",
            "Detect Michael Shutdown exploitation (TKIP) by MDK3",
            "Detect Beacon flooding by MDK3",
            "Detect Authentication DoS by MDK3",
            "Detect association flooding",
            "Detect WPA Migration Attack by Aircrack-NG",
            "Allow logging of events to file",
            "Allow disabling display of probing devices",
            "Setting of scanning count"
        ],
        "primary_use_case": "Wireless Intrusion Detection System (IDS)",
        "open_issues": 10
    },
    {
        "id": 877675290,
        "name": "awesome-free-apps",
        "description": "Curated list of the best free apps for PC and mobile",
        "url": "https://github.com/Axorax/awesome-free-apps",
        "language": "JavaScript",
        "stars": 2233,
        "forks": 102,
        "created_at": "2024-10-24T03:42:18Z",
        "updated_at": "2025-03-05T23:35:33Z",
        "topics": [
            "android",
            "awesome",
            "awesome-list",
            "free-apps",
            "ios",
            "linux",
            "macos",
            "microsoft",
            "mobile",
            "windows"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-03-05T11:47:18Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/877675290/46ff54a2-f146-4cda-8a08-05baaa081f32"
        ],
        "homepage": "",
        "readme_summary": "This repository provides a categorized list of free applications for Windows, macOS, Linux, Android, and iOS.  It includes various software types, from audio and video tools to developer tools and system utilities, with indicators for open-source options and recommendations.  The list is maintained and updated regularly.",
        "key_features": [
            "Windows support",
            "macOS support",
            "Linux support",
            "Open-source options",
            "Recommended applications",
            "Mobile version",
            "Android support",
            "iOS support",
            "Audio players",
            "Audio recording",
            "DJ software",
            "Music notation",
            "Music production",
            "Browsers",
            "Communication tools",
            "Messaging apps",
            "Email clients",
            "Compression and archiving tools",
            "System customization tools",
            "Wallpaper tools",
            "Data management tools",
            "Copy and move tools",
            "Sync and clone tools",
            "Developer tools",
            "API development tools",
            "Database tools",
            "Network analysis tools",
            "Game engines",
            "Virtualization tools",
            "Office suites",
            "E-book readers",
            "PDF tools",
            "Note taking apps",
            "Text editors",
            "Download managers",
            "Games",
            "Cloud gaming",
            "Mobile emulators",
            "Other emulators",
            "Graphics tools",
            "3D modeling and animation tools",
            "Security tools",
            "Antivirus software",
            "Password managers",
            "Image viewers",
            "Remote access tools",
            "Video editors",
            "Video players",
            "Video streaming and recording tools",
            "Video converters and compressors",
            "VPN and proxy tools",
            "Utility tools",
            "Clipboard management tools",
            "Metadata tools",
            "Window management tools",
            "File management tools",
            "Application management tools",
            "Screenshot tools",
            "Space visualizer tools"
        ],
        "primary_use_case": "Curated list of free applications categorized by functionality and platform support",
        "open_issues": 1
    }
]