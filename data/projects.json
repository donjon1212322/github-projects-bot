[
    {
        "id": 526081371,
        "name": "go2rtc",
        "description": "Ultimate camera streaming application with support RTSP, RTMP, HTTP-FLV, WebRTC, MSE, HLS, MP4, MJPEG, HomeKit, FFmpeg, etc.",
        "url": "https://github.com/AlexxIT/go2rtc",
        "language": "Go",
        "stars": 10330,
        "forks": 764,
        "created_at": "2022-08-18T06:16:48Z",
        "updated_at": "2025-10-21T10:12:06Z",
        "topics": [
            "ffmpeg",
            "h264",
            "h265",
            "hassio",
            "hls",
            "home-assistant",
            "homekit",
            "http-flv",
            "media-server",
            "mjpeg",
            "mp4",
            "rtmp",
            "rtp",
            "rtsp",
            "rtsp-server",
            "streaming",
            "webcam-streaming",
            "webrtc"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-15T15:08:09Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/526081371/c49bde42-af73-45f6-aada-1923c4db8619"
        ],
        "homepage": "https://github.com/AlexxIT/Blog",
        "readme_summary": "go2rtc is a versatile camera streaming application written in Go, supporting a wide array of protocols including RTSP, RTMP, WebRTC, and HomeKit. It enables users to stream from various sources, transcode on-the-fly, and publish to popular streaming services, making it suitable for smart home integration and standalone use.",
        "key_features": [
            "Zero-dependency and zero-config for multiple OS",
            "Low-latency streaming",
            "Support for various streaming protocols (RTSP, RTMP, HTTP-FLV, WebRTC, MSE, HLS, MP4, MJPEG, HomeKit)",
            "FFmpeg integration for broader source support and transcoding",
            "Publishing streams to services like YouTube and Telegram",
            "HomeKit camera streaming support",
            "Codec negotiation and 2-way audio",
            "Streaming from private networks via ngrok"
        ],
        "primary_use_case": "Camera streaming and media server application for various platforms and protocols.",
        "open_issues": 492,
        "cover_image_prompt": "A skilled conductor orchestrating a diverse ensemble of video streams, each represented by a unique instrument (RTSP violin, WebRTC trumpet, HomeKit harp). The conductor stands on a platform labeled 'go2rtc', seamlessly blending the streams into a harmonious broadcast emanating from a central stage. Digital particles representing different codecs swirl around the conductor, who expertly adjusts settings on a mixing board. Small UI elements display live stream previews and protocol information. The scene is set in a modern, minimalist studio with bright, focused lighting. The image should be in 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 664013991,
        "name": "postiz-app",
        "description": "ðŸ“¨ The ultimate social media scheduling tool, with a bunch of AI  ðŸ¤–",
        "url": "https://github.com/gitroomhq/postiz-app",
        "language": "TypeScript",
        "stars": 23920,
        "forks": 3940,
        "created_at": "2023-07-08T17:24:22Z",
        "updated_at": "2025-10-21T10:10:16Z",
        "topics": [
            "nextjs",
            "open-source",
            "open-source-social-media-scheduling-tool",
            "oss",
            "redis",
            "scheduling-tool",
            "social-media-scheduling-tool",
            "typescript"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-17T09:26:02Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/664013991/8b16b484-683a-4ed9-a132-6d070704cc12"
        ],
        "homepage": "https://postiz.com",
        "readme_summary": "Postiz is an open-source social media scheduling tool with AI features, designed as an alternative to platforms like Buffer and Hypefury. It offers a comprehensive suite of tools for managing social media posts, audience engagement, lead capture, and business growth across various social media platforms.",
        "key_features": [
            "Social media post scheduling",
            "AI-powered features",
            "Analytics and measurement",
            "Team collaboration",
            "Public API",
            "NodeJS SDK",
            "N8N custom node",
            "Make.com integration"
        ],
        "primary_use_case": "Social media scheduling and management with AI assistance.",
        "open_issues": 88,
        "cover_image_prompt": "Imagine a skilled clockmaker meticulously crafting intricate gears representing social media posts, each gear destined for a different platform (Instagram, X, Facebook, etc.). The clockmaker uses a glowing AI lens to perfect each gear, ensuring timely and accurate delivery. Finished gears smoothly integrate into a vast, interconnected clockwork mechanism, symbolizing automated scheduling. Small screens display analytics and engagement metrics. The scene is set in a bright, organized workshop with a futuristic touch. Digital particles flow around the gears, representing data. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 474384591,
        "name": "runtipi",
        "description": "Runtipi is a homeserver for everyone! One command setup, one click installs for your favorites self-hosted apps. âœ¨",
        "url": "https://github.com/runtipi/runtipi",
        "language": "TypeScript",
        "stars": 8963,
        "forks": 329,
        "created_at": "2022-03-26T15:16:57Z",
        "updated_at": "2025-10-21T07:52:44Z",
        "topics": [
            "homeserver",
            "linux",
            "self-hosted"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-18T08:07:41Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/474384591/44128e83-7ed7-4b63-84b4-dcf66158d5ef"
        ],
        "homepage": "https://www.runtipi.io/",
        "readme_summary": "Runtipi is a personal homeserver orchestrator designed for easy management and running of multiple services on a single server. It leverages Docker and provides a web interface to simplify service management, eliminating the need for manual configuration and networking complexities. It aims to be a user-friendly solution for self-hosting applications.",
        "key_features": [
            "One-command setup",
            "One-click installs for self-hosted apps",
            "Docker-based orchestration",
            "Web interface for service management",
            "App Store for discovering services",
            "Community app stores support",
            "Easy contribution guide for adding new apps"
        ],
        "primary_use_case": "Simplifying the management and deployment of self-hosted applications on a personal server.",
        "open_issues": 50,
        "cover_image_prompt": "Imagine a friendly robot butler standing in a modern home, organizing various app icons (like calendar, music, files) into neatly labeled server racks. The butler uses a touchscreen interface to manage the apps, with Docker logos subtly appearing as containers. Digital streams of data flow smoothly between the apps, visualized as glowing lines. The home setting is bright and inviting, symbolizing ease of use. Small UI elements showing Runtipi's interface are subtly placed in the background. The composition is clean and focused, with a pastel color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 1051789550,
        "name": "tuios",
        "description": "Terminal UI OS (Terminal Multiplexer)",
        "url": "https://github.com/Gaurav-Gosain/tuios",
        "language": "Go",
        "stars": 348,
        "forks": 7,
        "created_at": "2025-09-06T18:13:51Z",
        "updated_at": "2025-10-21T10:05:04Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-20T19:04:10Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/1051789550/eaedb6bb-4700-4fb9-a665-3e7c51b7359d"
        ],
        "homepage": null,
        "readme_summary": "TUIOS is a terminal-based window manager built with Go that provides a modern interface for managing multiple terminal sessions. It offers a vim-like modal interface with keyboard shortcuts, workspace support, and mouse interaction, aiming to improve terminal workflow efficiency.",
        "key_features": [
            "Terminal-based window management",
            "Vim-like modal interface",
            "Comprehensive keyboard shortcuts",
            "Workspace support",
            "Mouse interaction",
            "Status bar",
            "Tiling and non-tiling window layouts"
        ],
        "primary_use_case": "Managing multiple terminal sessions efficiently within a single terminal window.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled air traffic controller managing multiple glowing terminal windows floating in the air above a futuristic cityscape. The controller uses hand gestures to arrange and resize the windows, ensuring smooth data flow between them. Each window displays different real-time information, represented by dynamic charts and graphs. Subtle code snippets and UI elements float around the scene, connecting the metaphor to software. The repository name, 'TUIOS,' is subtly displayed on the control panel. The scene is set in a high-tech control tower with a blue and purple color scheme and dramatic lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 693262773,
        "name": "midday",
        "description": "Invoicing, Time tracking, File reconciliation, Storage, Financial Overview & your own Assistant made for Freelancers",
        "url": "https://github.com/midday-ai/midday",
        "language": "TypeScript",
        "stars": 12672,
        "forks": 1176,
        "created_at": "2023-09-18T17:12:27Z",
        "updated_at": "2025-10-21T10:11:26Z",
        "topics": [
            "finance",
            "nextjs",
            "supabase",
            "tailwind",
            "typescript"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-20T14:09:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cff4168dc58e6a3afcf4b3ce07f4b3d99b8847eebda9d84ffad3f463b0d73619/midday-ai/midday"
        ],
        "homepage": "https://midday.ai",
        "readme_summary": "The Midday repository provides an all-in-one tool for freelancers, contractors, consultants, and solo entrepreneurs to manage their business operations. It integrates time tracking, invoicing, file storage, financial overview, and an AI assistant into a single platform, aiming to streamline various business functions.",
        "key_features": [
            "Time Tracking",
            "Invoicing",
            "Magic Inbox",
            "Vault",
            "Seamless Export",
            "Assistant"
        ],
        "primary_use_case": "Streamlining business operations for freelancers and solo entrepreneurs.",
        "open_issues": 5,
        "cover_image_prompt": "A skilled artisan sitting at a workbench, meticulously crafting a complex clockwork mechanism representing a business. Each gear symbolizes a different aspect of freelancing: time tracking, invoicing, file storage, and financial analysis. The artisan carefully connects these gears, creating a smoothly running machine. Small screens display UI elements of the Midday platform, subtly integrated into the workbench. Digital particles flow between the gears, visualizing data transfer. The scene is set in a bright, organized workshop with warm lighting. The image should be in 3D isometric illustration style with vibrant colors and intricate details."
    },
    {
        "id": 41422567,
        "name": "Mengine",
        "description": "Mengine is an multiple platforms engine for creating and running graphical games",
        "url": "https://github.com/irov/Mengine",
        "language": "C++",
        "stars": 31,
        "forks": 10,
        "created_at": "2015-08-26T11:44:35Z",
        "updated_at": "2025-10-21T00:46:58Z",
        "topics": [
            "game-development",
            "game-engine",
            "gamedev",
            "mengine",
            "multi-platform",
            "open-source"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-10-20T19:34:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c63ec474ca1669c27449b0e4dcdf4feaf61366328aab9d54f2cc1adb74942d6e/irov/Mengine"
        ],
        "homepage": "http://irov.github.io/Mengine/",
        "readme_summary": "Mengine is a multi-platform game engine written in C++ designed for creating and running graphical games. It utilizes CMake as its build system and supports platforms like Windows, Android and others. The engine has been used in released mobile and desktop games.",
        "key_features": [
            "Multi-platform support",
            "CMake build system",
            "Windows build instructions provided",
            "Example projects listed"
        ],
        "primary_use_case": "Creating and running graphical games across multiple platforms.",
        "open_issues": 9,
        "cover_image_prompt": "A skilled clockmaker meticulously assembling intricate gears and springs to power a miniature, vibrant game world. The clockwork mechanism represents the Mengine game engine, with each gear symbolizing a different platform (mobile, desktop). Small screens embedded within the clockwork display snippets of C++ code and game assets. The scene is set in a cozy workshop filled with tools and blueprints, bathed in warm, inviting light. Digital particles flow between the gears, animating the game world. The composition is focused and detailed, with a steampunk aesthetic. The image should be in 3D isometric illustration style with rich textures and vibrant colors."
    },
    {
        "id": 391833866,
        "name": "PikaPython",
        "description": "An ultra-lightweight Python interpreter that runs with only 4KB of RAM, zero dependencies. It is ready to use out of the box without any configuration required and easy to extend with C. Similar project: MicroPython, JerryScript.",
        "url": "https://github.com/pikasTech/PikaPython",
        "language": "C",
        "stars": 1637,
        "forks": 156,
        "created_at": "2021-08-02T06:08:45Z",
        "updated_at": "2025-10-21T08:45:36Z",
        "topics": [
            "embedded",
            "esp32",
            "esp8266",
            "iot",
            "language",
            "lua",
            "luatos",
            "mcu",
            "microcontroller",
            "micropython",
            "python",
            "rtthread",
            "stm32"
        ],
        "quality_score": 0.8500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-09-08T08:44:28Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c4e3d0202a89cfe27a15dd6aceb876723912d81de108a34f0e5984ad5907b0df/pikasTech/PikaPython"
        ],
        "homepage": "http://pikapython.com/",
        "readme_summary": "PikaPython is an ultra-lightweight Python interpreter designed for embedded systems with limited resources. It boasts a small memory footprint of only 4KB of RAM and requires no external dependencies, making it suitable for microcontrollers and IoT devices. It can be extended with C.",
        "key_features": [
            "Ultra-lightweight Python interpreter",
            "4KB RAM usage",
            "Zero dependencies",
            "Ready to use out of the box",
            "Easy to extend with C",
            "Pika Pre-compiler for C binding"
        ],
        "primary_use_case": "Embedded systems development, particularly for microcontrollers and IoT devices with limited resources.",
        "open_issues": 17,
        "cover_image_prompt": "A tiny, glowing python snake curled around a miniature globe, injecting lines of code into various continents. The globe represents the world of embedded systems, and the code symbolizes PikaPython's ability to empower these devices. Small screens embedded in the globe display snippets of Python code and system resource usage. The scene is set in a futuristic laboratory with soft, ambient lighting. The composition is clean and focused, highlighting the python and the globe. The color scheme is vibrant with blues, greens, and yellows. The image should be in 3D isometric illustration style with rich details."
    },
    {
        "id": 488804911,
        "name": "windmill",
        "description": "Open-source developer platform to power your entire infra and turn scripts into webhooks, workflows and UIs. Fastest workflow engine (13x vs Airflow). Open-source alternative to Retool and Temporal.",
        "url": "https://github.com/windmill-labs/windmill",
        "language": "HTML",
        "stars": 14866,
        "forks": 814,
        "created_at": "2022-05-05T02:21:17Z",
        "updated_at": "2025-10-21T10:05:40Z",
        "topics": [
            "low-code",
            "open-source",
            "platform",
            "postgresql",
            "python",
            "self-hostable",
            "typescript"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-10-20T14:32:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/76b1a26a542ef9b21a64213cd7f1fbade8a575fbcfc284d6e3d1d5142dec0043/windmill-labs/windmill"
        ],
        "homepage": "https://windmill.dev",
        "readme_summary": "Windmill is an open-source developer platform designed to streamline the creation of internal tools. It enables developers to turn scripts into webhooks, workflows, and UIs, offering a self-hostable alternative to tools like Retool and Temporal. Windmill supports multiple scripting languages and provides features like automatic UI generation and low-code app building.",
        "key_features": [
            "Turns scripts into webhooks, workflows, and UIs",
            "Supports Python, TypeScript, Go, Bash, SQL, and GraphQL",
            "Self-hostable",
            "Automatic UI generation",
            "Low-code app building",
            "Workflow engine",
            "CLI tool",
            "Web IDE",
            "GitHub repo synchronization",
            "Sandboxing",
            "Secrets management"
        ],
        "primary_use_case": "Building internal tools, APIs, background jobs, workflows, and UIs from scripts.",
        "open_issues": 457,
        "cover_image_prompt": "A skilled architect overseeing a construction site where code snippets are being assembled into functional buildings representing APIs, workflows, and UIs. The architect uses a blueprint labeled 'Windmill' to guide the construction, seamlessly integrating different programming languages represented by uniquely styled bricks. Digital particles flow from the blueprint, solidifying into the structures. Small screens display real-time data flow and application performance. The scene is set in a bright, modern city with a blue and green color scheme. The image should be in a 3D isometric illustration style with clear details."
    }
]