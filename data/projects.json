[
    {
        "id": 987896249,
        "name": "Nimbus",
        "description": "An open source alternative to Google Drive, One Drive, iCloud, etc.",
        "url": "https://github.com/logscore/Nimbus",
        "language": "TypeScript",
        "stars": 718,
        "forks": 32,
        "created_at": "2025-05-21T18:45:29Z",
        "updated_at": "2025-05-30T10:09:59Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-29T01:55:49Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c77d7510b1c3e573f40e74c2972d41fc1a69240a5d8f29ce3dde94f958052d95/logscore/Nimbus"
        ],
        "homepage": "https://nimbus-cloud-storage.vercel.app",
        "readme_summary": "Nimbus is an open-source cloud storage solution built with TypeScript. It provides users with an alternative to mainstream cloud storage providers, offering features such as PostgreSQL database integration, Google OAuth support, and a development server for local development. The project utilizes Docker for database setup and includes database migration capabilities.",
        "key_features": [
            "Cloud storage",
            "PostgreSQL database integration",
            "Google OAuth support",
            "Database migrations",
            "Development server"
        ],
        "primary_use_case": "Open source alternative to cloud storage solutions like Google Drive, OneDrive, and iCloud.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled architect meticulously organizing and filing blueprints within a vast, luminous cloud archive. The architect, representing the user, carefully places documents (data) into clearly labeled folders within the cloud, symbolizing Nimbus's cloud storage capabilities. Subtle holographic projections display file structures and access permissions, adding a tech-inspired touch. The scene is bathed in soft, ethereal light, creating a sense of order and security. The illustration should be in a clean, 3D isometric style with a focus on clarity and intuitive visual representation, using a calming color palette of blues and whites."
    },
    {
        "id": 979237557,
        "name": "ziina",
        "description": "ðŸ’» ðŸ“¤ ðŸ‘¥ Instant terminal sharing; using Zellij.",
        "url": "https://github.com/ziinaio/ziina",
        "language": "Go",
        "stars": 31,
        "forks": 0,
        "created_at": "2025-05-07T07:53:11Z",
        "updated_at": "2025-05-30T07:10:12Z",
        "topics": [
            "terminal",
            "terminal-sharing",
            "tmate",
            "zellij"
        ],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-20T01:46:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c4cf6bef11baefa8cae9928cface4c2cc65f097073805402c08781c7494cee11/ziinaio/ziina"
        ],
        "homepage": "",
        "readme_summary": "Ziina enables instant terminal sharing by creating an ephemeral SSH tunnel to a local Zellij session. It's server-less, requiring only a standard OpenSSH server with a public IP. Peers can connect to the Zellij session through the tunnel using a standard SSH client, making collaboration easy even behind NAT gateways.",
        "key_features": [
            "Instant terminal sharing using Zellij",
            "Server-less architecture",
            "NAT gateway traversal",
            "Ephemeral SSH remote port-forwarding tunnel",
            "Built-in minimal SSH server",
            "Username-based authentication"
        ],
        "primary_use_case": "Instant terminal sharing with peers over untrusted networks, even behind NAT gateways, using Zellij.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a skilled artisan crafting a bridge between two distant islands using glowing strands of energy. One island represents a local computer terminal, complete with a miniature Zellij interface. The other island, shrouded in clouds, symbolizes a remote user's terminal. The artisan carefully weaves the energy strands, creating a secure and vibrant connection that allows figures to cross the bridge and collaborate. Subtle UI elements float around the bridge, displaying real-time terminal activity. The scene is bathed in soft, ethereal light, creating a sense of wonder and seamless connectivity. The image should be in a 3D isometric illustration style with vibrant colors and intricate details."
    },
    {
        "id": 592391289,
        "name": "fastRAG",
        "description": "Efficient Retrieval Augmentation and Generation Framework",
        "url": "https://github.com/IntelLabs/fastRAG",
        "language": "Python",
        "stars": 1546,
        "forks": 142,
        "created_at": "2023-01-23T16:25:35Z",
        "updated_at": "2025-05-30T10:05:54Z",
        "topics": [
            "benchmark",
            "colbert",
            "diffusion",
            "generative-ai",
            "information-retrieval",
            "knowledge-graph",
            "llm",
            "multi-modal",
            "nlp",
            "question-answering",
            "semantic-search",
            "sentence-transformers",
            "summarization",
            "transformers"
        ],
        "quality_score": 0.35,
        "contributors_count": 0,
        "last_commit_date": "2024-11-25T10:08:22Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/592391289/51bab748-107d-481e-a637-f53a56ac76ae"
        ],
        "homepage": "",
        "readme_summary": "fastRAG is a research framework designed for efficient and optimized retrieval augmented generative pipelines, incorporating state-of-the-art LLMs and Information Retrieval. It provides researchers and developers with a comprehensive tool-set for advancing retrieval augmented generation, optimized for Intel hardware and customizable through Haystack and HuggingFace.",
        "key_features": [
            "Optimized RAG pipelines for compute efficiency",
            "Optimized for Intel Hardware (IPEX, Optimum Intel, Optimum-Habana)",
            "Customizable components compatible with Haystack and HuggingFace"
        ],
        "primary_use_case": "Building and exploring efficient retrieval-augmented generative models and applications.",
        "open_issues": 3,
        "cover_image_prompt": "A skilled librarian stands amidst towering shelves filled with books, each representing a different piece of information. The librarian, equipped with advanced lenses and a digital tablet, swiftly retrieves relevant books and synthesizes their knowledge into a single, illuminating beam of light that projects a clear answer onto a screen. Subtle UI elements float around the librarian, displaying search queries and data visualizations. The scene is set in a grand, futuristic library with soft, focused lighting. The image should be in a 3D isometric illustration style with rich details and a warm color scheme."
    },
    {
        "id": 13045763,
        "name": "teavm",
        "description": "Compiles Java bytecode to JavaScript, WebAssembly and C",
        "url": "https://github.com/konsoletyper/teavm",
        "language": "Java",
        "stars": 2828,
        "forks": 277,
        "created_at": "2013-09-23T20:04:15Z",
        "updated_at": "2025-05-30T06:25:19Z",
        "topics": [
            "aot",
            "java",
            "javascript",
            "jvm",
            "webassembly"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-05-29T16:15:51Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6e73a934a7429ab1418e2e6babbd259d13255e7cf14c16513184243bfbbff21d/konsoletyper/teavm"
        ],
        "homepage": "https://teavm.org",
        "readme_summary": "TeaVM is a Java bytecode compiler that enables developers to run Java code in diverse environments. It translates Java bytecode into JavaScript, WebAssembly, and C, allowing for cross-platform development. The project also provides tools for embedding the compiler and includes a reimplementation of the Java class library to ensure compatibility and avoid licensing issues.",
        "key_features": [
            "Compiles Java bytecode to JavaScript",
            "Compiles Java bytecode to WebAssembly",
            "Compiles Java bytecode to C",
            "Provides tooling for embedding the compiler in other applications",
            "Offers a Java class library reimplementation based on Apache Harmony, Joda-Time, and jzlib"
        ],
        "primary_use_case": "Compiling Java code for execution in environments that do not support the JVM, such as web browsers (JavaScript, WebAssembly) or native applications (C).",
        "open_issues": 165,
        "cover_image_prompt": "A skilled alchemist in a workshop, meticulously transmuting bubbling beakers of Java bytecode into glowing vials labeled 'JavaScript', 'WebAssembly', and 'C'. The alchemist uses a complex array of lenses and prisms to refract the Java essence into its target forms. Small UI elements showing code compilation subtly float around the scene. The workshop is filled with arcane symbols and subtle digital particles. The composition is clean and focused with a warm, inviting color scheme. The image should be in a detailed 3D isometric illustration style with rich textures and vibrant colors."
    },
    {
        "id": 5349565,
        "name": "presto",
        "description": "The official home of the Presto distributed SQL query engine for big data",
        "url": "https://github.com/prestodb/presto",
        "language": "Java",
        "stars": 16355,
        "forks": 5461,
        "created_at": "2012-08-09T01:03:37Z",
        "updated_at": "2025-05-30T06:16:58Z",
        "topics": [
            "big-data",
            "data",
            "hadoop",
            "hive",
            "java",
            "lakehouse",
            "presto",
            "query",
            "sql"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-29T17:07:40Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/5349565/33e38c80-023e-11ea-96e6-40042ef6e9c7"
        ],
        "homepage": "http://prestodb.io",
        "readme_summary": "Presto is a distributed SQL query engine designed for efficiently querying large datasets. It supports standard SQL syntax and can connect to various data sources like Hive. It is built using Java and utilizes Maven for dependency management and building, making it suitable for big data analytics and lakehouse architectures.",
        "key_features": [
            "Distributed SQL query engine",
            "Big data processing",
            "Supports Java 8+",
            "Maven build system",
            "Hive connector"
        ],
        "primary_use_case": "Distributed SQL querying for big data analysis.",
        "open_issues": 1762,
        "cover_image_prompt": "Imagine a bustling train station where data arrives as raw cargo on freight trains. A central 'Presto Terminal' acts as a high-speed sorting and routing hub. Data trains are quickly unloaded, analyzed by diligent workers (representing the query engine), and then dispatched on new tracks as refined, organized information. Digital screens display SQL queries and data flow diagrams, subtly integrated into the station's architecture. The scene is bathed in the warm glow of efficiency, with a focus on speed and organization. Render this in a detailed 3D isometric illustration style with a vibrant color scheme."
    },
    {
        "id": 955078733,
        "name": "bizgen",
        "description": "[CVPR 2025] This is an official inference code of the paper \"BizGen: Advancing Article-level Visual Text Rendering for Infographics Generation\" . Project page: https://bizgen-msra.github.io/",
        "url": "https://github.com/1230young/bizgen",
        "language": "Python",
        "stars": 263,
        "forks": 37,
        "created_at": "2025-03-26T04:29:28Z",
        "updated_at": "2025-05-30T10:09:51Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-04-05T11:26:29Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cbc284f9d37d283e0e478dd9cb1f5fac25d1de553b6bb5e2e7bb0b3bcdc606d6/1230young/bizgen"
        ],
        "homepage": "",
        "readme_summary": "The BizGen repository provides inference code and pretrained models for generating infographics and slides from article-level business content. It supports long context lengths, enabling the creation of ultra-dense layouts with high-quality visual text rendering in multiple languages. The system offers flexibility in image generation through layer-wise detail refinement.",
        "key_features": [
            "Long context length support for ultra-dense layouts (50+ layers) and article-level prompts (1000+ tokens)",
            "High-quality business content generation up to 2240*896 resolution",
            "Powerful visual text rendering in ten different languages with high spelling accuracy",
            "Image generation diversity and flexibility with layer-wise detail refinement through layout conditional CFG"
        ],
        "primary_use_case": "Article-level visual text rendering for infographics and slides generation from business content.",
        "open_issues": 9,
        "cover_image_prompt": "Imagine a skilled architect meticulously crafting a blueprint for a towering skyscraper, each floor representing a layer of an infographic or slide. The architect uses a special pen that magically transforms text articles into visually appealing layouts, complete with charts, images, and concise summaries. The blueprint glows with digital particles, subtly displaying snippets of code and data visualizations. The scene is set in a bright, modern studio with large windows overlooking a bustling city. The image should be in a 3D isometric illustration style with vibrant colors and intricate details, conveying precision and creativity."
    },
    {
        "id": 16960472,
        "name": "fake2db",
        "description": "create custom test databases that are populated with fake data",
        "url": "https://github.com/emirozer/fake2db",
        "language": "Python",
        "stars": 2319,
        "forks": 121,
        "created_at": "2014-02-18T19:14:28Z",
        "updated_at": "2025-05-30T09:55:43Z",
        "topics": [
            "data",
            "database",
            "fake-content",
            "faker",
            "python"
        ],
        "quality_score": 0.35,
        "contributors_count": 0,
        "last_commit_date": "2019-11-25T09:19:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/991d0cf4bc1a136297ac586226e44448187f7fd44dbeccbcc6cb14b7e9bf3476/emirozer/fake2db"
        ],
        "homepage": "",
        "readme_summary": "fake2db is a Python tool designed to generate fake data for populating test databases. It supports multiple database systems, including SQLite, MySQL, PostgreSQL, MongoDB, Redis, and CouchDB. The tool allows for customization of the generated data and provides options to control the number of rows, database name, connection parameters, and data localization.",
        "key_features": [
            "Generates fake data for various databases (sqlite, mysql, postgresql, mongodb, redis, couchdb)",
            "Customizable data generation using the `--custom` parameter",
            "Optional arguments for rows, database name, host, port, username, password, locale, and seed",
            "Supports FoundationDB SQL Layer via PostgreSQL generator"
        ],
        "primary_use_case": "Generating realistic test databases populated with fake data for software development and testing purposes.",
        "open_issues": 7,
        "cover_image_prompt": "A master craftsman in a bustling workshop meticulously crafting unique keys, each representing a different type of database (SQLite, MySQL, PostgreSQL, MongoDB, Redis, CouchDB). These keys are then used to unlock chests overflowing with perfectly organized, realistic-looking data. Subtle UI elements float around the craftsman, displaying code snippets and database schemas. The workshop is filled with warm, inviting light, and the scene is rendered in a detailed 3D isometric illustration style with vibrant colors."
    },
    {
        "id": 5483330,
        "name": "you-get",
        "description": ":arrow_double_down: Dumb downloader that scrapes the web",
        "url": "https://github.com/soimort/you-get",
        "language": "Python",
        "stars": 55643,
        "forks": 9754,
        "created_at": "2012-08-20T15:53:36Z",
        "updated_at": "2025-05-30T09:56:16Z",
        "topics": [],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-27T15:32:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e9257f084772a958a306b139d2e7dd8860850d36d5b41ce370a660047bbde8ac/soimort/you-get"
        ],
        "homepage": "https://you-get.org/",
        "readme_summary": "You-Get is a command-line utility designed for downloading media content from various websites. It allows users to download videos, audios, and images, stream videos in media players, and scrape web pages for images. The tool aims to provide users with control over their downloaded content and bypass proprietary technologies.",
        "key_features": [
            "Downloads videos, audios, and images from various websites.",
            "Streams online videos in a media player without a web browser.",
            "Scrapes web pages to download images.",
            "Downloads arbitrary non-HTML content."
        ],
        "primary_use_case": "Downloading media content (videos, audios, images) from the web when no other convenient method is available.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled librarian carefully retrieves digital books (videos, audios, images) from towering shelves labeled with website logos (YouTube, Youku, etc.). The librarian uses a special tool resembling a claw to gently extract the desired media, which then transforms into tangible items placed in a user's personal collection. Subtle UI elements float nearby, displaying download progress and file information. The scene is set in a warmly lit, futuristic library with a focus on organization and accessibility. The image should be in 3D isometric illustration style with clean lines and vibrant colors."
    }
]