[
    {
        "id": 906632895,
        "name": "mopad",
        "description": "Adds gamepad support to marimo/Python",
        "url": "https://github.com/koaning/mopad",
        "language": "Python",
        "stars": 26,
        "forks": 0,
        "created_at": "2024-12-21T13:03:41Z",
        "updated_at": "2025-06-07T07:40:07Z",
        "topics": [],
        "quality_score": 0.5499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-03T08:10:32Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2abb5eae1882fa147479f7f89112bc5f839e0a65ed6939156c6fdf1966edf2f4/koaning/mopad"
        ],
        "homepage": "https://koaning.github.io/mopad/",
        "readme_summary": "Mopad is an anywidget that enables gamepad input within Marimo notebooks. It features automatic gamepad detection, real-time visual feedback, precise timestamp tracking, and support for any button on a Bluetooth gamepad. This allows users to create interactive data explorations, games, and other applications that benefit from real-time gamepad control.",
        "key_features": [
            "Automatic gamepad detection",
            "Real-time visual feedback",
            "Precise timestamp tracking",
            "Any button support"
        ],
        "primary_use_case": "Adding gamepad support to Marimo notebooks for interactive data exploration, games, or any application needing real-time gamepad input.",
        "open_issues": 0,
        "cover_image_prompt": "A gamer sits on a futuristic couch, effortlessly controlling a complex data dashboard displayed on a large holographic screen using only a gamepad. The dashboard visualizes real-time data streams responding to the gamer's inputs. Subtle code snippets and data visualizations float around the scene, connecting the gamepad interaction to the underlying software. The scene is set in a modern, minimalist living room with soft, ambient lighting. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 996114793,
        "name": "two_claps_open",
        "description": "Open Chrome (or any file/app) by just clapping twice",
        "url": "https://github.com/Yutarop/two_claps_open",
        "language": "Python",
        "stars": 12,
        "forks": 0,
        "created_at": "2025-06-04T13:29:28Z",
        "updated_at": "2025-06-07T03:39:35Z",
        "topics": [
            "clap-detection",
            "tonystark"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-06-07T02:56:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d6f0ba3f958cc3277097a345ec8704e2f069256e0a60bf9804c7bee733dce8d9/Yutarop/two_claps_open"
        ],
        "homepage": "",
        "readme_summary": "The `two_claps_open` repository provides a way to open applications or trigger actions by detecting two consecutive claps. It uses frequency analysis and peak detection on audio input to identify claps, filtering out irrelevant noise. The repository includes example scripts for opening Chrome and activating a voice assistant.",
        "key_features": [
            "Opens applications with two claps",
            "Clap detection using frequency analysis and peak detection",
            "Bandpass filter to isolate clap sounds",
            "Voice assistant activation via claps"
        ],
        "primary_use_case": "Opening applications or activating functions with a double clap gesture.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a conductor leading an orchestra, but instead of a baton, they clap their hands twice. The orchestra springs to life, with instruments visually representing different applications like Chrome, a voice assistant, and a presentation. Each instrument glows as it activates. Subtle UI elements float around the orchestra, displaying simplified code snippets and application icons. The scene is set in a grand concert hall with warm, inviting lighting. The composition is symmetrical and balanced, with a focus on the conductor. The color scheme is vibrant and energetic. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 992393505,
        "name": "LLMFeeder",
        "description": "Brower extension to convert web pages to clean Markdown and copy to clipboard so you can feed it to your favorite LLM model as context with just 1 click!",
        "url": "https://github.com/jatinkrmalik/LLMFeeder",
        "language": "JavaScript",
        "stars": 71,
        "forks": 15,
        "created_at": "2025-05-29T04:53:42Z",
        "updated_at": "2025-06-07T10:00:46Z",
        "topics": [
            "automation",
            "browser",
            "chrome-extension",
            "converter",
            "developer-tools",
            "firefox-addon",
            "llm",
            "markdown"
        ],
        "quality_score": 0.9000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-06-06T23:38:25Z",
        "media_urls": [
            "https://opengraph.githubassets.com/01a3a41edd68680ee77b2965f28c0952918931b97eaaf7638881793d239e11eb/jatinkrmalik/LLMFeeder"
        ],
        "homepage": "",
        "readme_summary": "LLMFeeder is a browser extension designed to simplify the process of feeding web page content to LLMs. It extracts the main content of a webpage, converts it to clean Markdown, and copies it to the clipboard with a single click, making it easy to provide context to your favorite AI models. It is available for both Chrome and Firefox.",
        "key_features": [
            "Smart Content Extraction using Readability",
            "One-Click Markdown Conversion and Copy to Clipboard",
            "LLM-Optimized Output",
            "Customizable Content Scope and Formatting",
            "Keyboard Shortcuts",
            "Multi-Browser Support (Chrome and Firefox)"
        ],
        "primary_use_case": "Converting web pages to clean Markdown for use as context in Large Language Models (LLMs).",
        "open_issues": 14,
        "cover_image_prompt": "A diligent librarian meticulously transforming messy stacks of web pages into neatly organized Markdown notebooks. The librarian uses a special tool that extracts the core content, leaving behind the clutter. The organized notebooks are then copied and sent via a glowing data stream to a waiting AI assistant. Small UI elements showing the LLMFeeder logo and Markdown formatting are subtly integrated into the scene. The setting is a bright, modern library with a clean and efficient atmosphere. The image should be in a flat design style with clear iconography and a calming color palette of blues and greens."
    },
    {
        "id": 912509222,
        "name": "reddit-tui",
        "description": "Terminal UI for reddit",
        "url": "https://github.com/tonymajestro/reddit-tui",
        "language": "Go",
        "stars": 131,
        "forks": 8,
        "created_at": "2025-01-05T19:10:22Z",
        "updated_at": "2025-06-07T08:17:42Z",
        "topics": [],
        "quality_score": 0.7499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-28T21:18:53Z",
        "media_urls": [
            "https://opengraph.githubassets.com/cecb9566b5b752a0854d290e6b9cb3356af5268126e92f06d4aa34de4cd1a9c2/tonymajestro/reddit-tui"
        ],
        "homepage": null,
        "readme_summary": "Reddittui is a terminal-based UI for browsing Reddit. It allows users to navigate subreddits, view posts and comments, and customize the application's behavior through a configuration file. The application is designed for users who prefer a command-line interface for accessing Reddit.",
        "key_features": [
            "Subreddit Browsing",
            "Post Viewing",
            "Keyboard Navigation",
            "Configurable"
        ],
        "primary_use_case": "Browsing Reddit from the command line.",
        "open_issues": 7,
        "cover_image_prompt": "Imagine a traveler sitting comfortably inside a sleek, minimalist train car, gazing out the window at a vibrant landscape representing Reddit. The train car's window displays a constantly updating stream of information, like posts and comments. The traveler uses simple hand gestures to navigate the landscape, selecting different areas representing subreddits. Small, glowing icons representing keyboard shortcuts float around the traveler. The scene is bathed in soft, warm light, creating a sense of calm and focus. The train car subtly displays the 'Reddittui' logo. The image should be in a clean, flat design style with clear iconography and a limited color palette."
    },
    {
        "id": 796129070,
        "name": "athena-crisis",
        "description": "Athena Crisis is a modern-retro turn-based tactical strategy game. Athena Crisis is open core technology.",
        "url": "https://github.com/nkzw-tech/athena-crisis",
        "language": "TypeScript",
        "stars": 1772,
        "forks": 130,
        "created_at": "2024-05-05T02:44:53Z",
        "updated_at": "2025-06-07T08:55:34Z",
        "topics": [
            "athena-crisis-is-awesome",
            "css",
            "gamedev",
            "javascript",
            "react",
            "typescript"
        ],
        "quality_score": 1.0,
        "contributors_count": 0,
        "last_commit_date": "2025-06-03T08:00:44Z",
        "media_urls": [
            "https://opengraph.githubassets.com/253473529114cf2dd6f4d00a55f251b8187da2bfd1f601f88122a84d9aa31a92/nkzw-tech/athena-crisis"
        ],
        "homepage": "https://athenacrisis.com/open-source",
        "readme_summary": "Athena Crisis is an open-core turn-based tactical strategy game. The repository provides the source code, licensed under MIT, to improve the existing game, build additional tools, study game development, or create entirely new turn-based strategy games. The codebase is modular, with packages focusing on data structures, game state, rendering, and UI.",
        "key_features": [
            "Turn-based tactical strategy game development",
            "Open core technology for game modification and tool creation",
            "Modular codebase with separated concerns (data, game state, rendering, UI)",
            "Documentation and playground for open-source components",
            "Support for contributions and community development"
        ],
        "primary_use_case": "Developing, modifying, and extending a turn-based tactical strategy game using an open core architecture.",
        "open_issues": 6,
        "cover_image_prompt": "A seasoned general overseeing a complex battlefield represented by a game board. The general strategically moves units (data structures) and issues commands (algorithms) to achieve victory. A holographic display shows the game's state and potential outcomes. Subtle UI elements and code snippets are integrated into the board's design. The scene is set in a futuristic war room with dramatic lighting. The Athena Crisis logo is subtly displayed on a nearby screen. The image should be in a detailed 3D isometric illustration style with vibrant colors and clear visual cues."
    },
    {
        "id": 915591610,
        "name": "ItsCaptchaBot",
        "description": "Капча для вашего чата в Telegram",
        "url": "https://github.com/RimMirK/ItsCaptchaBot",
        "language": "Python",
        "stars": 4,
        "forks": 4,
        "created_at": "2025-01-12T09:22:00Z",
        "updated_at": "2025-06-06T21:02:43Z",
        "topics": [],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-04-23T22:42:14Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d80b705c35c2c2fce4a2e3047cac20a0cbaa6622ec85b3da4ef1b9355aa3125c/RimMirK/ItsCaptchaBot"
        ],
        "homepage": null,
        "readme_summary": "ItsCaptchaBot is a Telegram bot that adds a captcha verification step for new chat participants. It helps to prevent spam and bots from entering the chat by requiring users to solve a captcha within 10 minutes. The bot supports multiple languages and can be easily installed and configured.",
        "key_features": [
            "Captcha verification for new Telegram chat participants",
            "Automatic kicking of users who fail captcha",
            "Multilingual support"
        ],
        "primary_use_case": "Preventing bots and unwanted users from joining Telegram chats.",
        "open_issues": 1,
        "cover_image_prompt": "A friendly Telegram bot dressed as a security guard stands at the entrance of a bustling Telegram chat room, holding a clipboard with a captcha puzzle. New users, depicted as cartoon characters, approach the entrance, and the bot presents them with the captcha. Those who solve it correctly receive a green checkmark and are welcomed into the chat. Those who fail after 10 minutes are gently escorted away by a smaller bot. The scene is bright and inviting, with subtle UI elements showing the bot's settings and language options. The repository name, 'ItsCaptchaBot,' is subtly displayed on a welcome banner above the chat room entrance. The image should be in a flat design style with clear iconography and vibrant colors."
    }
]