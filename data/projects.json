[
    {
        "id": 63427304,
        "name": "persepolis",
        "description": "Persepolis is a download manager written in Python.",
        "url": "https://github.com/persepolisdm/persepolis",
        "language": "Python",
        "stars": 7007,
        "forks": 690,
        "created_at": "2016-07-15T14:20:23Z",
        "updated_at": "2025-10-26T09:05:45Z",
        "topics": [
            "bsd",
            "download-manager",
            "freebsd",
            "gnu-linux",
            "gui",
            "hacktoberfest",
            "linux",
            "macosx",
            "meson",
            "pyqt5",
            "pyside6",
            "python",
            "python-requests",
            "python3",
            "qt5",
            "qt6",
            "wiki",
            "windows",
            "yt-dlp",
            "yt-dlp-gui"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-08-10T21:52:21Z",
        "media_urls": [
            "https://opengraph.githubassets.com/bdc1c81daaa13b54fdef9a0033decf8cb2afd678ebd98e45a5c6a5eaa0372a21/persepolisdm/persepolis"
        ],
        "homepage": "https://persepolisdm.github.io",
        "readme_summary": "Persepolis Download Manager is a free and open-source download manager written in Python, supporting multi-segment downloads, scheduling, and queuing. It is available for GNU/Linux, BSDs, macOS, and Windows, and can download videos from platforms like YouTube.",
        "key_features": [
            "Multi-segment downloading (64 connections)",
            "Scheduling downloads",
            "Download queuing",
            "Downloading videos from Youtube and ..."
        ],
        "primary_use_case": "Managing and accelerating file downloads from the internet.",
        "open_issues": 297,
        "cover_image_prompt": "A skilled librarian meticulously organizing streams of data flowing from the internet into neatly labeled shelves. The librarian uses a special tool to divide large data streams into smaller, manageable segments, ensuring efficient storage. A digital display shows download queues and schedules. The library is filled with glowing particles representing data packets. The repository name, 'Persepolis,' is subtly inscribed on the main archway. The scene is set in a futuristic library with warm, inviting lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 120967092,
        "name": "auto-py-to-exe",
        "description": "Converts .py to .exe using a simple graphical interface ",
        "url": "https://github.com/brentvollebregt/auto-py-to-exe",
        "language": "JavaScript",
        "stars": 4675,
        "forks": 782,
        "created_at": "2018-02-09T23:32:35Z",
        "updated_at": "2025-10-26T10:04:22Z",
        "topics": [
            "automation",
            "bundle",
            "executable",
            "package",
            "py2exe",
            "pyinstaller",
            "python",
            "python-to-exe"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-10-17T05:27:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/fb98043963a8b576fb7e56fcd37f36dcdc9b03a2fd2bbf619ca5694aed103272/brentvollebregt/auto-py-to-exe"
        ],
        "homepage": "",
        "readme_summary": "Auto PY to EXE is a tool that converts Python scripts (.py) into executable files (.exe) using a graphical user interface. It leverages PyInstaller to bundle the script and its dependencies into a single executable, making it easier to distribute Python applications to users who may not have Python installed.",
        "key_features": [
            "GUI for converting .py to .exe",
            "Uses PyInstaller",
            "Supports Python 3.6-3.12",
            "Installable via PyPI or GitHub",
            "Cross-platform (Windows, Linux, macOS)"
        ],
        "primary_use_case": "Converting Python scripts into executable files for easy distribution.",
        "open_issues": 2,
        "cover_image_prompt": "A skilled craftsman in a workshop meticulously assembling a complex clockwork mechanism. The mechanism represents a Python script, with gears and springs symbolizing code and dependencies. The craftsman carefully places the finished mechanism into a gleaming, protective case, representing the executable file. Small screens display lines of Python code and the Auto PY to EXE logo subtly integrated into the workshop. The scene is bathed in warm, inviting light, creating a sense of accomplishment and ease. The composition is focused and clean, with a clear visual hierarchy. The image should be in a detailed 3D isometric illustration style with vibrant colors."
    },
    {
        "id": 933691861,
        "name": "Notemod",
        "description": "Note-Taking App Free & Open Source",
        "url": "https://github.com/orayemre/Notemod",
        "language": "HTML",
        "stars": 332,
        "forks": 20,
        "created_at": "2025-02-16T13:31:01Z",
        "updated_at": "2025-10-26T09:15:44Z",
        "topics": [
            "free",
            "git",
            "html",
            "javascript",
            "note-taking",
            "notes",
            "open-source"
        ],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2025-03-22T03:37:53Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/933691861/bbc23ff4-da2b-42bd-bed7-3c30e58cdc61"
        ],
        "homepage": "https://app-notemod.blogspot.com/",
        "readme_summary": "Notemod is a free and open-source note-taking application designed for simplicity and accessibility. It offers features like easy note-taking, rich text editing, task creation, data synchronization via GitHub Gist, local data storage with export/import options, and offline access, catering to students, professionals, and creative thinkers.",
        "key_features": [
            "Easy Note-Taking",
            "Creating Tasks",
            "Rich Text Editor",
            "Synchronization",
            "Save All Your Data",
            "Open-Source Freedom",
            "Offline Access"
        ],
        "primary_use_case": "Personal note-taking and task management with data synchronization and offline access.",
        "open_issues": 4,
        "cover_image_prompt": "A librarian meticulously organizing thoughts represented as glowing orbs into labeled jars on shelves. The librarian uses a special stylus to capture fleeting ideas from the air, which then transform into these orbs. A nearby desk displays a small UI screen showing a note-taking interface with text formatting options. The shelves are subtly labeled with categories like 'Ideas,' 'Tasks,' and 'Projects.' The scene is set in a cozy, well-lit study with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 837861367,
        "name": "ascii-flix",
        "description": "Ascii Flix is a terminal-based video player that transforms videos into ASCII art for a unique viewing experience. Perfect for nostalgic or minimalistic users who want to enjoy their media in the most basic form possible.",
        "url": "https://github.com/Saad1926Q/ascii-flix",
        "language": "Python",
        "stars": 18,
        "forks": 1,
        "created_at": "2024-08-04T09:01:16Z",
        "updated_at": "2025-10-25T23:03:30Z",
        "topics": [],
        "quality_score": 0.4,
        "contributors_count": 0,
        "last_commit_date": "2024-08-07T14:11:07Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6398a6b5a9d16daf445b11e70596018356a5d16a9390ffef7de943ecb865d4a0/Saad1926Q/ascii-flix"
        ],
        "homepage": null,
        "readme_summary": "ASCII Flix is a Python-based terminal video player that converts video frames into ASCII art. It allows users to watch videos in a unique, minimalistic way directly within their terminal, supporting both normal and filled ASCII modes and extracting audio using pygame.",
        "key_features": [
            "Convert video frames into ASCII art",
            "Supports both normal and filled ASCII modes",
            "Extract and play audio using pygame"
        ],
        "primary_use_case": "Watching videos in the terminal as ASCII art.",
        "open_issues": 1,
        "cover_image_prompt": "An artist sitting in front of a vintage computer, painting a movie scene onto the screen using ASCII characters. The artist holds a digital brush that emits streams of ASCII symbols, meticulously forming the image on the terminal. A film reel sits beside the computer, representing the video input. The screen displays a recognizable movie scene rendered entirely in ASCII art. Small UI elements showing the 'ascii-flix' logo and code snippets are subtly integrated into the computer's interface. The scene is set in a dimly lit, cozy room with a nostalgic atmosphere. The image should be in a digital painting style with clear outlines and a warm color scheme."
    },
    {
        "id": 945084456,
        "name": "flip-on-fail",
        "description": "Turn your boring errors into expressive outbursts (╯°□°)╯︵ ┻━┻",
        "url": "https://github.com/markets/flip-on-fail",
        "language": "JavaScript",
        "stars": 13,
        "forks": 0,
        "created_at": "2025-03-08T16:14:50Z",
        "updated_at": "2025-10-25T23:01:36Z",
        "topics": [
            "ascii",
            "error-handling",
            "error-messages",
            "fun",
            "table-flip",
            "vibe-coding"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-09-08T08:50:40Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8415c2adddbc47917feca7147811a1a109452313053ae4e3a39f070066a841a7/markets/flip-on-fail"
        ],
        "homepage": "https://www.npmjs.com/package/flip-on-fail",
        "readme_summary": "Flip On Fail is a JavaScript package that enhances error messages by adding fun, expressive prefixes, such as the table flip ASCII art. It can be installed via npm or yarn and used in both browser and Node.js environments to make debugging more entertaining.",
        "key_features": [
            "Adds a default table flip ASCII art prefix to error messages.",
            "Allows customization of the error message prefix.",
            "Provides methods to enable and disable the error flipping functionality.",
            "Works with both standard `Error` objects and `console.error` calls."
        ],
        "primary_use_case": "Adding humor and expressiveness to error messages during development and debugging.",
        "open_issues": 0,
        "cover_image_prompt": "A jester juggling error messages, each represented as a small table. As the jester drops a table, it flips over dramatically, revealing the default table flip ASCII art (╯°□°)╯︵ ┻━┻. The jester wears a cap with the `flip-on-fail` logo subtly stitched on. UI elements like console logs and error stacks float around the jester as bubbles. The scene is set in a brightly lit, whimsical coding environment. The composition is clean and focused, using a vibrant color scheme. The image should be in a flat design style with clear iconography."
    },
    {
        "id": 944991825,
        "name": "krep",
        "description": "Fast text search tool with advanced algorithms, SIMD acceleration, multi-threading, and regex support. Designed for rapid, large-scale pattern matching with memory-mapped I/O and hardware optimizations.",
        "url": "https://github.com/davidesantangelo/krep",
        "language": "C",
        "stars": 423,
        "forks": 18,
        "created_at": "2025-03-08T12:01:29Z",
        "updated_at": "2025-10-25T19:43:18Z",
        "topics": [
            "c",
            "cli",
            "hardware-acceleration",
            "search-algorithm",
            "searching"
        ],
        "quality_score": 0.7000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-05-15T07:11:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/783335ac741ceef456ba281b6ad72370a990c16dc7738e0d9a13c686b6c7478c/davidesantangelo/krep"
        ],
        "homepage": "",
        "readme_summary": "Krep is a high-performance string search utility written in C, designed for speed and efficiency when processing large files and directories. It offers multiple search algorithms, SIMD acceleration, memory-mapped I/O, and multi-threading to maximize throughput.",
        "key_features": [
            "Multiple search algorithms (Boyer-Moore-Horspool, KMP, Aho-Corasick)",
            "SIMD acceleration (SSE4.2, AVX2, NEON)",
            "Memory-mapped I/O",
            "Multi-threaded search",
            "Regex support (POSIX Extended Regular Expression)",
            "Multiple pattern search",
            "Recursive directory search",
            "Colored output",
            "Specialized algorithms for short patterns",
            "Match Limiting"
        ],
        "primary_use_case": "Rapid, large-scale pattern matching in files and directories.",
        "open_issues": 3,
        "cover_image_prompt": "Imagine a skilled cartographer swiftly charting a vast, uncharted territory. The cartographer uses a specialized lens to quickly identify and mark specific patterns on the map, representing important resources. The lens emits beams of light that highlight the matching patterns. The territory is filled with complex terrain, symbolizing large files and directories. Small UI elements show search parameters and results. The repository name, 'krep,' is subtly etched onto the cartographer's tools. The scene is set in a brightly lit, futuristic mapping center. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    }
]