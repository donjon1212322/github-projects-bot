[
    {
        "id": 940335168,
        "name": "wify",
        "description": "Quickly connect to WiFi by scanning text, no typing needed",
        "url": "https://github.com/yilinjuang/wify",
        "language": "TypeScript",
        "stars": 55,
        "forks": 1,
        "created_at": "2025-02-28T02:05:28Z",
        "updated_at": "2025-03-21T09:08:26Z",
        "topics": [
            "ocr",
            "qrcode",
            "wifi"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-03-18T05:14:41Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f3b5382f2208571b3fc4dddf1acba879e4662d31bd764ec78af1cff21ebbc8f3/yilinjuang/wify"
        ],
        "homepage": "",
        "readme_summary": "Wify is a React Native application designed to simplify WiFi connection. It uses OCR to extract WiFi credentials from images or camera input, matches them with nearby networks, and automatically connects. This eliminates the need to manually search for and type in network names and passwords, especially useful in environments with complex WiFi setups.",
        "key_features": [
            "Text Recognition (OCR) for WiFi credentials",
            "Image Picker for importing WiFi information from gallery",
            "WiFi Network Scanning",
            "Fuzzy Matching of extracted credentials with available networks",
            "WiFi Connection to matched networks",
            "Permission Handling for camera and location access",
            "Multi-language Support for OCR"
        ],
        "primary_use_case": "Quickly connect to WiFi networks by scanning text containing WiFi credentials, eliminating the need for manual SSID and password entry.",
        "open_issues": 0,
        "cover_image_prompt": "A friendly robot barista in a bustling cafe, effortlessly scanning a crumpled napkin with handwritten Wi-Fi credentials using its built-in camera. The robot then seamlessly connects a diverse group of patrons to the cafe's Wi-Fi. UI elements displaying Wi-Fi network names and connection status subtly float around the robot. The cafe is filled with people happily working on laptops and tablets. The repository name, 'Wify,' is subtly displayed on the robot's apron. The scene is brightly lit and inviting. The image should be in a flat design style with clear iconography and vibrant colors."
    },
    {
        "id": 343756919,
        "name": "timer",
        "description": "Time Tracker/网费很贵, to be the best time tracker for browsers",
        "url": "https://github.com/sheepzh/timer",
        "language": "TypeScript",
        "stars": 438,
        "forks": 22,
        "created_at": "2021-03-02T11:52:11Z",
        "updated_at": "2025-03-21T09:16:47Z",
        "topics": [
            "edge-extension",
            "time-tracker",
            "time-tracker-extension",
            "time-tracking"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T04:01:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/f35449c874aa343076c1ddc8c3fa7c89f19345b230c4a22cd444057cce95fecf/sheepzh/timer"
        ],
        "homepage": "https://www.wfhg.cc",
        "readme_summary": "Time Tracker is a browser extension that monitors the time users spend on various websites. It provides data visualization and reporting features, enabling users to analyze their browsing habits and identify time-wasting activities. The extension supports multiple browsers, including Chrome, Edge, and Firefox, and offers features like page blocking to enhance productivity.",
        "key_features": [
            "Website time tracking",
            "Browser extension support (Chrome, Edge, Firefox)",
            "Data visualization and reporting",
            "Habit analysis",
            "Page blocking"
        ],
        "primary_use_case": "Tracking time spent on websites to improve productivity and understand browsing habits.",
        "open_issues": 10,
        "cover_image_prompt": "A diligent clockmaker meticulously crafting time gears within a browser window. The clockmaker uses website data streams as raw material, shaping them into precise time logs and insightful reports displayed on nearby screens. Small UI elements and code snippets subtly connect the clockmaking process to software. The scene is set in a bright, organized workshop with a clean, focused composition. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 676934005,
        "name": "niri",
        "description": "A scrollable-tiling Wayland compositor.",
        "url": "https://github.com/YaLTeR/niri",
        "language": "Rust",
        "stars": 6367,
        "forks": 213,
        "created_at": "2023-08-10T10:53:14Z",
        "updated_at": "2025-03-21T10:10:36Z",
        "topics": [
            "rust",
            "smithay",
            "tiling-window-manager",
            "wayland",
            "wayland-compositor"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T07:37:37Z",
        "media_urls": [
            "https://opengraph.githubassets.com/191556b1f7f860eb5b6602fcfc2852a6232f073c6888106c6826bf84b6fd775f/YaLTeR/niri"
        ],
        "homepage": "https://matrix.to/#/#niri:matrix.org",
        "readme_summary": "Niri is a Wayland compositor that utilizes a scrollable tiling approach, arranging windows in columns on an infinite strip. It features dynamic workspaces, built-in screenshot UI, screencasting capabilities, touchpad/mouse gestures, and extensive customization options, making it a stable and feature-rich option for daily use.",
        "key_features": [
            "Scrollable tiling window management",
            "Dynamic workspaces",
            "Built-in screenshot UI",
            "Monitor and window screencasting with blocking",
            "Touchpad and mouse gestures",
            "Window tabs",
            "Configurable layout (gaps, borders, sizes)",
            "Gradient borders",
            "Animations with custom shaders",
            "Live-reloading config"
        ],
        "primary_use_case": "A Wayland compositor focused on scrollable tiling window management, providing a stable and customizable desktop environment.",
        "open_issues": 114,
        "cover_image_prompt": "Imagine a skilled architect designing a city where buildings (windows) are neatly arranged in long, scrollable rows on multiple platforms (monitors). The architect effortlessly rearranges these structures, adding new buildings without disrupting the existing layout. Digital blueprints float around, subtly displaying code snippets and UI elements. The scene is bathed in soft, ambient light, creating a sense of order and efficiency. The composition is clean and focused, with a balanced color scheme. The image should be in a 3D isometric illustration style with crisp details and vibrant colors."
    },
    {
        "id": 564975433,
        "name": "wa-tunnel",
        "description": "Tunneling Internet traffic over Whatsapp",
        "url": "https://github.com/aleixrodriala/wa-tunnel",
        "language": "JavaScript",
        "stars": 2202,
        "forks": 98,
        "created_at": "2022-11-12T00:38:12Z",
        "updated_at": "2025-03-21T09:48:35Z",
        "topics": [],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2022-11-27T00:39:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7af7cca670c06b6bb217410260f08ae64b5e686cf4313929381d65bc7574185a/aleixrodriala/wa-tunnel"
        ],
        "homepage": null,
        "readme_summary": "The wa-tunnel repository enables TCP tunneling over the Whatsapp network using the Baileys library. It sends TCP packets as text or file messages, caches responses, and uses Brotli compression to optimize performance and reduce data usage. This is particularly useful for bypassing network restrictions where Whatsapp data is unlimited.",
        "key_features": [
            "TCP Tunneling through Whatsapp",
            "Uses Baileys library for Whatsapp communication",
            "Sends TCP packets as text or file messages",
            "Caches TCP socket responses to improve performance",
            "Brotli compression for data reduction"
        ],
        "primary_use_case": "Tunneling internet traffic through Whatsapp, especially useful in situations with restricted network access but unlimited Whatsapp data.",
        "open_issues": 9,
        "cover_image_prompt": "A skilled messenger pigeon, representing WhatsApp, carrying encrypted scrolls (TCP packets) between two towering castles (client and server). The pigeon flies through a network of glowing digital threads, symbolizing the internet connection. One castle is under siege (restricted network), while the other is a secure fortress (open internet). Small UI elements on the castles display real-time data transfer and encryption keys. The scene is set in a stylized, fantastical landscape with a clear, focused composition. The image should be in 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 234798675,
        "name": "bevy",
        "description": "A refreshingly simple data-driven game engine built in Rust",
        "url": "https://github.com/bevyengine/bevy",
        "language": "Rust",
        "stars": 38540,
        "forks": 3793,
        "created_at": "2020-01-18T21:13:55Z",
        "updated_at": "2025-03-21T10:11:38Z",
        "topics": [
            "bevy",
            "game-development",
            "game-engine",
            "gamedev",
            "open-source",
            "rust"
        ],
        "quality_score": 1.05,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T02:15:37Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/234798675/18016580-dab2-11ea-9864-452f7149499c"
        ],
        "homepage": "https://bevyengine.org",
        "readme_summary": "Bevy is a data-driven game engine built in Rust, designed for both 2D and 3D game development. It emphasizes simplicity, modularity, and performance, utilizing an Entity Component System (ECS) architecture. Bevy aims to provide a productive and enjoyable development experience with fast compile times.",
        "key_features": [
            "Capable 2D and 3D feature set",
            "Simple and easy to use",
            "Data-oriented architecture (ECS)",
            "Modular design",
            "Fast performance",
            "Productive development experience"
        ],
        "primary_use_case": "Game engine development",
        "open_issues": 2140,
        "cover_image_prompt": "A skilled architect meticulously constructing a grand cathedral using modular building blocks. Each block represents a different feature of the game engine, easily snapping into place to form a complete structure. The architect consults blueprints displaying both 2D and 3D designs, ensuring seamless integration. Subtle digital elements like glowing code snippets and UI overlays are projected onto the blocks, connecting the physical construction to software development. The scene is set in a bright, airy workshop with a focus on precision and creativity. The image should be in 3D isometric illustration style with clean lines, vibrant colors, and a sense of organized complexity."
    },
    {
        "id": 479289739,
        "name": "rerun",
        "description": "Visualize streams of multimodal data. Free, fast, easy to use, and simple to integrate. Built in Rust.",
        "url": "https://github.com/rerun-io/rerun",
        "language": "Rust",
        "stars": 7967,
        "forks": 416,
        "created_at": "2022-04-08T07:30:05Z",
        "updated_at": "2025-03-21T09:53:27Z",
        "topics": [
            "computer-vision",
            "cpp",
            "multimodal",
            "python",
            "robotics",
            "rust",
            "visualization"
        ],
        "quality_score": 1.2000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T09:53:23Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/479289739/0ff52438-b538-432f-b72c-270c1284922f"
        ],
        "homepage": "https://rerun.io/",
        "readme_summary": "Rerun is a visualization tool and data stack for multimodal data, offering SDKs in C++, Python, and Rust. It allows users to log and visualize data streams like images, point clouds, and text in real-time. The tool also provides a dataframe API for querying logged data, making it suitable for robotics, AI, and other data-intensive applications.",
        "key_features": [
            "Multimodal data visualization",
            "SDKs for C++, Python, and Rust",
            "Live data streaming",
            "Dataframe API for querying logged data"
        ],
        "primary_use_case": "Visualizing streams of multimodal data for robotics, AI, and other applications.",
        "open_issues": 1210,
        "cover_image_prompt": "Imagine a skilled cartographer meticulously charting a vast, ever-changing landscape of data streams. The cartographer uses specialized tools to capture images, point clouds, and text, transforming them into a dynamic, interactive map displayed on a holographic table. The map reveals hidden patterns and insights within the data, guiding explorers through complex information landscapes. Subtle code snippets and UI elements float around the scene, connecting the cartographer's work to the digital realm. The scene is bathed in soft, ethereal light, creating a sense of wonder and discovery. Rendered in a detailed 3D isometric illustration style."
    },
    {
        "id": 220588935,
        "name": "nezha",
        "description": ":trollface: Self-hosted, lightweight server and website monitoring and O&M tool",
        "url": "https://github.com/nezhahq/nezha",
        "language": "Go",
        "stars": 8430,
        "forks": 1404,
        "created_at": "2019-11-09T04:01:45Z",
        "updated_at": "2025-03-21T08:25:08Z",
        "topics": [
            "monitoring",
            "monitoring-tool",
            "system"
        ],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-03-20T15:49:25Z",
        "media_urls": [
            "https://opengraph.githubassets.com/77f042c5d1ea99ef22317b353f6af95a16e071f3252d641ba28fd3933cb88594/nezhahq/nezha"
        ],
        "homepage": "https://nezha.wiki",
        "readme_summary": "Nezha is a self-hosted, lightweight monitoring tool designed for servers and websites. It provides comprehensive monitoring capabilities, including system status, HTTP/TCP services, and ping, along with push alerts and scheduled task execution. Additionally, it offers a web terminal for convenient server management.",
        "key_features": [
            "System status monitoring",
            "HTTP monitoring (SSL certificate)",
            "TCP monitoring",
            "Ping monitoring",
            "Push alerts",
            "Scheduled tasks",
            "Web terminal"
        ],
        "primary_use_case": "Server and website monitoring and operations & maintenance (O&M).",
        "open_issues": 12,
        "cover_image_prompt": "Imagine a diligent gardener tending to a vibrant network of interconnected plants, each representing a server or website. The gardener uses a watering can labeled 'Nezha' to nourish the plants, monitoring their health with a tablet displaying real-time data like sunlight levels and water intake. Some plants have small screens attached, showing website uptime and response times. A gentle breeze carries digital particles that visualize data flowing between the plants and the tablet. The scene is set in a futuristic greenhouse with soft, diffused lighting. The image should be in a 3D isometric illustration style with clear details and a calming color palette."
    },
    {
        "id": 828119367,
        "name": "repomix",
        "description": "📦 Repomix (formerly Repopack) is a powerful tool that packs your entire repository into a single, AI-friendly file. Perfect for when you need to feed your codebase to Large Language Models (LLMs) or other AI tools like Claude, ChatGPT, DeepSeek, Perplexity, Gemini, Gemma, Llama, Grok, and more.",
        "url": "https://github.com/yamadashy/repomix",
        "language": "TypeScript",
        "stars": 13503,
        "forks": 584,
        "created_at": "2024-07-13T07:11:32Z",
        "updated_at": "2025-03-21T09:55:17Z",
        "topics": [
            "ai",
            "anthropic",
            "artificial-intelligence",
            "chatbot",
            "chatgpt",
            "claude",
            "deepseek",
            "developer-tools",
            "devtools",
            "gemini",
            "genai",
            "generative-ai",
            "gpt",
            "javascript",
            "language-model",
            "llama",
            "llm",
            "nodejs",
            "openai",
            "typescript"
        ],
        "quality_score": 1.2000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-03-20T16:10:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/76c236cfe47192995e0946be7b523bc2fa40face72992338f7d844566826ce6c/yamadashy/repomix"
        ],
        "homepage": "https://repomix.com",
        "readme_summary": "Repomix is a tool for packing entire code repositories into single, AI-friendly files, optimized for use with LLMs. It offers features like token counting, customizable inclusion/exclusion, Git awareness, security checks via Secretlint, and code compression using Tree-sitter. The tool can be used via a CLI or through a website.",
        "key_features": [
            "AI-Optimized formatting",
            "Token Counting",
            "Simple to Use CLI",
            "Customizable inclusion/exclusion",
            "Git-Aware (respects .gitignore)",
            "Security-Focused (Secretlint integration)",
            "Code Compression (Tree-sitter)"
        ],
        "primary_use_case": "Packing an entire code repository into a single, AI-friendly file for use with Large Language Models (LLMs).",
        "open_issues": 57,
        "cover_image_prompt": "A skilled librarian meticulously organizing a chaotic collection of books (code files) into a single, neatly bound volume. The librarian uses a special tool that extracts the essence of each book, ensuring only the most important information is preserved. The finished volume glows with a soft, AI-friendly light. Subtle UI elements float around the scene, displaying token counts and code snippets. The repository name, 'Repomix,' is subtly etched on the librarian's desk. The scene is set in a bright, modern library with a clean, focused composition. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]