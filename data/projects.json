[
    {
        "id": 429870498,
        "name": "researcher-webextension",
        "description": "WebExtension to full-text search your bookmarks.",
        "url": "https://github.com/andots/researcher-webextension",
        "language": "TypeScript",
        "stars": 14,
        "forks": 1,
        "created_at": "2021-11-19T16:48:27Z",
        "updated_at": "2025-04-29T09:24:09Z",
        "topics": [
            "bookmarks",
            "elasticsearch",
            "fulltext-search",
            "preact",
            "react",
            "search",
            "webextension"
        ],
        "quality_score": 0.15,
        "contributors_count": 0,
        "last_commit_date": "2021-12-10T17:37:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7dd386b31a679fb46100f54af9907e87e7320a4ce2addc118afced3508876aaf/andots/researcher-webextension"
        ],
        "homepage": "",
        "readme_summary": "RE:SEARCHER is a web extension that transforms your browser bookmarks into a personal, full-text searchable knowledge base. It leverages Elasticsearch for powerful querying, supports multiple languages, and saves all data locally. Features include content extraction, syntax highlighting, flexible search results, and organization tools like 'Read Later' and star ratings.",
        "key_features": [
            "Full-text search of bookmarks powered by Elasticsearch",
            "Multilingual index/search support",
            "Bookmarks saved locally",
            "Browser extension for easy bookmarking",
            "Content extraction and simple page view",
            "Auto syntax highlighting for code snippets",
            "Flexible search results UI",
            "Read Later functionality",
            "Favorite star rank for bookmarks",
            "Video bookmark filtering and playback"
        ],
        "primary_use_case": "Personal search engine for bookmarks, enabling full-text search and organization.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a librarian meticulously organizing a vast collection of books, each representing a bookmarked webpage. The librarian uses a magical magnifying glass that highlights keywords and phrases within the books, instantly categorizing and indexing them. A holographic display shows search queries and results appearing as constellations of related books. Subtle UI elements float around the scene, displaying bookmark titles and URLs. The scene is set in a bright, airy library with a futuristic design. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 867344664,
        "name": "dockerify-android",
        "description": "A Dockerized Android emulator supporting multiple CPU architectures (x86 and arm64) with native performance and seamless ADB & Scrcpy Web access.",
        "url": "https://github.com/Shmayro/dockerify-android",
        "language": "Dockerfile",
        "stars": 75,
        "forks": 5,
        "created_at": "2024-10-03T22:12:45Z",
        "updated_at": "2025-04-29T07:33:08Z",
        "topics": [
            "android",
            "android-emulator",
            "ci-pipline",
            "docker",
            "docker-android",
            "magisk",
            "root-android",
            "rooted-android",
            "scrcpy-android",
            "scrcpy-web"
        ],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-04-22T22:14:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/79a29f1896c614d35c0e7f8a0319cf2ee335a6f27d30757e576ba4bef8681291/Shmayro/dockerify-android"
        ],
        "homepage": "",
        "readme_summary": "Dockerify Android provides a Dockerized Android emulator with support for multiple CPU architectures, offering native performance and seamless ADB & Web access. It enables developers to efficiently run Android virtual devices within Docker containers, facilitating scalable testing and development. Key features include a web interface, root access, Magisk, GAPPS, ADB access, scrcpy support, and optimized performance.",
        "key_features": [
            "Web Interface (scrcpy-web)",
            "Root and Magisk Preinstalled",
            "PICO GAPPS Preinstalled",
            "Seamless ADB Access",
            "scrcpy Support",
            "Optimized Performance",
            "Multi-Architecture Support (x86 and arm64)",
            "Docker Integration",
            "Easy Setup",
            "Supervisor Management",
            "Unified Container Logs"
        ],
        "primary_use_case": "Running Android emulators in Docker containers for scalable testing and development environments.",
        "open_issues": 1,
        "cover_image_prompt": "A skilled mechanic in a high-tech garage, tuning up a sleek, transparent Android robot. The robot's internal components are visible, showcasing its x86 and arm64 CPU architectures. The mechanic uses a tablet displaying ADB commands and a web browser showing the scrcpy-web interface. Digital wrenches and glowing data streams float around the robot, enhancing its performance. The garage is clean and well-lit, with Docker logos subtly integrated into the background. The image should be in 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 35326040,
        "name": "rtop",
        "description": "rtop is an interactive, remote system monitoring tool based on SSH",
        "url": "https://github.com/rapidloop/rtop",
        "language": "Go",
        "stars": 2155,
        "forks": 160,
        "created_at": "2015-05-09T11:24:54Z",
        "updated_at": "2025-04-29T10:11:32Z",
        "topics": [
            "cli",
            "monitoring",
            "ssh"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2022-06-06T14:35:54Z",
        "media_urls": [
            "https://opengraph.githubassets.com/4b0fadef404ceeb4a52947145adb9bce0e25df9e40a0b52528660880ae09567f/rapidloop/rtop"
        ],
        "homepage": null,
        "readme_summary": "rtop is a remote system monitoring tool that connects to Linux systems over SSH to display vital performance metrics like CPU, disk, memory, and network usage. It requires no special software on the remote system, making it easy to use. The tool is designed for users who need to monitor system performance remotely via a command-line interface.",
        "key_features": [
            "Remote system monitoring over SSH",
            "Displays vital system metrics (CPU, disk, memory, network)",
            "No special software needed on the remote system (only SSH server)",
            "Works on Linux systems"
        ],
        "primary_use_case": "Remotely monitoring Linux systems' performance metrics via SSH.",
        "open_issues": 16,
        "cover_image_prompt": "A seasoned explorer perched atop a towering mountain peak, gazing through a high-powered telescope at distant, miniature servers scattered across a vast landscape. The telescope's lens displays real-time system metrics (CPU, memory, network) overlaid on the server images. The explorer's backpack is adorned with the 'rtop' logo, subtly glowing with digital particles. The scene is bathed in the warm light of dawn, creating a sense of discovery and control. Small UI elements float around the explorer, showing command-line interfaces and data visualizations. The image should be in a 3D isometric illustration style with rich details and vibrant colors, emphasizing clarity and ease of understanding."
    },
    {
        "id": 786649962,
        "name": "adBlitz",
        "description": "AdBlitz automatically skips skippable ads and accelerates non-skippable ones, ensuring you enjoy uninterrupted content seamlessly. Remember, it's not an *ad blocker*;",
        "url": "https://github.com/dikshantrajput/adBlitz",
        "language": "HTML",
        "stars": 63,
        "forks": 4,
        "created_at": "2024-04-15T03:22:13Z",
        "updated_at": "2025-04-29T09:32:07Z",
        "topics": [
            "addon",
            "chrome-extension",
            "edge-extension",
            "extension",
            "firefox-extension",
            "hacktoberfest",
            "hacktoberfest-accepted",
            "opera-extension",
            "youtube-video",
            "youtube-videos"
        ],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2024-04-30T03:50:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8239971f25bc969306cdaffd3c599cad9ce5768476b180f951436adb07733a3d/dikshantrajput/adBlitz"
        ],
        "homepage": "https://ad-blitz.vercel.app/",
        "readme_summary": "AdBlitz is a browser extension designed to enhance the YouTube viewing experience by automatically skipping skippable ads and speeding up non-skippable ones. It operates seamlessly in the background, providing a lightweight and user-friendly solution for uninterrupted content consumption. The extension is compatible with Chromium-based browsers and Firefox.",
        "key_features": [
            "Automatic Skipping of skippable ads",
            "Acceleration of non-skippable ads",
            "Handling of multiple ads",
            "Background operation",
            "Lightweight and user-friendly design"
        ],
        "primary_use_case": "Automatically skipping skippable ads and accelerating non-skippable ads on YouTube to provide an uninterrupted viewing experience.",
        "open_issues": 2,
        "cover_image_prompt": "A traffic controller orchestrating a smooth flow of YouTube video streams, represented by colorful, stylized cars. The controller effortlessly waves away ad-filled cars (represented by cars covered in billboards) while accelerating the remaining content-filled cars (sleek, futuristic vehicles) to their destination. A subtle UI overlay shows the AdBlitz logo and a simplified 'skip' button. The scene is set in a vibrant, stylized cityscape with glowing digital elements. The composition is clean and focused with a bright, optimistic color scheme. The image should be in a flat design style with clear iconography and bold colors."
    },
    {
        "id": 203456148,
        "name": "bunkerweb",
        "description": "🛡️ Open-source and next-generation Web Application Firewall (WAF)",
        "url": "https://github.com/bunkerity/bunkerweb",
        "language": "Python",
        "stars": 7879,
        "forks": 450,
        "created_at": "2019-08-20T21:20:48Z",
        "updated_at": "2025-04-29T09:55:25Z",
        "topics": [
            "antibot",
            "bunkerized-nginx",
            "cybersecurity",
            "devops",
            "devsecops",
            "dnsbl",
            "docker",
            "hardening",
            "hosting",
            "kubernetes",
            "letsencrypt",
            "modsecurity",
            "nginx",
            "reverse-proxy",
            "security",
            "security-tuning",
            "swarm",
            "waf",
            "web-application-firewall",
            "web-security"
        ],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-03-14T16:35:56Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/203456148/d91b56bf-1da8-4023-a1b2-056c20ce3a2d"
        ],
        "homepage": "https://www.bunkerweb.io",
        "readme_summary": "BunkerWeb is an open-source Web Application Firewall (WAF) built on NGINX, designed to secure web services by default. It integrates seamlessly with various environments like Docker and Kubernetes and offers extensive configurability through a web UI or CLI. Its core security features can be extended using a plugin system, making cybersecurity more accessible.",
        "key_features": [
            "Web Application Firewall (WAF)",
            "NGINX-based web server",
            "Integration with Linux, Docker, Swarm, and Kubernetes",
            "Configurable via web UI or CLI",
            "Plugin system for extending security features"
        ],
        "primary_use_case": "Protecting web services and applications with a next-generation Web Application Firewall.",
        "open_issues": 77,
        "cover_image_prompt": "A skilled blacksmith forging a glowing web shield in a high-tech workshop. The blacksmith carefully hammers digital code onto the shield, making it stronger and more resilient. Incoming cyberattacks, represented by fiery arrows, bounce harmlessly off the shield. Small screens display real-time security metrics and threat analysis. The workshop is clean and well-lit, with subtle hints of server racks and network cables. The image should be in a detailed digital painting style with a focus on vibrant colors and dynamic lighting, emphasizing the shield's protective qualities."
    },
    {
        "id": 122541171,
        "name": "OpenCV-Face-Recognition",
        "description": "Real-time face recognition project with OpenCV and Python",
        "url": "https://github.com/Mjrovai/OpenCV-Face-Recognition",
        "language": "Python",
        "stars": 1266,
        "forks": 1026,
        "created_at": "2018-02-22T22:08:18Z",
        "updated_at": "2025-04-29T07:30:35Z",
        "topics": [],
        "quality_score": 0.25,
        "contributors_count": 0,
        "last_commit_date": "2018-02-23T19:52:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/89eb5cc24ec71ddeaa715c6f6923ad505ce16d5d8f17643bd6d50a5bc682cd55/Mjrovai/OpenCV-Face-Recognition"
        ],
        "homepage": null,
        "readme_summary": "This repository provides a real-time face recognition solution implemented in Python using OpenCV. It enables developers to build applications that can identify faces in video streams. The project offers an end-to-end implementation for face recognition tasks.",
        "key_features": [
            "Real-time face recognition",
            "OpenCV integration",
            "Python implementation"
        ],
        "primary_use_case": "Real-time face recognition applications",
        "open_issues": 24,
        "cover_image_prompt": "A skilled sculptor meticulously carving faces from blocks of stone, each face gradually becoming recognizable. The sculptor uses a digital chisel that emits glowing particles, subtly shaping the features based on a live video feed displayed on a nearby screen. Completed faces are displayed on a gallery wall, showcasing the recognition accuracy. The scene is set in a bright, modern workshop with a clean, focused composition. Small UI elements and code snippets are subtly incorporated as background details. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 863050120,
        "name": "fastrtc",
        "description": "The python library for real-time communication",
        "url": "https://github.com/gradio-app/fastrtc",
        "language": "JavaScript",
        "stars": 3795,
        "forks": 328,
        "created_at": "2024-09-25T16:19:19Z",
        "updated_at": "2025-04-29T10:03:28Z",
        "topics": [
            "artificial-intelligence",
            "llm",
            "python",
            "real-time",
            "speech-to-text",
            "text-to-speech"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-23T20:23:32Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b018847feaa8858ab0ba85e03c0af2fbfe5bd7be3feb2d8e2c7b3c66045866fa/gradio-app/fastrtc"
        ],
        "homepage": "https://fastrtc.org/",
        "readme_summary": "FastRTC is a Python library that simplifies the creation of real-time communication applications. It allows developers to easily convert Python functions into audio and video streams accessible via WebRTC or WebSockets. The library offers features like automatic voice detection, UI generation, and support for telephone communication, making it easy to build interactive applications.",
        "key_features": [
            "Automatic Voice Detection and Turn Taking",
            "Automatic UI generation with Gradio",
            "Automatic WebRTC Support",
            "Websocket Support",
            "Telephone Support",
            "Customizable backend with FastAPI"
        ],
        "primary_use_case": "Turning Python functions into real-time audio and video streams over WebRTC or WebSockets.",
        "open_issues": 37,
        "cover_image_prompt": "A skilled conductor leading an orchestra where each instrument represents a different data stream (audio, video, text). The conductor's baton controls the flow and synchronization of these streams, creating a harmonious real-time communication experience. Subtle UI elements float around the orchestra, displaying code snippets and connection statuses. The scene is set in a modern, minimalist concert hall with soft, warm lighting. The image should be in a clean, flat design style with clear iconography and vibrant colors, reminiscent of a modern tech company's branding."
    },
    {
        "id": 950726152,
        "name": "DeepMesh",
        "description": "Official code of DeepMesh: Auto-Regressive Artist-mesh Creation with Reinforcement Learning",
        "url": "https://github.com/zhaorw02/DeepMesh",
        "language": "Python",
        "stars": 544,
        "forks": 24,
        "created_at": "2025-03-18T15:41:03Z",
        "updated_at": "2025-04-29T09:26:17Z",
        "topics": [
            "3d",
            "aigc",
            "dpo",
            "generative-model",
            "llm",
            "mesh",
            "mesh-generation",
            "point-cloud"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-04-23T04:37:46Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d60d6b878db27fbe13511b775ed0b764f96b0da2cd28574693d930f87a62ce90/zhaorw02/DeepMesh"
        ],
        "homepage": "https://zhaorw02.github.io/DeepMesh/",
        "readme_summary": "DeepMesh is a framework for generating 3D meshes from point cloud data. It uses an auto-regressive transformer model trained with reinforcement learning to create high-quality meshes. The repository provides pretrained weights and optimized inference code for efficient mesh generation.",
        "key_features": [
            "Auto-regressive mesh generation",
            "Reinforcement learning based mesh creation",
            "Point cloud conditioned mesh generation",
            "Pretrained weights available",
            "Optimized inference code"
        ],
        "primary_use_case": "Generating high-quality 3D meshes from point cloud data using an auto-regressive transformer model.",
        "open_issues": 6,
        "cover_image_prompt": "Imagine a skilled sculptor meticulously crafting a 3D mesh statue from a cloud of raw clay particles. The sculptor uses advanced tools that subtly display code snippets and data visualizations, guiding the mesh's form with precision. The statue gradually takes shape, revealing intricate details and artistic flair. The scene is set in a bright, modern studio with soft, diffused lighting, emphasizing the transformation from raw data to refined art. The composition is clean and focused, highlighting the sculptor's expertise. The image should be in a 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 378100758,
        "name": "Robyn",
        "description": "Robyn is a Super Fast Async Python Web Framework with a Rust runtime.",
        "url": "https://github.com/sparckles/Robyn",
        "language": "Python",
        "stars": 5735,
        "forks": 288,
        "created_at": "2021-06-18T09:32:00Z",
        "updated_at": "2025-04-29T09:58:25Z",
        "topics": [
            "async",
            "backend",
            "hacktoberfest",
            "http-server",
            "python",
            "python3",
            "rust",
            "web"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-27T13:00:31Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/378100758/db6b06c0-4523-46fd-871d-fc5f670ada37"
        ],
        "homepage": "https://robyn.tech/",
        "readme_summary": "Robyn is a fast, community-driven Python web framework that leverages a Rust runtime for high performance. It provides an easy-to-use API for defining routes and handling asynchronous requests. Robyn is designed to be innovator-friendly and supports Python versions 3.9 and above.",
        "key_features": [
            "High-performance web framework",
            "Asynchronous request handling",
            "Rust runtime",
            "Community-driven",
            "Easy installation via pip or conda",
            "Simple API definition",
            "Support for Python >= 3.9"
        ],
        "primary_use_case": "Building high-performance, asynchronous web applications with Python and a Rust runtime.",
        "open_issues": 137,
        "cover_image_prompt": "Imagine a bustling kitchen where a skilled chef, representing Robyn, effortlessly juggles multiple sizzling pans, each labeled with web request types like 'GET', 'POST', 'PUT'. The chef swiftly plates each dish, symbolizing the fast processing of requests, and serves them to a diverse crowd of happy customers, representing users. Subtle tech elements are integrated: a digital timer displays response times, and a nearby screen shows a simplified code snippet. The kitchen is clean and modern, bathed in warm, inviting light. The illustration is in a vibrant, 3D isometric style, emphasizing speed and efficiency."
    }
]