[
    {
        "id": 258967860,
        "name": "Graphite",
        "description": "2D vector & raster editor that melds traditional layers & tools with a modern node-based, non-destructive, procedural workflow.",
        "url": "https://github.com/GraphiteEditor/Graphite",
        "language": "Rust",
        "stars": 14993,
        "forks": 677,
        "created_at": "2020-04-26T07:29:29Z",
        "updated_at": "2025-06-30T10:12:35Z",
        "topics": [
            "2d-graphics",
            "art",
            "compositor",
            "design",
            "graphic-design",
            "graphics-editor",
            "image-generation",
            "image-manipulation",
            "image-processing",
            "node-editor",
            "node-graph",
            "photo-editing",
            "photo-editor",
            "procedural",
            "procedural-art",
            "procedural-drawing",
            "svg-editor",
            "vector-editor"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-06-30T10:07:09Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/258967860/10e3a8b4-f1af-4c0c-aa7e-aae3f62b9ad2"
        ],
        "homepage": "https://graphite.rs",
        "readme_summary": "Graphite is a free, open-source 2D graphics editor that combines traditional layer-based editing with a modern node-based procedural workflow. It aims to be an all-in-one graphics toolbox, supporting vector and raster editing, photo editing, motion graphics, and more, built around a core node graph for non-destructive editing.",
        "key_features": [
            "2D vector and raster graphics editing",
            "Node-based, non-destructive, procedural workflow",
            "Layer-based compositing",
            "All-in-one graphics toolbox",
            "Support for photo editing, motion graphics, digital painting, desktop publishing, and VFX compositing"
        ],
        "primary_use_case": "2D content creation with a focus on procedural and non-destructive workflows.",
        "open_issues": 272,
        "cover_image_prompt": "An artist's studio where a sculptor is meticulously crafting a statue from clay. Instead of traditional tools, the sculptor uses a node-based interface projected onto a holographic screen. Each node represents a different sculpting action, and connecting them creates intricate details on the statue. The statue itself seamlessly blends vector and raster elements, showcasing the editor's versatility. Small UI elements float around the statue, displaying parameters and adjustments. The scene is bathed in soft, ambient light, creating a sense of creative flow. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 915496499,
        "name": "HomeDockOS",
        "description": "An intuitive, versatile, and powerful home server operating system for self-hosting. Featuring a curated app store and seamless multi-platform support, it’s designed to empower your personal cloud on Raspberry Pi, x86 systems, or your preferred setup.",
        "url": "https://github.com/BansheeTech/HomeDockOS",
        "language": "Vue",
        "stars": 66,
        "forks": 2,
        "created_at": "2025-01-12T01:54:45Z",
        "updated_at": "2025-06-30T06:03:52Z",
        "topics": [
            "api",
            "cloud",
            "cloud-application",
            "cloud-os",
            "docker",
            "docker-compose",
            "docker-desktop",
            "home-server",
            "homedock",
            "homelab",
            "personal-cloud",
            "python",
            "raspberry",
            "raspberry-pi",
            "self-hosting",
            "selfhosted",
            "typescript",
            "vue3",
            "vuejs"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-06-26T00:53:57Z",
        "media_urls": [
            "https://opengraph.githubassets.com/00bfc4f1e70ce88cecb73f9200277c46a8fe6218160791e87df364ea6fbc9bde/BansheeTech/HomeDockOS"
        ],
        "homepage": "https://www.homedock.cloud",
        "readme_summary": "HomeDock OS is a versatile home server operating system designed for self-hosting. It offers an intuitive app store, seamless multi-platform support, and prioritizes privacy and control. It allows users to easily manage their personal cloud on devices like Raspberry Pi and x86 systems.",
        "key_features": [
            "Universal Compatibility across OS and architectures",
            "Privacy by Design for secure data management",
            "Seamless Integration with web-based access",
            "One-click app installation via App Store",
            "SSL-Ready Deployments for secure connections",
            "Effortless Log Management through Control Hub",
            "Advanced Backup Options (Cloud Exclusive)"
        ],
        "primary_use_case": "Self-hosting applications and managing a personal cloud on various platforms (Raspberry Pi, x86 systems, etc.)",
        "open_issues": 0,
        "cover_image_prompt": "A conductor orchestrating a diverse ensemble of devices (Raspberry Pi, laptop, phone) playing in harmony. Each device displays a different application, all seamlessly managed from a central, glowing control panel. The conductor's baton emits streams of data, visually connecting the devices and the control panel. Subtle UI elements float around the scene, hinting at the underlying software. The background shows a stylized cloudscape. The scene is set in a modern, minimalist studio with soft, diffused lighting. The image should be in 3D isometric illustration style with vibrant colors and clean lines."
    },
    {
        "id": 743825398,
        "name": "ruoyi-ai",
        "description": "RuoYi AI 是一个全栈式 AI 开发平台，旨在帮助开发者快速构建和部署个性化的 AI 应用。",
        "url": "https://github.com/ageerle/ruoyi-ai",
        "language": "Java",
        "stars": 3387,
        "forks": 811,
        "created_at": "2024-01-16T04:16:41Z",
        "updated_at": "2025-06-30T10:05:46Z",
        "topics": [
            "agent",
            "ai",
            "knowledge",
            "mcp",
            "rag"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-27T02:45:32Z",
        "media_urls": [
            "https://opengraph.githubassets.com/d90924c9e16aed403c8ac9488d12e703d36274584e791039c1c7cc8b6fdd9c9f/ageerle/ruoyi-ai"
        ],
        "homepage": "https://web.pandarobot.chat",
        "readme_summary": "RuoYi AI is a full-stack AI development platform designed to help developers quickly build and deploy personalized AI applications. It offers features such as a localized RAG solution, multi-modal AI engine support, Spring AI MCP integration, and various enterprise-level extensions like instant messaging and payment system integrations. It also includes innovative functionalities like AI painting and PPT generation.",
        "key_features": [
            "Full-stack open-source system",
            "Localized RAG solution (Langchain4j, Milvus/Weaviate/Qdrant, BGE-large-zh-v1.5)",
            "Multi-modal AI engine (OpenAI, Azure, ChatGLM, DIFY)",
            "Spring AI MCP support",
            "Instant messaging integration (WeChat, Enterprise WeChat)",
            "Payment system integration (EasyPay, WeChat Pay, Stripe)",
            "AI painting (DALL·E-3, MidJourney, Stable Diffusion)",
            "PPT generation"
        ],
        "primary_use_case": "Rapid development and deployment of personalized AI applications.",
        "open_issues": 5,
        "cover_image_prompt": "A skilled artisan in a brightly lit workshop, crafting personalized AI assistants from raw data and algorithms. The artisan carefully shapes digital clay on a workbench, with glowing code snippets and knowledge graphs subtly embedded in the clay. Finished AI assistants, each with unique interfaces and capabilities, stand proudly on display shelves. The workshop is filled with tools and materials, representing the various components of the AI platform. The scene is set in a clean, modern environment with a focus on creativity and innovation. Small screens display real-time performance metrics and user feedback. The image should be in 3D isometric illustration style with vibrant colors and rich details."
    },
    {
        "id": 992618065,
        "name": "pyleak",
        "description": "Detect leaked asyncio tasks, threads, and event loop blocking with stack trace in Python. Inspired by goleak.",
        "url": "https://github.com/deepankarm/pyleak",
        "language": "Python",
        "stars": 239,
        "forks": 2,
        "created_at": "2025-05-29T12:52:48Z",
        "updated_at": "2025-06-30T09:43:53Z",
        "topics": [
            "asyncio",
            "eventloop",
            "leak-detection",
            "python",
            "threads"
        ],
        "quality_score": 0.7999999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-09T07:45:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/39733df373397f9aab0bed5ed4a55f8ac10504c631b54e4ea34eb66d71828324/deepankarm/pyleak"
        ],
        "homepage": "https://pypi.org/project/pyleak/",
        "readme_summary": null,
        "key_features": [],
        "primary_use_case": null,
        "open_issues": 4,
        "cover_image_prompt": null
    },
    {
        "id": 26600712,
        "name": "gloomy-dungeons-2",
        "description": "Gloomy Dungeons II - a continuation of old-school 3d-shooter.",
        "url": "https://github.com/restorer/gloomy-dungeons-2",
        "language": "Java",
        "stars": 112,
        "forks": 43,
        "created_at": "2014-11-13T18:07:03Z",
        "updated_at": "2025-06-30T05:35:48Z",
        "topics": [
            "android",
            "engine3d",
            "game",
            "wolf",
            "wolf3d"
        ],
        "quality_score": 0.35,
        "contributors_count": 0,
        "last_commit_date": "2020-07-02T17:43:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/51740e45b5cb00a76567e81f3cd0f8d96ce4f7d435d27518aeb30d6bc7d51849/restorer/gloomy-dungeons-2"
        ],
        "homepage": "http://mobile.zame-dev.org/gloomy-ii/",
        "readme_summary": null,
        "key_features": [],
        "primary_use_case": null,
        "open_issues": 2,
        "cover_image_prompt": null
    },
    {
        "id": 844305953,
        "name": "no-ocr",
        "description": "https://no-ocr.com/about",
        "url": "https://github.com/kyryl-opens-ml/no-ocr",
        "language": "TypeScript",
        "stars": 154,
        "forks": 20,
        "created_at": "2024-08-19T01:20:53Z",
        "updated_at": "2025-06-30T09:59:39Z",
        "topics": [],
        "quality_score": 0.9500000000000001,
        "contributors_count": 0,
        "last_commit_date": "2025-06-30T09:06:38Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b5703c2f7c32790263a50bb178d7f02fbcdb807869fa13a1a91618804dcb219d/kyryl-opens-ml/no-ocr"
        ],
        "homepage": "https://no-ocr.com/about",
        "readme_summary": "No OCR is a tool that simplifies AI-based PDF processing by allowing users to process and query PDF documents without OCR. It uses embeddings for text and visual queries, supports visual question-answering, and is deployable via Docker. The tool enables users to create and manage document collections, build Hugging Face datasets, and perform vector-based searches.",
        "key_features": [
            "Create and manage PDF/document collections",
            "Automated ingestion to build Hugging Face-style datasets",
            "Vector-based search over PDF pages in LanceDB",
            "Visual question-answering on images and diagrams via Qwen2-VL",
            "Deployable via Docker for both the backend (Python) and UI (React)"
        ],
        "primary_use_case": "Simplifying AI-based PDF processing by enabling text and visual queries without relying on OCR.",
        "open_issues": 0,
        "cover_image_prompt": "Imagine a librarian in a vast, sunlit library, not reading books, but observing intricate patterns forming within swirling clouds of colorful data particles emanating from the books. The librarian uses a magnifying glass that projects a holographic display, showing search queries and question-answering results related to the data patterns. Subtle UI elements float nearby, displaying document collections and AI model selections. The library is filled with glowing orbs representing embeddings. The scene is bathed in warm, inviting light. This should be in a 3D isometric illustration style with soft, vibrant colors and a focus on clarity and understanding."
    },
    {
        "id": 735441880,
        "name": "OpenTune",
        "description": "Un cliente de YouTube Music con Material Design 3, para Android",
        "url": "https://github.com/Arturo254/OpenTune",
        "language": "Kotlin",
        "stars": 596,
        "forks": 39,
        "created_at": "2023-12-25T00:23:00Z",
        "updated_at": "2025-06-30T10:08:32Z",
        "topics": [
            "client",
            "material-design-3",
            "open-source",
            "opspec",
            "youtube-api",
            "youtube-music-api",
            "youtubemusic"
        ],
        "quality_score": 0.6499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-06-29T23:18:47Z",
        "media_urls": [
            "https://opengraph.githubassets.com/98d7ca478eab63cae66bf0fda97658e62fe01d013cf01b2fcfce68a7429799a8/Arturo254/OpenTune"
        ],
        "homepage": "https://opentune.netlify.app/",
        "readme_summary": null,
        "key_features": [],
        "primary_use_case": null,
        "open_issues": 117,
        "cover_image_prompt": null
    }
]