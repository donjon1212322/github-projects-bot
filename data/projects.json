[
    {
        "id": 1027858102,
        "name": "hellpaper",
        "description": "Wallpaper picker for Linux",
        "url": "https://github.com/danihek/hellpaper",
        "language": "C",
        "stars": 65,
        "forks": 0,
        "created_at": "2025-07-28T16:31:41Z",
        "updated_at": "2025-08-01T09:27:13Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-28T21:11:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/eb24f6064127c9ac515955088e5b1678eb765990befc42032437848260b4e0de/danihek/hellpaper"
        ],
        "homepage": null,
        "readme_summary": "Hellpaper is a wallpaper picker for Linux that offers multiple animated layouts, live search, and full-screen preview capabilities. It allows users to easily select and apply wallpapers with GPU-accelerated effects and complete customization through a configuration file.",
        "key_features": [
            "Multiple Layouts (Grid, Horizontal River, Vertical River, Wave)",
            "Live Search",
            "Full-Screen Preview",
            "GPU-Accelerated Effects",
            "Total Customization via .conf file"
        ],
        "primary_use_case": "Wallpaper selection and application on Linux systems.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a skilled artisan meticulously selecting vibrant threads from a vast collection to weave a breathtaking tapestry onto a Linux desktop. The artisan carefully examines each thread (wallpaper), using a magnifying glass (full-screen preview) to appreciate its detail. Digital particles swirl around the artisan, subtly displaying configuration options and layout choices (Grid, River, Wave) on holographic screens. The scene is set in a sunlit workshop filled with spools of colorful threads. The image should be in a 3D isometric illustration style with rich textures and a warm, inviting color palette."
    },
    {
        "id": 931352845,
        "name": "prompt-optimizer",
        "description": "一款提示词优化器，助力于编写高质量的提示词",
        "url": "https://github.com/linshenkx/prompt-optimizer",
        "language": "TypeScript",
        "stars": 11815,
        "forks": 1433,
        "created_at": "2025-02-12T06:06:49Z",
        "updated_at": "2025-08-01T09:57:40Z",
        "topics": [
            "llm",
            "prompt",
            "prompt-engineering",
            "prompt-optimization",
            "prompt-toolkit",
            "prompt-tuning"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-28T13:14:52Z",
        "media_urls": [
            "https://opengraph.githubassets.com/a927c46614dcc4122e3a473d75f31281aab38ecc00493751fc4d9957eedd0acc/linshenkx/prompt-optimizer"
        ],
        "homepage": "https://prompt.always200.com",
        "readme_summary": "Prompt Optimizer is a tool designed to help users write better AI prompts, leading to improved AI output quality. It offers features such as intelligent optimization, A/B testing, multi-model integration, and multi-platform support. The tool can be used as a web application, desktop application, Chrome extension, or via Docker deployment.",
        "key_features": [
            "Intelligent prompt optimization with multi-round iterative improvement",
            "Dual-mode optimization for system and user prompts",
            "Real-time A/B testing for comparing original and optimized prompts",
            "Integration with multiple AI models (OpenAI, Gemini, DeepSeek, etc.)",
            "Client-side processing for enhanced data security",
            "Multi-platform support (Web, Desktop, Chrome Extension, Docker)",
            "Password protection for secure deployments",
            "MCP protocol support for integration with MCP-compatible applications"
        ],
        "primary_use_case": "Optimizing prompts for large language models to improve the quality and accuracy of AI-generated content.",
        "open_issues": 11,
        "cover_image_prompt": "A skilled prompt engineer stands at a workbench, meticulously crafting and refining prompts represented as glowing orbs. These orbs are then fed into a large language model (LLM) depicted as a futuristic machine, which outputs high-quality, polished text. The workbench is surrounded by tools and monitors displaying metrics of prompt performance and optimization suggestions. The scene is set in a brightly lit, modern laboratory with a clean and organized aesthetic. The image should be in a 3D isometric illustration style with vibrant colors and clear details, subtly incorporating the 'Prompt Optimizer' logo."
    },
    {
        "id": 25129800,
        "name": "gallery-dl",
        "description": "Command-line program to download image galleries and collections from several image hosting sites",
        "url": "https://github.com/mikf/gallery-dl",
        "language": "Python",
        "stars": 14724,
        "forks": 1167,
        "created_at": "2014-10-12T19:38:05Z",
        "updated_at": "2025-08-01T09:46:11Z",
        "topics": [
            "danbooru",
            "deviantart",
            "downloader",
            "flickr",
            "gallery",
            "kemono",
            "mangadex",
            "pixiv",
            "tumblr",
            "twitter"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-01T05:48:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1683ba74a74e4a10b41d876871d1a2f570dc545c4a7a4e6e93b19726c15ef803/mikf/gallery-dl"
        ],
        "homepage": "",
        "readme_summary": "gallery-dl is a command-line tool designed for downloading image galleries and collections from numerous image hosting websites. It offers cross-platform support, extensive configuration options, and powerful filenaming features. The tool can be installed via various package managers and also provides standalone executable versions.",
        "key_features": [
            "Downloads image galleries and collections from various image hosting sites.",
            "Cross-platform compatibility.",
            "Configurable options.",
            "Powerful filenaming capabilities.",
            "Supports HLS/DASH video downloads via yt-dlp/youtube-dl.",
            "Offers standalone executable versions for Windows and Linux.",
            "Provides installation options via pip, Snap, Chocolatey, Scoop, Homebrew, MacPorts, and Docker."
        ],
        "primary_use_case": "Downloading image galleries and collections from various online sources for offline access and archival purposes.",
        "open_issues": 1004,
        "cover_image_prompt": "A skilled librarian meticulously curates a vast collection of digital images, each representing a different online gallery. The librarian uses a special tool resembling a magnifying glass that extracts and organizes images from various sources, placing them into neatly labeled folders. Subtle UI elements float around the librarian, displaying website logos and download progress bars. The scene is set in a modern, well-organized digital library with soft, ambient lighting. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    },
    {
        "id": 967530387,
        "name": "voltagent",
        "description": "Open Source TypeScript AI Agent Framework",
        "url": "https://github.com/VoltAgent/voltagent",
        "language": "TypeScript",
        "stars": 2564,
        "forks": 237,
        "created_at": "2025-04-16T15:41:18Z",
        "updated_at": "2025-08-01T10:12:56Z",
        "topics": [
            "agents",
            "ai",
            "autogen",
            "chatbots",
            "framework",
            "javascript",
            "llm",
            "llm-observability",
            "mcp",
            "nodejs",
            "observability",
            "tts",
            "typescript"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-08-01T03:19:26Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0488e0b25b9d5a01957195c09c5dcbd9d05ef832e8a8b07d7564ee649ed9ae78/VoltAgent/voltagent"
        ],
        "homepage": "https://voltagent.dev",
        "readme_summary": "VoltAgent is an open-source TypeScript framework designed to simplify the development of AI agent applications. It provides modular building blocks, standardized patterns, and abstractions for creating chatbots, virtual assistants, and automated workflows. The framework supports multi-agent systems, workflow orchestration, tool integrations, data retrieval, memory, and is compatible with popular LLMs.",
        "key_features": [
            "Core Engine for defining individual agents",
            "Multi-Agent Systems orchestration",
            "Workflow Engine for multi-step automations",
            "Extensible Packages (e.g., voice interactions)",
            "Tooling & Integrations with external APIs and databases (MCP support)",
            "Data Retrieval & RAG implementation",
            "Memory for context-aware conversations",
            "LLM Compatibility"
        ],
        "primary_use_case": "Building and orchestrating AI agents for chatbots, virtual assistants, automated workflows, and complex multi-agent systems.",
        "open_issues": 32,
        "cover_image_prompt": "A skilled architect overseeing a team of tiny robots constructing a complex city of interconnected buildings, each representing an AI agent. The architect uses a blueprint (VoltAgent's framework) to guide the robots, ensuring seamless integration and efficient workflow. Some buildings glow with data streams, while others feature miniature tool icons. A subtle UI overlay displays agent communication logs. The scene is set in a bright, futuristic workshop with a clean, organized layout. The image should be in a 3D isometric illustration style with vibrant colors and sharp details, emphasizing clarity and interconnectedness."
    },
    {
        "id": 275258357,
        "name": "KDiskMark",
        "description": "A simple open-source disk benchmark tool for Linux distros",
        "url": "https://github.com/JonMagon/KDiskMark",
        "language": "C++",
        "stars": 1327,
        "forks": 52,
        "created_at": "2020-06-26T22:24:53Z",
        "updated_at": "2025-08-01T09:13:15Z",
        "topics": [
            "benchmarking",
            "cpp",
            "crystaldiskmark",
            "dbus",
            "disk",
            "drive",
            "linux",
            "polkit",
            "qt5",
            "ssd"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-06-21T11:33:11Z",
        "media_urls": [
            "https://opengraph.githubassets.com/c041160bf420d47e558cb13cdf534947dc9b6ee4d5c637aac959f5554a1b512a/JonMagon/KDiskMark"
        ],
        "homepage": "",
        "readme_summary": "KDiskMark is a user-friendly, open-source disk benchmarking tool for Linux. It provides a graphical interface to run benchmarks on HDDs and SSDs, leveraging Flexible I/O Tester (fio) for the actual testing. The tool allows users to configure test parameters and generates comprehensive, easy-to-interpret reports.",
        "key_features": [
            "Configurable block size, queues, and threads count for each test",
            "Many languages support",
            "Report generation"
        ],
        "primary_use_case": "HDD and SSD benchmarking on Linux systems.",
        "open_issues": 38,
        "cover_image_prompt": "A meticulous mechanic in a high-tech garage, fine-tuning a gleaming SSD drive on a workbench. The mechanic uses a holographic interface displaying performance metrics like speed and latency, adjusting virtual dials and levers. Data streams flow into the drive, visualized as glowing particles, and emerge as organized, efficient energy. The garage is clean and modern, with subtle UI elements showing benchmark results on nearby screens. The scene is brightly lit with a focus on clarity and precision. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 168555392,
        "name": "REFramework",
        "description": "Scripting platform, modding framework and VR support for all RE Engine games",
        "url": "https://github.com/praydog/REFramework",
        "language": "C++",
        "stars": 3903,
        "forks": 426,
        "created_at": "2019-01-31T16:17:50Z",
        "updated_at": "2025-08-01T09:02:23Z",
        "topics": [
            "cmkr",
            "cpp",
            "dmc5",
            "freecam",
            "lua",
            "mhrise",
            "modding",
            "mods",
            "monster-hunter-rise",
            "monster-hunter-wilds",
            "re-engine",
            "re2",
            "re3",
            "re4",
            "re7",
            "re8",
            "scripting",
            "sf6",
            "virtual-reality",
            "vr"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-13T00:18:24Z",
        "media_urls": [
            "https://opengraph.githubassets.com/72c07d37fadbeb823419725d003cecbd0712846857f3942f4df052c703b7632e/praydog/REFramework"
        ],
        "homepage": "https://cursey.github.io/reframework-book/",
        "readme_summary": "REFramework is a modding framework and scripting platform for RE Engine games, enabling users to create and install mods, add VR support, and implement custom scripts. It provides a Lua scripting API, VR support, and various in-game tools for developers and modders to enhance and modify the supported games.",
        "key_features": [
            "Lua Scripting API & Plugin System",
            "Generic 6DOF VR support",
            "First Person mod",
            "Free Camera",
            "Scene Timescale",
            "FOV Slider",
            "Ultrawide/Aspect Ratio fixes",
            "Game Objects Display",
            "Object Explorer"
        ],
        "primary_use_case": "Modding, scripting, and adding VR support to RE Engine games.",
        "open_issues": 416,
        "cover_image_prompt": "A skilled mechanic in a high-tech workshop, tuning and modifying a classic car (representing a game engine). The car is surrounded by holographic displays showing game code and VR interfaces. The mechanic uses a specialized wrench (REFramework) to install new parts and optimize the engine's performance, enhancing its capabilities with VR support, scripting tools, and various fixes. The workshop is brightly lit with a clean, futuristic aesthetic. The image should be in a detailed 3D isometric illustration style with vibrant colors and clear visual cues."
    },
    {
        "id": 998423454,
        "name": "BotCommander",
        "description": "🚀 BotCommander — это простой и удобный веб-интерфейс для управления множеством Python-ботов",
        "url": "https://github.com/RuinasHistori/BotCommander",
        "language": "Python",
        "stars": 7,
        "forks": 2,
        "created_at": "2025-06-08T15:24:51Z",
        "updated_at": "2025-08-01T08:22:11Z",
        "topics": [],
        "quality_score": 0.3,
        "contributors_count": 0,
        "last_commit_date": "2025-06-08T15:37:51Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ba2312de46dca358bcf4e83afa00a0dae637e31a9d1b8a5c241f3918b9fecadc/RuinasHistori/BotCommander"
        ],
        "homepage": "",
        "readme_summary": "BotCommander provides a web interface for managing multiple Python bots, each running in its own isolated environment. It allows users to monitor CPU/RAM usage, uptime, and control bot processes (start, stop, restart, disable). The system also displays overall system information.",
        "key_features": [
            "Web interface for managing Python bots",
            "Automatic startup of bots",
            "CPU, memory, and uptime monitoring",
            "Bot management (start, stop, restart, disable)",
            "System information display"
        ],
        "primary_use_case": "Managing and monitoring multiple Python bots through a web interface.",
        "open_issues": 0,
        "cover_image_prompt": "A conductor orchestrating a symphony of robots, each playing a different instrument. The conductor stands on a web interface podium, adjusting settings that control the robots' actions. Each robot is housed in its own glass enclosure, representing isolated environments. Small screens on the enclosures display CPU/RAM usage and uptime. The scene is set in a futuristic concert hall with glowing digital elements and subtle code snippets projected onto the walls. The composition is clean and focused with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    }
]