[
    {
        "id": 986669929,
        "name": "cpdown",
        "description": "ðŸ“¥ cpdown - Copy to clipboard any webpage content/youtube subtitle as clean markdown with one click or shortcut",
        "url": "https://github.com/ysm-dev/cpdown",
        "language": "TypeScript",
        "stars": 50,
        "forks": 5,
        "created_at": "2025-05-20T00:45:12Z",
        "updated_at": "2025-06-10T09:56:34Z",
        "topics": [
            "extension",
            "llm",
            "markdown",
            "productivity",
            "react",
            "subtitle",
            "wxt",
            "youtube"
        ],
        "quality_score": 0.9,
        "contributors_count": 0,
        "last_commit_date": "2025-06-09T00:36:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9035bafdf3ee14a18505e9f636f5a873e619247e6aa66ff95c7f8f31d61c251c/ysm-dev/cpdown"
        ],
        "homepage": "https://chromewebstore.google.com/detail/cpdown/knnaflplggjdedobhbidojmmnocfbopf",
        "readme_summary": "cpdown is a browser extension that allows users to copy webpage content and YouTube subtitles as clean, formatted markdown. It utilizes Defuddle or Mozilla's Readability to extract the main content, removes unnecessary HTML elements, and provides a token count for LLM applications. The extension supports keyboard shortcuts and offers configuration options for markdown cleanup and user notifications.",
        "key_features": [
            "Copy webpage content as clean markdown",
            "Copy YouTube subtitles as clean markdown",
            "Extract main content using Defuddle or Mozilla Readability",
            "Remove unnecessary HTML elements",
            "Show token count for LLM usage",
            "Keyboard shortcut support"
        ],
        "primary_use_case": "Copying webpage content and YouTube subtitles as clean markdown for various purposes, including use with LLMs.",
        "open_issues": 0,
        "cover_image_prompt": "A meticulous scribe in a brightly lit, modern library meticulously copying text from various sources (books, tablets, web pages displayed on floating screens) into a pristine digital notebook. The scribe uses a special quill that automatically formats the text into clean markdown. Small UI elements showing markdown syntax and token counts subtly float around the scene. The library has shelves filled with books on one side and glowing server racks on the other. The scene is bathed in soft, diffused light with a clean, focused composition. The image should be in a flat design style with clear iconography and a pastel color scheme."
    },
    {
        "id": 996971810,
        "name": "workwell",
        "description": "Straighten up your workday | Posture Monitoring using AirPods Motion Sensors",
        "url": "https://github.com/wizenheimer/workwell",
        "language": "Swift",
        "stars": 16,
        "forks": 1,
        "created_at": "2025-06-05T18:40:31Z",
        "updated_at": "2025-06-10T06:17:57Z",
        "topics": [],
        "quality_score": 0.55,
        "contributors_count": 0,
        "last_commit_date": "2025-06-05T22:24:00Z",
        "media_urls": [
            "https://opengraph.githubassets.com/0b7dea668ef200e64993c8d8475896d7bd12fc8b1698c03601fbb24046c06151/wizenheimer/workwell"
        ],
        "homepage": null,
        "readme_summary": "WorkWell is an iOS application that leverages AirPods motion sensors to monitor head posture in real-time. It provides real-time feedback and session tracking to help users improve their posture and build better work habits. The app detects poor posture based on head pitch thresholds and offers visual feedback to encourage users to maintain a healthy posture.",
        "key_features": [
            "Real-time head posture monitoring",
            "Posture quality detection based on head pitch thresholds",
            "Session tracking with historical posture data"
        ],
        "primary_use_case": "Monitoring and improving head posture during work using AirPods motion sensors.",
        "open_issues": 1,
        "cover_image_prompt": "An architect meticulously examining the posture of a miniature city skyline, ensuring each building stands tall and straight. The architect uses a high-tech monocle that displays real-time posture analysis, with subtle UI elements showing head pitch angles and thresholds. The city skyline represents a workday, and the buildings symbolize individual tasks. The scene is set in a bright, airy studio with blueprints and digital displays in the background. The repository name, 'WorkWell,' is subtly etched onto the architect's drafting table. The image should be in a clean, 3D isometric illustration style with a focus on clarity and detail."
    },
    {
        "id": 781022269,
        "name": "prompt-eng-interactive-tutorial",
        "description": "Anthropic's Interactive Prompt Engineering Tutorial",
        "url": "https://github.com/anthropics/prompt-eng-interactive-tutorial",
        "language": "Jupyter Notebook",
        "stars": 11665,
        "forks": 1058,
        "created_at": "2024-04-02T15:52:00Z",
        "updated_at": "2025-06-10T10:03:37Z",
        "topics": [],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2024-04-08T03:17:07Z",
        "media_urls": [
            "https://opengraph.githubassets.com/7f4fda54ba7c363607a4a2693461fc037277149198789af3655cbf3a94f9dd90/anthropics/prompt-eng-interactive-tutorial"
        ],
        "homepage": null,
        "readme_summary": "This repository provides an interactive tutorial for learning prompt engineering techniques specifically for Anthropic's Claude models. It offers a structured course with lessons, exercises, and an answer key to help users master prompt creation, troubleshoot common issues, and understand Claude's capabilities. The tutorial covers basic to advanced prompting techniques and includes practical examples for various use cases.",
        "key_features": [
            "Step-by-step understanding of prompt engineering for Claude.",
            "Mastering basic prompt structure.",
            "Recognizing and addressing common prompt failure modes.",
            "Understanding Claude's strengths and weaknesses.",
            "Building prompts for common use cases.",
            "Hands-on practice with exercises.",
            "Advanced methods in the appendix (Chaining Prompts, Tool Use, Search & Retrieval)."
        ],
        "primary_use_case": "Learning and practicing prompt engineering techniques for the Claude AI model.",
        "open_issues": 8,
        "cover_image_prompt": "A student sitting at a desk, illuminated by a glowing screen displaying lines of code that transform into a friendly, helpful robot. The robot is teaching the student about prompt engineering, pointing to a whiteboard filled with prompt structures and examples. Small UI elements and digital particles float around the scene, subtly connecting the metaphor to software. The setting is a cozy study with warm lighting. The image should be in a flat design style with clear iconography and vibrant colors."
    },
    {
        "id": 307843105,
        "name": "Win11Debloat",
        "description": "A simple, easy to use PowerShell script to remove pre-installed apps, disable telemetry, as well as perform various other changes to customize, declutter and improve your Windows experience. Win11Debloat works for both Windows 10 and Windows 11.",
        "url": "https://github.com/Raphire/Win11Debloat",
        "language": "PowerShell",
        "stars": 21210,
        "forks": 884,
        "created_at": "2020-10-27T22:26:59Z",
        "updated_at": "2025-06-10T10:03:14Z",
        "topics": [
            "automated",
            "bloatware",
            "bloatware-removal",
            "cleanup",
            "debloat",
            "debloater",
            "interactive",
            "optimize",
            "powershell",
            "powershell-script",
            "privacy",
            "ps1",
            "registry-tweaks",
            "tweaks",
            "windows",
            "windows-10",
            "windows-11",
            "windows-11-debloat",
            "windows10",
            "windows11"
        ],
        "quality_score": 0.8,
        "contributors_count": 0,
        "last_commit_date": "2025-06-08T21:12:42Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/307843105/7f6d3ccf-4876-4136-b59f-60507b934a0e"
        ],
        "homepage": "",
        "readme_summary": "Win11Debloat is a PowerShell script designed to simplify the process of decluttering and optimizing Windows 10 and 11. It removes pre-installed bloatware, disables telemetry, and removes intrusive interface elements. The script also offers advanced features for system administrators, such as Windows Audit mode support and the ability to make changes to other user accounts.",
        "key_features": [
            "Removes pre-installed bloatware apps",
            "Disables telemetry",
            "Removes intrusive interface elements",
            "Supports Windows Audit mode",
            "Allows changes to other Windows users",
            "Can run without user input during runtime"
        ],
        "primary_use_case": "Decluttering and optimizing Windows 10 and 11 by removing bloatware and disabling unnecessary features.",
        "open_issues": 28,
        "cover_image_prompt": "A meticulous gardener tending to a vibrant digital garden, carefully pruning away wilting leaves (representing bloatware) from healthy plants (representing essential Windows functions). The gardener uses glowing digital shears and a tablet displaying system performance metrics. Removed leaves transform into digital dust motes. The garden is set within a stylized computer case with glowing components. Small UI elements float in the air, showing the script's interface. The scene is brightly lit with a clean, focused composition and a pastel color scheme. The image should be in a flat design style with clear iconography."
    },
    {
        "id": 28652279,
        "name": "osrframework",
        "description": "OSRFramework, the Open Sources Research Framework is a AGPLv3+ project by i3visio focused on providing API and tools to perform more accurate online researches.",
        "url": "https://github.com/i3visio/osrframework",
        "language": "Python",
        "stars": 977,
        "forks": 253,
        "created_at": "2014-12-31T02:00:03Z",
        "updated_at": "2025-06-10T07:33:42Z",
        "topics": [
            "gnu-agplv3",
            "hacking",
            "internet",
            "investigations",
            "osint",
            "osrframework",
            "pypi",
            "python3",
            "social-networks",
            "user-management"
        ],
        "quality_score": 0.6000000000000001,
        "contributors_count": 0,
        "last_commit_date": "2021-11-24T04:07:10Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ca7d3052881e973e4fa3bf16c095e063b2afd5dbab574727b118713d84960da9/i3visio/osrframework"
        ],
        "homepage": "",
        "readme_summary": "OSRFramework is a suite of tools designed for Open Source Intelligence gathering. It provides functionalities for username checking, DNS lookups, information leak research, and more. The framework offers both command-line and web interfaces, as well as integration with Maltego for graphical analysis.",
        "key_features": [
            "Username checking",
            "DNS lookups",
            "Information leaks research",
            "Deep web search",
            "Regular expressions extraction",
            "Maltego transforms integration",
            "Web interface",
            "Console interface"
        ],
        "primary_use_case": "Open Source Intelligence (OSINT) collection",
        "open_issues": 78,
        "cover_image_prompt": "A detective meticulously piecing together a digital jigsaw puzzle, each piece representing a fragment of online information. The detective uses specialized tools that reveal hidden connections and insights within the data fragments. A large screen displays a world map with glowing lines connecting various points, symbolizing the global reach of the investigation. Small UI elements show search queries and data analysis results. The scene is set in a dimly lit, high-tech office with a focused atmosphere. The image should be in a digital painting style with clear outlines and a cool color scheme."
    }
]