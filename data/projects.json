[
    {
        "id": 983779325,
        "name": "ScrollSnap",
        "description": "A macOS app for capturing and stitching scrolling screenshots.",
        "url": "https://github.com/Brkgng/ScrollSnap",
        "language": "Swift",
        "stars": 79,
        "forks": 3,
        "created_at": "2025-05-14T22:53:22Z",
        "updated_at": "2025-05-24T09:13:08Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-05-19T19:00:55Z",
        "media_urls": [
            "https://opengraph.githubassets.com/9178ae5a88f3d9b0dde76233ac2fa38b847d378aaecf66d745a967415f814911/Brkgng/ScrollSnap"
        ],
        "homepage": null,
        "readme_summary": "ScrollSnap is a macOS application designed for capturing long, scrolling screenshots. It allows users to define a custom selection area, automatically stitches multiple screenshots together, and provides an interactive menu for capture, save, and reset options. The application offers a thumbnail preview and supports saving to various destinations, including the Desktop, Clipboard, and Preview.",
        "key_features": [
            "Customizable Selection Area",
            "Scrolling Capture",
            "Interactive Menu",
            "Thumbnail Preview",
            "Save Destinations",
            "Preferences"
        ],
        "primary_use_case": "Capturing and stitching scrolling screenshots on macOS.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled tailor meticulously stitching together long strips of fabric into a seamless tapestry. The tailor uses a high-tech sewing machine with a screen displaying a macOS interface and subtle code snippets. The strips of fabric represent individual screenshots, and the finished tapestry symbolizes the complete, stitched scrolling screenshot. The tailor's workshop is filled with spools of colorful thread and digital measuring tools. The scene is bathed in soft, diffused light, creating a sense of precision and artistry. The image should be in a detailed digital painting style with clear outlines and vibrant colors."
    },
    {
        "id": 920202654,
        "name": "codecafe",
        "description": "Real-time collaborative code editor built for the web",
        "url": "https://github.com/mrktsm/codecafe",
        "language": "TypeScript",
        "stars": 399,
        "forks": 15,
        "created_at": "2025-01-21T18:34:34Z",
        "updated_at": "2025-05-24T10:04:45Z",
        "topics": [
            "java",
            "liveshare",
            "ot",
            "react",
            "redis",
            "spring-boot",
            "websockets"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-22T23:41:50Z",
        "media_urls": [
            "https://opengraph.githubassets.com/4814b28f2e98ae774a1f67905f0a341d1ae4850a74eba637077b854b4bb4edab/mrktsm/codecafe"
        ],
        "homepage": "https://codecafe.app",
        "readme_summary": "CodeCafé is a real-time collaborative code editor designed for seamless, browser-based coding. It features live previews, operational transformation for conflict-free simultaneous editing, and a VS Code-like experience through the Monaco Editor. The platform requires zero setup, enabling instant collaboration for pair programming, teaching, and building web projects.",
        "key_features": [
            "Pixel-Perfect Live Preview",
            "True Real-Time Collaboration via Operational Transformation",
            "VS Code Feel with Monaco Editor",
            "Zero Setup, browser-based"
        ],
        "primary_use_case": "Real-time collaborative code editing for pair programming, teaching, and building web projects together.",
        "open_issues": 2,
        "cover_image_prompt": "Imagine a bustling café where developers collaborate seamlessly on a shared digital canvas. One developer sketches UI elements that instantly appear on a central screen, while another types code that magically compiles and runs in a live preview window. Digital coffee cups float around, symbolizing the collaborative energy. Small UI elements and code snippets are subtly integrated into the café's decor. The scene is bathed in warm, inviting light, fostering a sense of creativity and teamwork. The image should be in a 3D isometric illustration style with vibrant colors and crisp details."
    },
    {
        "id": 470730648,
        "name": "Hyprland",
        "description": "Hyprland is an independent, highly customizable, dynamic tiling Wayland compositor that doesn't sacrifice on its looks.",
        "url": "https://github.com/hyprwm/Hyprland",
        "language": "C++",
        "stars": 25575,
        "forks": 1084,
        "created_at": "2022-03-16T19:49:13Z",
        "updated_at": "2025-05-24T10:01:27Z",
        "topics": [
            "compositor",
            "cpp26",
            "wayland",
            "wayland-compositor"
        ],
        "quality_score": 1.0000000000000002,
        "contributors_count": 0,
        "last_commit_date": "2025-05-23T21:41:35Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/470730648/c4c69fe5-dc70-42b8-aae1-3a6d303656c0"
        ],
        "homepage": "https://hyprland.org",
        "readme_summary": "Hyprland is a dynamic tiling Wayland compositor written in C++ that prioritizes customization and visual appeal. It offers a range of features including gradient borders, blur, animations, plugin support, and dynamic workspaces. Hyprland aims to provide a modern and efficient desktop experience with a focus on flexibility and performance.",
        "key_features": [
            "Highly customizable",
            "Dynamic tiling",
            "Wayland compositor",
            "Eyecandy (gradient borders, blur, animations, shadows)",
            "Plugin support",
            "Built-in plugin manager",
            "Tearing support",
            "Config reloaded instantly",
            "Fully dynamic workspaces",
            "Window groups (tabbed mode)",
            "Socket-based IPC"
        ],
        "primary_use_case": "A highly customizable, dynamic tiling Wayland compositor for Linux desktops.",
        "open_issues": 42,
        "cover_image_prompt": "A skilled architect meticulously arranging dynamic, colorful tiles to construct a sleek, modern cityscape representing a highly customizable desktop environment. Each tile represents a window, seamlessly fitting together to form a harmonious and visually appealing whole. Subtle digital interfaces and glowing Wayland symbols are integrated into the buildings, hinting at the underlying technology. The scene is bathed in soft, vibrant lighting, creating a sense of innovation and elegance. The image should be in a 3D isometric illustration style with clean lines and a focus on clarity and visual appeal."
    },
    {
        "id": 931354511,
        "name": "pdf-craft",
        "description": "PDF craft can convert PDF files into various other formats. This project will focus on processing PDF files of scanned books.",
        "url": "https://github.com/oomol-lab/pdf-craft",
        "language": "Python",
        "stars": 2764,
        "forks": 160,
        "created_at": "2025-02-12T06:10:59Z",
        "updated_at": "2025-05-24T10:09:21Z",
        "topics": [
            "ai",
            "document",
            "ocr",
            "pdf"
        ],
        "quality_score": 1.1000000000000003,
        "contributors_count": 0,
        "last_commit_date": "2025-05-24T07:33:19Z",
        "media_urls": [
            "https://opengraph.githubassets.com/50608dae931077ade223b0b49433452a0a0a20d9dd7ec7b1a7fd756949d8d041/oomol-lab/pdf-craft"
        ],
        "homepage": "",
        "readme_summary": "PDF Craft is a Python library designed for converting PDF files, especially scanned books, into other formats like Markdown and EPUB. It utilizes OCR, layout analysis, and optionally LLMs to extract text, remove irrelevant elements, determine reading order, correct errors, and structure the content for improved readability and semantic coherence.",
        "key_features": [
            "PDF to Markdown conversion",
            "PDF to EPUB conversion with LLM enhancement",
            "Text extraction from scanned books",
            "Header, footer, footnote, and page number removal",
            "Reading order determination",
            "OCR error correction using LLM"
        ],
        "primary_use_case": "Converting scanned PDF books into Markdown or EPUB formats, particularly for books and documents requiring OCR and semantic structuring.",
        "open_issues": 24,
        "cover_image_prompt": "An old librarian meticulously transforming dusty, scanned PDF books into neatly organized digital scrolls. The librarian uses a magical lens that highlights text, removes imperfections, and rearranges the content into a readable format. Around the librarian, glowing particles of code subtly weave through the air, representing the AI algorithms at work. A small screen displays the 'pdf-craft' logo and a progress bar. The scene is set in a cozy, vintage library with warm, inviting lighting. The image should be in a digital painting style with clear outlines and rich details, evoking a sense of transformation and preservation."
    },
    {
        "id": 586248938,
        "name": "PairDrop",
        "description": "PairDrop: Transfer Files Cross-Platform. No Setup, No Signup.",
        "url": "https://github.com/schlagmichdoch/PairDrop",
        "language": "JavaScript",
        "stars": 7195,
        "forks": 412,
        "created_at": "2023-01-07T13:25:11Z",
        "updated_at": "2025-05-24T09:50:34Z",
        "topics": [
            "file-sharing",
            "indexeddb",
            "nodejs",
            "pwa",
            "webrtc",
            "websockets"
        ],
        "quality_score": 0.7,
        "contributors_count": 0,
        "last_commit_date": "2025-02-25T17:19:38Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/586248938/c9811030-0218-4046-9ef5-0f362e22a5e0"
        ],
        "homepage": "https://pairdrop.net",
        "readme_summary": "PairDrop is a web-based application for cross-platform file sharing, inspired by AirDrop and forked from Snapdrop. It allows users to transfer files between devices on the same local network or over the internet using paired devices or temporary public rooms. Key features include persistent device pairing, an improved UI, and the ability to send files directly from share menus, context menus, or the command line.",
        "key_features": [
            "Cross-platform file sharing",
            "Local network and internet transfers",
            "Persistent device pairing",
            "Temporary public rooms for file sharing",
            "Improved UI for sending/receiving files",
            "Directly send files from share menu, context menu or CLI"
        ],
        "primary_use_case": "Transferring files between devices on a local network or over the internet, regardless of the operating system.",
        "open_issues": 79,
        "cover_image_prompt": "A friendly postman, representing PairDrop, effortlessly delivering packages (files) between a modern smartphone and a sleek laptop. The smartphone displays a photo, while the laptop shows a document icon, symbolizing diverse file types. Digital particles subtly connect the devices, representing the seamless transfer. The background features a stylized local network with glowing nodes. The scene is bright and inviting, set in a minimalist, modern office. Small UI elements appear on the devices, subtly showing PairDrop's interface. The image should be in a flat design style with clear iconography and a vibrant color scheme, emphasizing ease of use and cross-platform compatibility."
    },
    {
        "id": 884056167,
        "name": "logocreator",
        "description": "A free + OSS logo generator powered by Flux on Together AI",
        "url": "https://github.com/Nutlope/logocreator",
        "language": "TypeScript",
        "stars": 5311,
        "forks": 473,
        "created_at": "2024-11-06T03:55:48Z",
        "updated_at": "2025-05-24T10:07:46Z",
        "topics": [],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2025-01-17T15:17:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/97f4031c86acf2bcd4374b69b967825b9466edd9c066a9a89f8500b5808387f3/Nutlope/logocreator"
        ],
        "homepage": "https://www.logo-creator.io/",
        "readme_summary": "The logocreator repository provides an open-source AI-powered logo generator. It allows users to create professional logos in seconds with customizable styles. The application uses Flux Pro on Together AI for logo generation, Next.js with TypeScript for the app framework, and integrates with services like Upstash Redis, Clerk, and Plausible for rate limiting, authentication, and analytics.",
        "key_features": [
            "AI-powered logo generation",
            "Customizable logo styles",
            "Open-source implementation",
            "Rate limiting",
            "User authentication",
            "Analytics and observability"
        ],
        "primary_use_case": "Generating professional logos quickly and easily using AI.",
        "open_issues": 10,
        "cover_image_prompt": "Imagine a skilled artisan meticulously crafting logos from raw ideas in a vibrant workshop. The artisan uses a magical forge that transforms abstract concepts into polished, professional logos. Sparks of creativity fly as the artisan shapes each logo, with subtle UI elements projected onto the walls showcasing the software interface. Finished logos, glowing with a digital aura, are displayed on a nearby screen. The workshop is filled with tools and materials, all hinting at the power of AI-driven design. The scene is bathed in warm, inviting light, creating a sense of innovation and artistry. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 657577902,
        "name": "background-removal-js",
        "description": "Remove backgrounds from images directly in the browser environment with ease and no additional costs or privacy concerns. Explore an interactive demo.",
        "url": "https://github.com/imgly/background-removal-js",
        "language": "TypeScript",
        "stars": 6528,
        "forks": 423,
        "created_at": "2023-06-23T11:20:08Z",
        "updated_at": "2025-05-24T10:07:18Z",
        "topics": [
            "background-removal",
            "image-matting",
            "image-segmentation",
            "javascript",
            "onnx",
            "open-source",
            "typescript"
        ],
        "quality_score": 0.75,
        "contributors_count": 0,
        "last_commit_date": "2025-03-21T11:48:29Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/657577902/a8dadd77-aff5-4240-972d-a98615cf52b2"
        ],
        "homepage": "https://img.ly/showcases/cesdk/web/background-removal/web",
        "readme_summary": "@imgly/background-removal is an npm package that allows developers to seamlessly remove backgrounds from images directly in the browser or Node.js. It offers a cost-effective solution without compromising data privacy, making it ideal for e-commerce, image editing, and web-based graphic design applications.",
        "key_features": [
            "Background removal in the browser",
            "Background removal in Node.js",
            "Cost-effective solution",
            "Data privacy"
        ],
        "primary_use_case": "Efficient and cost-effective background removal directly in the browser or Node.js for e-commerce, image editing, and web-based graphic design tools.",
        "open_issues": 63,
        "cover_image_prompt": "A skilled artist meticulously cutting out the background from a digital photograph of a vibrant cityscape, revealing a pristine white canvas behind it. The artist uses a glowing stylus that emits digital particles, precisely separating the foreground from the background. Small UI elements float around the artist, displaying background removal settings and code snippets. The scene is set in a modern, minimalist studio with soft, diffused lighting. The composition is clean and focused, highlighting the precision and ease of the background removal process. The image should be in a flat design style with clear iconography and a vibrant color scheme."
    }
]