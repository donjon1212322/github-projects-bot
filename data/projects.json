[
    {
        "id": 346639494,
        "name": "openvino_notebooks",
        "description": "📚 Jupyter notebook tutorials for OpenVINO™",
        "url": "https://github.com/openvinotoolkit/openvino_notebooks",
        "language": "Jupyter Notebook",
        "stars": 2788,
        "forks": 889,
        "created_at": "2021-03-11T09:01:13Z",
        "updated_at": "2025-05-18T09:37:04Z",
        "topics": [
            "computer-vision",
            "deep-learning",
            "inference",
            "machine-learning",
            "openvino"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-16T07:42:03Z",
        "media_urls": [
            "https://repository-images.githubusercontent.com/346639494/8d9be200-95fd-11eb-9cde-b0655d73f282"
        ],
        "homepage": "https://openvinotoolkit.github.io/openvino_notebooks/",
        "readme_summary": "The openvino_notebooks repository provides a collection of Jupyter notebooks designed to help users learn and experiment with the OpenVINO™ Toolkit. These notebooks offer an introduction to OpenVINO basics and demonstrate how to utilize the API for optimized deep learning inference. The repository includes installation guides for various operating systems and environments, making it accessible to a wide range of users.",
        "key_features": [
            "Ready-to-run Jupyter notebooks",
            "Introduction to OpenVINO basics",
            "Leveraging OpenVINO API for optimized deep learning inference",
            "Installation guides for various operating systems and environments (Windows, Ubuntu, macOS, Red Hat, CentOS, Azure ML, Docker, Amazon SageMaker)"
        ],
        "primary_use_case": "Learning and experimenting with the OpenVINO™ Toolkit for optimized deep learning inference.",
        "open_issues": 20,
        "cover_image_prompt": "Imagine a seasoned explorer, equipped with a high-tech magnifying glass, meticulously examining intricate maps spread across a vast table. These maps represent diverse deep learning models, and the explorer's glass highlights optimized pathways for efficient inference. Subtle digital overlays on the maps display OpenVINO code snippets and performance metrics. The scene is set in a warmly lit, futuristic library filled with scrolls of algorithms and glowing data streams. The illustration is in a detailed 3D isometric style, emphasizing clarity and precision, with a color scheme that blends earthy tones with vibrant digital accents. The explorer embodies the OpenVINO notebooks, guiding users to unlock the full potential of their models."
    },
    {
        "id": 667568594,
        "name": "quik",
        "description": "The most beautiful SMS messenger for Android - Revived",
        "url": "https://github.com/octoshrimpy/quik",
        "language": "Kotlin",
        "stars": 1273,
        "forks": 61,
        "created_at": "2023-07-17T20:06:54Z",
        "updated_at": "2025-05-18T09:03:29Z",
        "topics": [],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-30T03:19:35Z",
        "media_urls": [
            "https://opengraph.githubassets.com/e2a258fbe5b540d07a7ecf72a5eea2a186a6ebe66766c3969b05de75bb833732/octoshrimpy/quik"
        ],
        "homepage": "",
        "readme_summary": "QUIK is an open-source Android SMS messenger app that aims to provide a more feature-rich and customizable experience than the default messaging application. It offers features such as scheduled messages, message backup, speech-to-text integration, message blocking, voice messages, and support for various attachments, providing users with greater control and flexibility over their messaging.",
        "key_features": [
            "Scheduled Messages",
            "Message Backup",
            "Speech to Text and Text to Speech",
            "Message Blocking and Archiving",
            "Voice Messages",
            "Attachments of any type of file",
            "Message Sorting",
            "Delayed Sending"
        ],
        "primary_use_case": "Replacement for the stock messaging app on Android.",
        "open_issues": 156,
        "cover_image_prompt": "A skilled artisan meticulously crafting a beautiful, ornate SMS message within a digital workshop. The artisan uses a variety of tools, including a scheduler (represented by a clock icon), a backup archive (represented by a treasure chest), and a voice-to-text converter (represented by a microphone). The finished message glows with vibrant colors and intricate details, ready to be sent. The workshop is filled with subtle tech elements like floating data particles and UI screens showing message threads. The scene is set in a bright, airy studio with a focus on precision and artistry. The image should be in a 3D isometric illustration style with clean lines and a vibrant color palette."
    },
    {
        "id": 942312530,
        "name": "cocoindex",
        "description": "Real-time data transformation framework for AI. Ultra performant, with incremental processing.",
        "url": "https://github.com/cocoindex-io/cocoindex",
        "language": "Rust",
        "stars": 1295,
        "forks": 71,
        "created_at": "2025-03-03T23:03:09Z",
        "updated_at": "2025-05-18T10:09:48Z",
        "topics": [
            "ai",
            "change-data-capture",
            "data",
            "data-engineering",
            "data-indexing",
            "data-infrastructure",
            "data-processing",
            "dataflow",
            "etl",
            "help-wanted",
            "indexing",
            "knowledge-graph",
            "llm",
            "pipeline",
            "python",
            "rag",
            "real-time",
            "rust",
            "semantic-search",
            "streaming"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-18T05:21:58Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8c6504a0a9aa1691b0bbb7501408a0cb038197d55e810caad564649a22278c68/cocoindex-io/cocoindex"
        ],
        "homepage": "https://cocoindex.io",
        "readme_summary": "CocoIndex is a Rust-based data transformation framework designed for real-time AI data preparation. It utilizes a dataflow programming model and incremental processing to efficiently handle change data capture and automate data updates. This allows developers to easily create and maintain fresh data pipelines for applications like embeddings and knowledge graphs.",
        "key_features": [
            "Real-time data transformation",
            "Incremental processing",
            "Dataflow programming model",
            "Change data capture",
            "Automated data updates"
        ],
        "primary_use_case": "Preparing fresh data for AI applications such as creating embeddings, building knowledge graphs, and performing other data transformations.",
        "open_issues": 48,
        "cover_image_prompt": "Imagine a skilled chef in a bustling kitchen, effortlessly transforming raw ingredients flowing in from a conveyor belt into beautifully plated dishes ready to be served. The conveyor belt represents the continuous stream of data, and the chef embodies CocoIndex, expertly processing and refining the data. The plated dishes symbolize the AI-ready data, such as embeddings and knowledge graphs. Subtle UI elements on nearby screens display dataflow pipelines and transformation formulas. The kitchen is bright and modern, with a focus on efficiency and freshness. The image should be in a vibrant, 3D isometric illustration style with clear details and a focus on conveying the ease and speed of data transformation."
    },
    {
        "id": 926901987,
        "name": "LLMDog",
        "description": "LLMDog is a command-line tool that helps developers share code with Large Language Models like Claude and ChatGPT.",
        "url": "https://github.com/doganarif/LLMDog",
        "language": "Go",
        "stars": 65,
        "forks": 2,
        "created_at": "2025-02-04T03:49:20Z",
        "updated_at": "2025-05-18T09:47:56Z",
        "topics": [
            "ai",
            "artificial-intelligence",
            "chatgpt",
            "llm"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-03-19T01:40:05Z",
        "media_urls": [
            "https://opengraph.githubassets.com/b6f5aac94de8560585dd0e8ab02799c0cf5cb79b26f7fa9f6bd99295fe0d0662/doganarif/LLMDog"
        ],
        "homepage": "https://llmdog.arif.sh",
        "readme_summary": "LLMDog is a command-line tool that simplifies sharing code with LLMs like Claude and ChatGPT. It provides an interactive TUI for selecting relevant files and directories, automatically formats them into Markdown, and copies the output to the clipboard. LLMDog streamlines code discussions by allowing developers to share specific parts of their codebase with LLMs for assistance.",
        "key_features": [
            "Interactive TUI for file selection",
            "Recursive file and directory selection with gitignore support",
            "Markdown output with file tree and content",
            "Clipboard integration for quick sharing",
            "Cross-platform compatibility (macOS, Linux, Windows)"
        ],
        "primary_use_case": "Sharing code snippets with Large Language Models for code review, debugging, and implementation guidance.",
        "open_issues": 0,
        "cover_image_prompt": "A skilled artisan meticulously crafting code blocks from raw materials, shaping them into elegant structures. The artisan uses a specialized tool that extracts relevant code snippets, formats them beautifully, and sends them to a glowing AI oracle for guidance. The oracle responds with insights and suggestions, displayed on a nearby screen. The workshop is filled with subtle tech elements, such as floating file trees and glowing code particles. The scene is bathed in warm, inviting light, creating a sense of collaboration and innovation. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 72891330,
        "name": "ingress-nginx",
        "description": "Ingress NGINX Controller for Kubernetes",
        "url": "https://github.com/kubernetes/ingress-nginx",
        "language": "Go",
        "stars": 18543,
        "forks": 8381,
        "created_at": "2016-11-04T22:54:14Z",
        "updated_at": "2025-05-18T07:00:30Z",
        "topics": [
            "ingress-controller",
            "kubernetes",
            "nginx"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-05-12T15:09:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/2f9e44a3a759ca950f02c805d2464b38dc23f154f7de6265a8f24d16c6febb6b/kubernetes/ingress-nginx"
        ],
        "homepage": "https://kubernetes.github.io/ingress-nginx/",
        "readme_summary": "The ingress-nginx repository provides an Ingress controller for Kubernetes, leveraging NGINX as a reverse proxy and load balancer. It enables users to expose Kubernetes services to the outside world by routing external HTTP(S) traffic to the appropriate services within the cluster. This project assumes that users that can create Ingress objects are administrators of the cluster.",
        "key_features": [
            "Ingress controller for Kubernetes",
            "Uses NGINX as a reverse proxy and load balancer"
        ],
        "primary_use_case": "Routing external HTTP(S) traffic to Kubernetes services.",
        "open_issues": 342,
        "cover_image_prompt": "A skilled air traffic controller managing a complex network of airplanes, each representing a Kubernetes service, using a sophisticated NGINX control panel. The controller expertly directs incoming traffic (requests) to the appropriate services, ensuring smooth and efficient operation. The control panel displays real-time data visualizations of traffic flow and service health. Subtle digital elements, such as glowing network cables and UI screens showing Ingress rules, connect the metaphor to software. The scene is set in a futuristic control tower with bright, focused lighting. The image should be in a 3D isometric illustration style with clean lines and vibrant colors."
    },
    {
        "id": 10416648,
        "name": "bc-java",
        "description": "Bouncy Castle Java Distribution (Mirror)",
        "url": "https://github.com/bcgit/bc-java",
        "language": "Java",
        "stars": 2453,
        "forks": 1174,
        "created_at": "2013-06-01T02:38:42Z",
        "updated_at": "2025-05-17T21:54:01Z",
        "topics": [
            "crypto",
            "dtls",
            "java",
            "openpgp",
            "post-quantum-cryptography",
            "tls"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-04-24T10:22:24Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ac6108314e00a081db63d2520adb6a5eddd6a58e5ce38a3d4c3d616a2d366dbb/bcgit/bc-java"
        ],
        "homepage": "https://www.bouncycastle.org/java.html",
        "readme_summary": "The Bouncy Castle Crypto Package is a Java library providing a wide range of cryptographic algorithms. It offers a lightweight API suitable for various environments and conforms to the JCE framework. The library supports building and testing with modern JDKs and provides signed Maven artifacts for secure dependency management.",
        "key_features": [
            "Java implementation of cryptographic algorithms",
            "Lightweight API suitable for various environments including J2ME",
            "Conforms algorithms to the JCE framework",
            "Supports building and testing with JDK21",
            "Maven artifacts are signed with a public key"
        ],
        "primary_use_case": "Providing a comprehensive Java library for cryptographic algorithms and protocols, suitable for a wide range of environments and applications.",
        "open_issues": 296,
        "cover_image_prompt": "A master locksmith crafting intricate, glowing keys (cryptographic algorithms) at a high-tech workbench. Each key unlocks a different digital vault (data protection). UI elements display code snippets and security protocols. The workbench is set in a futuristic workshop with soft, focused lighting. The repository name, 'Bouncy Castle,' is subtly engraved on the workbench. The composition is clean and focused with a blue and green color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 259256617,
        "name": "dataframe",
        "description": "Structured data processing in Kotlin",
        "url": "https://github.com/Kotlin/dataframe",
        "language": "Kotlin",
        "stars": 908,
        "forks": 73,
        "created_at": "2020-04-27T08:46:20Z",
        "updated_at": "2025-05-18T10:01:44Z",
        "topics": [
            "data-analysis",
            "data-science",
            "dataframe",
            "kotlin"
        ],
        "quality_score": 0.95,
        "contributors_count": 0,
        "last_commit_date": "2025-05-15T19:54:46Z",
        "media_urls": [
            "https://opengraph.githubassets.com/46a74b9aced740398d3aaf098eb530158e6bdd494a5ae9687d893c1c20c18a6d/Kotlin/dataframe"
        ],
        "homepage": "https://kotlin.github.io/dataframe",
        "readme_summary": "Kotlin DataFrame provides a typesafe and functional approach to structured data processing in Kotlin. It allows developers to work with hierarchical data, perform transformations using a readable DSL, and ensures type safety with Kotlin's null safety features. The library integrates well with Kotlin's ecosystem and supports various data formats.",
        "key_features": [
            "Hierarchical data representation",
            "Functional data processing pipeline",
            "Readable DSL for data transformation",
            "Typesafe data access with Kotlin-style null safety",
            "Polymorphic type compatibility based on column schema",
            "Interoperable with Kotlin data classes and collections"
        ],
        "primary_use_case": "Typesafe in-memory structured data processing for JVM using Kotlin.",
        "open_issues": 227,
        "cover_image_prompt": "Imagine a skilled cartographer meticulously charting a vast, uncharted territory of data. The cartographer uses a special lens that reveals hidden patterns and structures within the landscape, transforming raw data points into a beautifully organized map. The map is displayed on a glowing tablet, showcasing clear routes and points of interest. Subtle digital particles flow from the lens, representing the transformation process. The scene is set in a bright, airy study filled with scrolls and reference materials. The image should be in a clean, 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 154624236,
        "name": "mqcloud",
        "description": "RocketMQ企业级一站式服务平台",
        "url": "https://github.com/sohutv/mqcloud",
        "language": "Java",
        "stars": 2159,
        "forks": 278,
        "created_at": "2018-10-25T06:56:26Z",
        "updated_at": "2025-04-30T07:51:35Z",
        "topics": [
            "cloud-native",
            "eventing",
            "java",
            "messaging",
            "mqcloud",
            "rocketmq",
            "streaming"
        ],
        "quality_score": 0.6,
        "contributors_count": 0,
        "last_commit_date": "2025-04-03T06:33:45Z",
        "media_urls": [
            "https://opengraph.githubassets.com/052bb916e97712eafc2b5b9b95cde12600c90dbe15e480e13103cd80ecb5594a/sohutv/mqcloud"
        ],
        "homepage": "",
        "readme_summary": "MQCloud is an enterprise-grade platform for managing RocketMQ clusters. It provides features such as cross-cluster management, alerting, user and administrator views with key metrics, and security features. The platform aims to simplify RocketMQ operations and monitoring for enterprises.",
        "key_features": [
            "Cross-cluster management",
            "Alerting for production/consumption issues",
            "User and administrator views with relevant metrics",
            "Security features (user isolation, operation approval, data security)"
        ],
        "primary_use_case": "Centralized management and monitoring of RocketMQ clusters.",
        "open_issues": 23,
        "cover_image_prompt": "Imagine a central control tower managing air traffic for multiple airports. Each airport represents a RocketMQ cluster, with planes symbolizing messages. The control tower operator, representing MQCloud, monitors screens displaying traffic flow, potential delays (message backlog), and alerts for emergencies (failures). The screens also show user access levels and security protocols. Digital particles flow between the airports and the control tower, visualizing real-time data. The scene is set in a bright, modern control center with a clean, focused composition. The image should be in a 3D isometric illustration style with vibrant colors and clear details."
    },
    {
        "id": 286500101,
        "name": "rembg",
        "description": "Rembg is a tool to remove images background",
        "url": "https://github.com/danielgatis/rembg",
        "language": "Python",
        "stars": 18911,
        "forks": 2006,
        "created_at": "2020-08-10T14:38:24Z",
        "updated_at": "2025-05-18T09:08:13Z",
        "topics": [
            "background-removal",
            "image-processing",
            "python"
        ],
        "quality_score": 0.8499999999999999,
        "contributors_count": 0,
        "last_commit_date": "2025-05-17T21:48:36Z",
        "media_urls": [
            "https://opengraph.githubassets.com/758b0c6f8dd93f9f4fa13649fa353709b81f82d8aa64397c183a54282ac9d7bb/danielgatis/rembg"
        ],
        "homepage": "",
        "readme_summary": "Rembg is a tool designed for image background removal. It allows users to easily isolate the foreground subject of an image by automatically removing the background. The tool is intended for various applications where background removal is necessary.",
        "key_features": [
            "Image background removal"
        ],
        "primary_use_case": "Removing backgrounds from images",
        "open_issues": 4,
        "cover_image_prompt": "A skilled sculptor meticulously chiseling away the background of a marble statue, revealing the pristine figure beneath. The sculptor uses digital tools, with faint UI elements projected onto the statue. The background crumbles into digital particles, showcasing the removal process. The scene is set in a bright, modern art studio with soft, diffused lighting. Small screens display the 'rembg' logo and before/after images. The composition is clean and focused, with a warm color scheme. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    }
]