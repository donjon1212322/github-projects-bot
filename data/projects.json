[
    {
        "id": 958149597,
        "name": "answergit",
        "description": "AnswerGit is a platform that allows you to analyze Git repositories and ask AI questions about the code. It uses AI to provide detailed explanations and summaries of Git commands, workflows, and code structure, making it easier to understand and interact with code repositories.",
        "url": "https://github.com/TharaneshA/answergit",
        "language": "TypeScript",
        "stars": 37,
        "forks": 6,
        "created_at": "2025-03-31T18:13:25Z",
        "updated_at": "2025-07-03T09:34:29Z",
        "topics": [
            "ai",
            "answergit",
            "explanation",
            "gemini",
            "git",
            "git-repository",
            "github",
            "github-repositories",
            "github-repository",
            "github-search-repository",
            "repo",
            "repository",
            "vercel"
        ],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-05-17T04:11:59Z",
        "media_urls": [
            "https://opengraph.githubassets.com/1b57b3fbb4fef4bbd96911c75e74dc59dd62d68196bfb5df842effd30319ea66/TharaneshA/answergit"
        ],
        "homepage": "https://answergit.vercel.app",
        "readme_summary": "AnswerGit is an AI-powered platform designed to help users understand and explore Git repositories. It leverages Google's Gemini AI to provide intelligent insights, a smart file explorer for easy navigation, and an interactive chat feature for asking questions about the codebase. The platform offers a modern, responsive UI built with TailwindCSS, providing real-time updates and seamless access on both desktop and mobile devices.",
        "key_features": [
            "AI-Powered Analysis using Google's Gemini AI",
            "Smart File Explorer for easy navigation",
            "Interactive Chat for codebase questions",
            "Modern UI with dark-mode built with TailwindCSS",
            "Real-time Updates",
            "Responsive Design for desktop and mobile"
        ],
        "primary_use_case": "Analyzing Git repositories and asking AI questions about the code to understand and interact with code repositories more easily.",
        "open_issues": 0,
        "cover_image_prompt": "A curious librarian stands amidst towering shelves of code repositories, holding a glowing magnifying glass that transforms complex code into simple, understandable explanations. The magnifying glass projects AI insights onto floating screens, revealing dependencies and potential issues. The librarian smiles, surrounded by digital particles forming Git branches and commits. Small UI elements display AnswerGit's interface, subtly integrated into the scene. The setting is a bright, modern library with warm lighting. The image should be in a 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 877568520,
        "name": "kmp3",
        "description": "my take on cli music player",
        "url": "https://github.com/korei999/kmp3",
        "language": "C++",
        "stars": 30,
        "forks": 1,
        "created_at": "2024-10-23T21:58:02Z",
        "updated_at": "2025-07-03T06:23:50Z",
        "topics": [],
        "quality_score": 0.44999999999999996,
        "contributors_count": 0,
        "last_commit_date": "2025-07-02T21:22:17Z",
        "media_urls": [
            "https://opengraph.githubassets.com/ca1e3278179372ae2584236c0af65005dbce72e1e9dbcc1ddc388ea6339fcc15/korei999/kmp3"
        ],
        "homepage": "",
        "readme_summary": "kmp3 is a command-line music player written in C++. It supports a wide range of audio and video formats, displays cover images, and offers MPRIS D-Bus controls for external control. The player features customizable keybindings, playback speed adjustment, and mouse support for an enhanced user experience.",
        "key_features": [
            "Plays most audio/video formats",
            "Cover image display",
            "MPRIS D-Bus controls",
            "Variable playback speed",
            "Mouse support"
        ],
        "primary_use_case": "Command-line music player",
        "open_issues": 0,
        "cover_image_prompt": "A skilled conductor orchestrating a symphony of audio and video files, seamlessly blending various formats into a harmonious performance. The conductor stands before a grand console adorned with vintage knobs and modern digital displays, subtly showing waveforms and playback controls. Musical notes and video frames float around the conductor, converging into a single stream of media. The repository name, 'kmp3', is subtly etched onto the console. The scene is set in a dimly lit concert hall with a focused spotlight on the conductor. The image should be in a digital painting style with vibrant colors and clear outlines."
    },
    {
        "id": 53235287,
        "name": "sshtron",
        "description": "$ ssh sshtron.zachlatta.com",
        "url": "https://github.com/zachlatta/sshtron",
        "language": "Go",
        "stars": 2354,
        "forks": 113,
        "created_at": "2016-03-06T03:15:11Z",
        "updated_at": "2025-07-03T09:57:06Z",
        "topics": [
            "game",
            "go",
            "ssh"
        ],
        "quality_score": 0.45,
        "contributors_count": 0,
        "last_commit_date": "2023-05-15T15:06:04Z",
        "media_urls": [
            "https://opengraph.githubassets.com/8cc3227b3169d1575e2e82c7920ca8aecbb55e4b2f4f7abc59854b8ef4073a5d/zachlatta/sshtron"
        ],
        "homepage": "http://sshtron.zachlatta.com",
        "readme_summary": "SSHTron is a multiplayer lightcycle game accessible through SSH. It allows users to play a classic arcade game directly in their terminal. The game offers customizable player colors and the option to host a private server using Docker.",
        "key_features": [
            "Multiplayer lightcycle game",
            "Runs through SSH",
            "Customizable player colors",
            "Option to run your own server using Docker"
        ],
        "primary_use_case": "Playing a multiplayer lightcycle game via SSH.",
        "open_issues": 6,
        "cover_image_prompt": "Imagine a bustling arcade where players are intensely focused on glowing light cycle games projected onto the walls. Instead of traditional consoles, players are typing commands into vintage computer terminals, their fingers flying across the keyboards. The game's light trails are vividly colored, contrasting against the dark arcade. A subtle overlay of SSH command prompts and server logs flickers in the background, connecting the game to its underlying technology. The scene is lit with neon lights and has a retro-futuristic feel. The image should be in a 3D isometric illustration style with vibrant colors and sharp details."
    },
    {
        "id": 770117461,
        "name": "rsql",
        "description": "Command line SQL interface for relational databases and common data file formats",
        "url": "https://github.com/theseus-rs/rsql",
        "language": "Rust",
        "stars": 321,
        "forks": 10,
        "created_at": "2024-03-11T00:16:55Z",
        "updated_at": "2025-07-03T07:09:10Z",
        "topics": [
            "cockroachdb",
            "command-line",
            "csv",
            "data",
            "database",
            "duckdb",
            "json",
            "mariadb",
            "mysql",
            "parquet",
            "postgres",
            "postgresql",
            "redshift",
            "snowflake",
            "sql",
            "sqlite",
            "sqlite3",
            "sqlserver"
        ],
        "quality_score": 0.85,
        "contributors_count": 0,
        "last_commit_date": "2025-07-02T22:26:39Z",
        "media_urls": [
            "https://opengraph.githubassets.com/35aa2001a45c9c537499f4e388399a14b537e68fedf87623304208e6c33af34f/theseus-rs/rsql"
        ],
        "homepage": "https://theseus-rs.github.io/rsql/rsql_cli/",
        "readme_summary": "rsql is a command-line SQL interface designed for querying data across various relational databases and common data file formats. It supports a wide range of data sources and compression formats. The tool offers features like syntax highlighting, result highlighting, query auto-completion, history, and SQL file execution, enhancing the user experience.",
        "key_features": [
            "Supports a wide variety of data sources (Arrow, Avro, CockroachDB, CrateDB, CSV, Delimited, DuckDB, DynamoDB, Excel, FlightSQL, FWF, JSON, JSONL, LibSQL (Turso), MariaDB, MySQL, ODS, ORC, Parquet, PostgreSQL, Redshift, Snowflake, SQLite3, SQL Server, TSV, XML, YAML)",
            "Supports various compression formats (Brotli, Bzip2, Gzip, LZ4, XZ, Zstd)",
            "Syntax highlighting",
            "Result highlighting",
            "Query auto-completion",
            "History",
            "SQL file execution"
        ],
        "primary_use_case": "Command-line SQL interface for querying data from various relational databases and common data file formats.",
        "open_issues": 15,
        "cover_image_prompt": "A skilled artisan meticulously shaping raw data crystals into polished SQL gems at a high-tech workbench. The artisan uses specialized tools that emit digital sparks, refining the crystals with precision. Finished gems are displayed on a screen showing SQL queries and results. The workbench is surrounded by shelves filled with data sources like CSV scrolls and JSON artifacts. The scene is set in a brightly lit, futuristic workshop. Small UI elements display the `rsql` logo. The composition is clean and focused with a vibrant color scheme. The image should be in 3D isometric illustration style with rich details and vibrant colors."
    },
    {
        "id": 429870498,
        "name": "researcher-webextension",
        "description": "WebExtension to full-text search your bookmarks.",
        "url": "https://github.com/andots/researcher-webextension",
        "language": "TypeScript",
        "stars": 27,
        "forks": 5,
        "created_at": "2021-11-19T16:48:27Z",
        "updated_at": "2025-07-03T09:08:20Z",
        "topics": [
            "bookmarks",
            "elasticsearch",
            "fulltext-search",
            "preact",
            "react",
            "search",
            "webextension"
        ],
        "quality_score": 0.25,
        "contributors_count": 0,
        "last_commit_date": "2021-12-10T17:37:23Z",
        "media_urls": [
            "https://opengraph.githubassets.com/6c105823ce1f59389e4d6ed3a385c9c5150186984250e54e3c592fdbdaaf1d71/andots/researcher-webextension"
        ],
        "homepage": "",
        "readme_summary": "RE:SEARCHER is a web extension that transforms your browser bookmarks into a personal, full-text searchable knowledge base. It leverages Elasticsearch for powerful querying, supports multiple languages, and stores all data locally. Features include content extraction, syntax highlighting, flexible search results, and organization tools like 'Read Later' and star ratings.",
        "key_features": [
            "Full-text search of bookmarks using Elasticsearch query syntax",
            "Multilingual index/search support",
            "Local bookmark storage",
            "Browser extension for easy bookmarking and import",
            "Content extraction and simple page view",
            "Automatic syntax highlighting for code snippets",
            "Flexible search result UI",
            "Read Later functionality",
            "Favorite star ranking",
            "Video bookmark support (YouTube)"
        ],
        "primary_use_case": "Personal search engine for bookmarks, enabling full-text search and organization.",
        "open_issues": 1,
        "cover_image_prompt": "Imagine a librarian meticulously organizing a vast collection of books, each representing a bookmarked webpage. The librarian uses a special magnifying glass that highlights keywords and extracts content, seamlessly indexing each book into a digital catalog. The catalog's interface glows with search results, displaying relevant excerpts and links. Subtle UI elements float around the scene, showing search queries and bookmark previews. The setting is a modern library with warm lighting and a touch of futuristic technology. The image should be in a detailed digital painting style with clear outlines and a focus on usability."
    },
    {
        "id": 867344664,
        "name": "dockerify-android",
        "description": "A Dockerized Android emulator supporting multiple CPU architectures (x86 and arm64) with native performance and seamless ADB & Scrcpy Web access.",
        "url": "https://github.com/Shmayro/dockerify-android",
        "language": "Dockerfile",
        "stars": 259,
        "forks": 21,
        "created_at": "2024-10-03T22:12:45Z",
        "updated_at": "2025-07-03T09:09:07Z",
        "topics": [
            "android",
            "android-emulator",
            "ci-pipline",
            "docker",
            "docker-android",
            "magisk",
            "root-android",
            "rooted-android",
            "scrcpy-android",
            "scrcpy-web"
        ],
        "quality_score": 0.65,
        "contributors_count": 0,
        "last_commit_date": "2025-04-22T22:14:20Z",
        "media_urls": [
            "https://opengraph.githubassets.com/41b1889a9730cf3260e755477857a71908b0a4de5752e81e7a213819e785d911/Shmayro/dockerify-android"
        ],
        "homepage": "",
        "readme_summary": "Dockerify Android provides a Dockerized Android emulator with support for multiple CPU architectures, offering native performance and seamless ADB & Web access. It allows developers to efficiently run Android virtual devices (AVDs) within Docker containers, facilitating scalable testing and development. Key features include a web interface, root access with Magisk, PICO GAPPS, and scrcpy support.",
        "key_features": [
            "Web Interface (scrcpy-web)",
            "Root and Magisk Preinstalled",
            "PICO GAPPS Preinstalled",
            "Seamless ADB Access",
            "scrcpy Support",
            "Optimized Performance",
            "Multi-Architecture Support (x86 and arm64)",
            "Docker Integration",
            "Easy Setup",
            "Supervisor Management",
            "Unified Container Logs"
        ],
        "primary_use_case": "Running Android emulators in Docker containers for scalable testing and development environments.",
        "open_issues": 4,
        "cover_image_prompt": "Imagine a skilled shipbuilder inside a high-tech dry dock, carefully constructing a miniature Android device within a sturdy Docker container. The container is being lifted by a crane labeled 'CI/CD Pipeline' towards a vast ocean representing the web. The shipbuilder uses tools that project ADB commands and Scrcpy screens onto holographic displays. The dry dock is filled with glowing digital particles and subtle code snippets. The scene is brightly lit, showcasing the precision and efficiency of the process. The image should be in 3D isometric illustration style with vibrant colors and crisp details."
    }
]