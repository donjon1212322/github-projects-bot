{
    "article": {
        "title": "OCRmyPDF: The Magic Wand for Your Scanned PDFs",
        "body_markdown": "---\ntitle: OCRmyPDF: The Magic Wand for Your Scanned PDFs\npublished: True\ntags: ocr, pdf, tesseract, commandline\n---\n\n## Quick Summary: 📝\nOCRmyPDF adds a searchable text layer to scanned PDFs, making them searchable and copyable. It optimizes images, deskews when needed, and uses Tesseract OCR to support many languages. The tool produces PDF/A compliant files and distributes processing across multiple CPU cores.\n\n## Key Takeaways: 💡\n\n* ✅ Transforms unsearchable scanned PDFs into searchable and copy-pasteable PDFs.\n\n* ✅ Uses powerful OCR engine (Tesseract) for accurate text extraction.\n\n* ✅ Optimizes PDF images, often resulting in smaller file sizes.\n\n* ✅ Supports multiple languages and creates PDF/A files for long-term archiving.\n\n* ✅ Easy to use command-line interface and available on multiple platforms (Linux, Windows, macOS, FreeBSD).\n\n\n## Project Statistics: 📊\n* ⭐ **Stars:** 28797\n* 🍴 **Forks:** 1962\n* ❗ **Open Issues:** 128\n\n\n## Tech Stack: 💻\n- ✅ Python\n\n\nEver struggled with scanned PDFs that you can't search or copy-paste from?  Frustrating, right?  Meet OCRmyPDF, a command-line tool that's a game-changer for anyone working with scanned documents.  It takes your messy, unsearchable PDFs and transforms them into easily searchable, copy-pasteable, and even better quality PDFs. Think of it as a magic wand for your scanned documents!\n\nSo, how does this magic work?  OCRmyPDF uses a powerful OCR (Optical Character Recognition) engine called Tesseract.  Tesseract analyzes the images in your PDF and extracts the text.  But here's the clever part: OCRmyPDF doesn't just slap the text onto the page anywhere. It carefully places the text layer *underneath* the image, preserving the original document's layout. This means you can copy-paste text accurately and easily, without the frustration of misaligned characters.\n\nBut OCRmyPDF does more than just basic OCR. It also optimizes your PDF images, often resulting in smaller file sizes. It can even automatically correct rotated or skewed pages, saving you the tedious manual work.  It supports multiple languages and produces PDF/A files, which are ideal for long-term archiving.  The best part?  It's incredibly fast, using multiple CPU cores to process your PDFs efficiently, even those with thousands of pages.\n\nWhy should you, a developer, care?  Imagine the time you'll save when dealing with scanned documents. No more manual typing, no more struggling with unsearchable PDFs.  OCRmyPDF seamlessly integrates into your workflow, whether you're building a document processing pipeline or simply need a quick way to make scanned documents usable. Its simple command-line interface makes it easy to automate, and its open-source nature ensures transparency and community support.\n\nThe project is battle-tested on millions of PDFs, meaning it's reliable and robust.  It's available on Linux, Windows, macOS, and FreeBSD, with easy installation options via package managers or Docker.   It's truly a powerful tool that simplifies a common pain point for developers and anyone who works with scanned documents.  Give it a try; you won't be disappointed!\n\n## Learn More: 🔗\n[View the Project on GitHub](https://github.com/ocrmypdf/OCRmyPDF)\n\n---\n## 🌟 Stay Connected with GitHub Open Source!\n\n> 📱 **Join us on Telegram**  \n> Get daily updates on the best open-source projects  \n> [GitHub Open Source](https://t.me/GitHub_Open_Source)\n\n> 👥 **Follow us on Facebook**  \n> Connect with our community and never miss a discovery  \n> [GitHub Open Source](https://www.facebook.com/people/GitHub-Open-Source/61571925474856/)",
        "tags": [
            "ocr",
            "pdf",
            "tesseract",
            "commandline"
        ],
        "description": "OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them to be searched",
        "published": false,
        "project_id": 15333471
    }
}